!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(e,t){"use strict";function n(e,t){t=t||ne;var n=t.createElement("script");n.text=e,t.head.appendChild(n).parentNode.removeChild(n)}function i(e){var t=!!e&&"length"in e&&e.length,n=me.type(e);return"function"!==n&&!me.isWindow(e)&&("array"===n||0===t||"number"==typeof t&&t>0&&t-1 in e)}function r(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}function o(e,t,n){return me.isFunction(t)?me.grep(e,function(e,i){return!!t.call(e,i,e)!==n}):t.nodeType?me.grep(e,function(e){return e===t!==n}):"string"!=typeof t?me.grep(e,function(e){return se.call(t,e)>-1!==n}):Te.test(t)?me.filter(t,e,n):(t=me.filter(t,e),me.grep(e,function(e){return se.call(t,e)>-1!==n&&1===e.nodeType}))}function a(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}function s(e){var t={};return me.each(e.match(Oe)||[],function(e,n){t[n]=!0}),t}function l(e){return e}function u(e){throw e}function c(e,t,n,i){var r;try{e&&me.isFunction(r=e.promise)?r.call(e).done(t).fail(n):e&&me.isFunction(r=e.then)?r.call(e,t,n):t.apply(void 0,[e].slice(i))}catch(e){n.apply(void 0,[e])}}function p(){ne.removeEventListener("DOMContentLoaded",p),e.removeEventListener("load",p),me.ready()}function f(){this.expando=me.expando+f.uid++}function d(e){return"true"===e||"false"!==e&&("null"===e?null:e===+e+""?+e:He.test(e)?JSON.parse(e):e)}function h(e,t,n){var i;if(void 0===n&&1===e.nodeType)if(i="data-"+t.replace(Ie,"-$&").toLowerCase(),n=e.getAttribute(i),"string"==typeof n){try{n=d(n)}catch(r){}_e.set(e,t,n)}else n=void 0;return n}function m(e,t,n,i){var r,o=1,a=20,s=i?function(){return i.cur()}:function(){return me.css(e,t,"")},l=s(),u=n&&n[3]||(me.cssNumber[t]?"":"px"),c=(me.cssNumber[t]||"px"!==u&&+l)&&Be.exec(me.css(e,t));if(c&&c[3]!==u){u=u||c[3],n=n||[],c=+l||1;do o=o||".5",c/=o,me.style(e,t,c+u);while(o!==(o=s()/l)&&1!==o&&--a)}return n&&(c=+c||+l||0,r=n[1]?c+(n[1]+1)*n[2]:+n[2],i&&(i.unit=u,i.start=c,i.end=r)),r}function g(e){var t,n=e.ownerDocument,i=e.nodeName,r=We[i];return r?r:(t=n.body.appendChild(n.createElement(i)),r=me.css(t,"display"),t.parentNode.removeChild(t),"none"===r&&(r="block"),We[i]=r,r)}function v(e,t){for(var n,i,r=[],o=0,a=e.length;o<a;o++)i=e[o],i.style&&(n=i.style.display,t?("none"===n&&(r[o]=Re.get(i,"display")||null,r[o]||(i.style.display="")),""===i.style.display&&Ge(i)&&(r[o]=g(i))):"none"!==n&&(r[o]="none",Re.set(i,"display",n)));for(o=0;o<a;o++)null!=r[o]&&(e[o].style.display=r[o]);return e}function y(e,t){var n;return n="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&r(e,t)?me.merge([e],n):n}function b(e,t){for(var n=0,i=e.length;n<i;n++)Re.set(e[n],"globalEval",!t||Re.get(t[n],"globalEval"))}function k(e,t,n,i,r){for(var o,a,s,l,u,c,p=t.createDocumentFragment(),f=[],d=0,h=e.length;d<h;d++)if(o=e[d],o||0===o)if("object"===me.type(o))me.merge(f,o.nodeType?[o]:o);else if(Qe.test(o)){for(a=a||p.appendChild(t.createElement("div")),s=(ze.exec(o)||["",""])[1].toLowerCase(),l=Xe[s]||Xe._default,a.innerHTML=l[1]+me.htmlPrefilter(o)+l[2],c=l[0];c--;)a=a.lastChild;me.merge(f,a.childNodes),a=p.firstChild,a.textContent=""}else f.push(t.createTextNode(o));for(p.textContent="",d=0;o=f[d++];)if(i&&me.inArray(o,i)>-1)r&&r.push(o);else if(u=me.contains(o.ownerDocument,o),a=y(p.appendChild(o),"script"),u&&b(a),n)for(c=0;o=a[c++];)Ke.test(o.type||"")&&n.push(o);return p}function x(){return!0}function w(){return!1}function C(){try{return ne.activeElement}catch(e){}}function S(e,t,n,i,r,o){var a,s;if("object"==typeof t){"string"!=typeof n&&(i=i||n,n=void 0);for(s in t)S(e,s,n,i,t[s],o);return e}if(null==i&&null==r?(r=n,i=n=void 0):null==r&&("string"==typeof n?(r=i,i=void 0):(r=i,i=n,n=void 0)),r===!1)r=w;else if(!r)return e;return 1===o&&(a=r,r=function(e){return me().off(e),a.apply(this,arguments)},r.guid=a.guid||(a.guid=me.guid++)),e.each(function(){me.event.add(this,t,r,i,n)})}function T(e,t){return r(e,"table")&&r(11!==t.nodeType?t:t.firstChild,"tr")?me(">tbody",e)[0]||e:e}function P(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function E(e){var t=rt.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function A(e,t){var n,i,r,o,a,s,l,u;if(1===t.nodeType){if(Re.hasData(e)&&(o=Re.access(e),a=Re.set(t,o),u=o.events)){delete a.handle,a.events={};for(r in u)for(n=0,i=u[r].length;n<i;n++)me.event.add(t,r,u[r][n])}_e.hasData(e)&&(s=_e.access(e),l=me.extend({},s),_e.set(t,l))}}function D(e,t){var n=t.nodeName.toLowerCase();"input"===n&&Ve.test(e.type)?t.checked=e.checked:"input"!==n&&"textarea"!==n||(t.defaultValue=e.defaultValue)}function j(e,t,i,r){t=oe.apply([],t);var o,a,s,l,u,c,p=0,f=e.length,d=f-1,h=t[0],m=me.isFunction(h);if(m||f>1&&"string"==typeof h&&!de.checkClone&&it.test(h))return e.each(function(n){var o=e.eq(n);m&&(t[0]=h.call(this,n,o.html())),j(o,t,i,r)});if(f&&(o=k(t,e[0].ownerDocument,!1,e,r),a=o.firstChild,1===o.childNodes.length&&(o=a),a||r)){for(s=me.map(y(o,"script"),P),l=s.length;p<f;p++)u=o,p!==d&&(u=me.clone(u,!0,!0),l&&me.merge(s,y(u,"script"))),i.call(e[p],u,p);if(l)for(c=s[s.length-1].ownerDocument,me.map(s,E),p=0;p<l;p++)u=s[p],Ke.test(u.type||"")&&!Re.access(u,"globalEval")&&me.contains(c,u)&&(u.src?me._evalUrl&&me._evalUrl(u.src):n(u.textContent.replace(ot,""),c))}return e}function O(e,t,n){for(var i,r=t?me.filter(t,e):e,o=0;null!=(i=r[o]);o++)n||1!==i.nodeType||me.cleanData(y(i)),i.parentNode&&(n&&me.contains(i.ownerDocument,i)&&b(y(i,"script")),i.parentNode.removeChild(i));return e}function M(e,t,n){var i,r,o,a,s=e.style;return n=n||lt(e),n&&(a=n.getPropertyValue(t)||n[t],""!==a||me.contains(e.ownerDocument,e)||(a=me.style(e,t)),!de.pixelMarginRight()&&st.test(a)&&at.test(t)&&(i=s.width,r=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=i,s.minWidth=r,s.maxWidth=o)),void 0!==a?a+"":a}function N(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}function F(e){if(e in ht)return e;for(var t=e[0].toUpperCase()+e.slice(1),n=dt.length;n--;)if(e=dt[n]+t,e in ht)return e}function L(e){var t=me.cssProps[e];return t||(t=me.cssProps[e]=F(e)||e),t}function R(e,t,n){var i=Be.exec(t);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):t}function _(e,t,n,i,r){var o,a=0;for(o=n===(i?"border":"content")?4:"width"===t?1:0;o<4;o+=2)"margin"===n&&(a+=me.css(e,n+$e[o],!0,r)),i?("content"===n&&(a-=me.css(e,"padding"+$e[o],!0,r)),"margin"!==n&&(a-=me.css(e,"border"+$e[o]+"Width",!0,r))):(a+=me.css(e,"padding"+$e[o],!0,r),"padding"!==n&&(a+=me.css(e,"border"+$e[o]+"Width",!0,r)));return a}function H(e,t,n){var i,r=lt(e),o=M(e,t,r),a="border-box"===me.css(e,"boxSizing",!1,r);return st.test(o)?o:(i=a&&(de.boxSizingReliable()||o===e.style[t]),"auto"===o&&(o=e["offset"+t[0].toUpperCase()+t.slice(1)]),o=parseFloat(o)||0,o+_(e,t,n||(a?"border":"content"),i,r)+"px")}function I(e,t,n,i,r){return new I.prototype.init(e,t,n,i,r)}function q(){gt&&(ne.hidden===!1&&e.requestAnimationFrame?e.requestAnimationFrame(q):e.setTimeout(q,me.fx.interval),me.fx.tick())}function B(){return e.setTimeout(function(){mt=void 0}),mt=me.now()}function $(e,t){var n,i=0,r={height:e};for(t=t?1:0;i<4;i+=2-t)n=$e[i],r["margin"+n]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}function G(e,t,n){for(var i,r=(V.tweeners[t]||[]).concat(V.tweeners["*"]),o=0,a=r.length;o<a;o++)if(i=r[o].call(n,t,e))return i}function U(e,t,n){var i,r,o,a,s,l,u,c,p="width"in t||"height"in t,f=this,d={},h=e.style,m=e.nodeType&&Ge(e),g=Re.get(e,"fxshow");n.queue||(a=me._queueHooks(e,"fx"),null==a.unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,f.always(function(){f.always(function(){a.unqueued--,me.queue(e,"fx").length||a.empty.fire()})}));for(i in t)if(r=t[i],vt.test(r)){if(delete t[i],o=o||"toggle"===r,r===(m?"hide":"show")){if("show"!==r||!g||void 0===g[i])continue;m=!0}d[i]=g&&g[i]||me.style(e,i)}if(l=!me.isEmptyObject(t),l||!me.isEmptyObject(d)){p&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],u=g&&g.display,null==u&&(u=Re.get(e,"display")),c=me.css(e,"display"),"none"===c&&(u?c=u:(v([e],!0),u=e.style.display||u,c=me.css(e,"display"),v([e]))),("inline"===c||"inline-block"===c&&null!=u)&&"none"===me.css(e,"float")&&(l||(f.done(function(){h.display=u}),null==u&&(c=h.display,u="none"===c?"":c)),h.display="inline-block")),n.overflow&&(h.overflow="hidden",f.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),l=!1;for(i in d)l||(g?"hidden"in g&&(m=g.hidden):g=Re.access(e,"fxshow",{display:u}),o&&(g.hidden=!m),m&&v([e],!0),f.done(function(){m||v([e]),Re.remove(e,"fxshow");for(i in d)me.style(e,i,d[i])})),l=G(m?g[i]:0,i,f),i in g||(g[i]=l.start,m&&(l.end=l.start,l.start=0))}}function W(e,t){var n,i,r,o,a;for(n in e)if(i=me.camelCase(n),r=t[i],o=e[n],Array.isArray(o)&&(r=o[1],o=e[n]=o[0]),n!==i&&(e[i]=o,delete e[n]),a=me.cssHooks[i],a&&"expand"in a){o=a.expand(o),delete e[i];for(n in o)n in e||(e[n]=o[n],t[n]=r)}else t[i]=r}function V(e,t,n){var i,r,o=0,a=V.prefilters.length,s=me.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var t=mt||B(),n=Math.max(0,u.startTime+u.duration-t),i=n/u.duration||0,o=1-i,a=0,l=u.tweens.length;a<l;a++)u.tweens[a].run(o);return s.notifyWith(e,[u,o,n]),o<1&&l?n:(l||s.notifyWith(e,[u,1,0]),s.resolveWith(e,[u]),!1)},u=s.promise({elem:e,props:me.extend({},t),opts:me.extend(!0,{specialEasing:{},easing:me.easing._default},n),originalProperties:t,originalOptions:n,startTime:mt||B(),duration:n.duration,tweens:[],createTween:function(t,n){var i=me.Tween(e,u.opts,t,n,u.opts.specialEasing[t]||u.opts.easing);return u.tweens.push(i),i},stop:function(t){var n=0,i=t?u.tweens.length:0;if(r)return this;for(r=!0;n<i;n++)u.tweens[n].run(1);return t?(s.notifyWith(e,[u,1,0]),s.resolveWith(e,[u,t])):s.rejectWith(e,[u,t]),this}}),c=u.props;for(W(c,u.opts.specialEasing);o<a;o++)if(i=V.prefilters[o].call(u,e,c,u.opts))return me.isFunction(i.stop)&&(me._queueHooks(u.elem,u.opts.queue).stop=me.proxy(i.stop,i)),i;return me.map(c,G,u),me.isFunction(u.opts.start)&&u.opts.start.call(e,u),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always),me.fx.timer(me.extend(l,{elem:e,anim:u,queue:u.opts.queue})),u}function z(e){var t=e.match(Oe)||[];return t.join(" ")}function K(e){return e.getAttribute&&e.getAttribute("class")||""}function X(e,t,n,i){var r;if(Array.isArray(t))me.each(t,function(t,r){n||At.test(e)?i(e,r):X(e+"["+("object"==typeof r&&null!=r?t:"")+"]",r,n,i)});else if(n||"object"!==me.type(t))i(e,t);else for(r in t)X(e+"["+r+"]",t[r],n,i)}function Q(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var i,r=0,o=t.toLowerCase().match(Oe)||[];if(me.isFunction(n))for(;i=o[r++];)"+"===i[0]?(i=i.slice(1)||"*",(e[i]=e[i]||[]).unshift(n)):(e[i]=e[i]||[]).push(n)}}function Y(e,t,n,i){function r(s){var l;return o[s]=!0,me.each(e[s]||[],function(e,s){var u=s(t,n,i);return"string"!=typeof u||a||o[u]?a?!(l=u):void 0:(t.dataTypes.unshift(u),r(u),!1)}),l}var o={},a=e===qt;return r(t.dataTypes[0])||!o["*"]&&r("*")}function J(e,t){var n,i,r=me.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((r[n]?e:i||(i={}))[n]=t[n]);return i&&me.extend(!0,e,i),e}function Z(e,t,n){for(var i,r,o,a,s=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=e.mimeType||t.getResponseHeader("Content-Type"));if(i)for(r in s)if(s[r]&&s[r].test(i)){l.unshift(r);break}if(l[0]in n)o=l[0];else{for(r in n){if(!l[0]||e.converters[r+" "+l[0]]){o=r;break}a||(a=r)}o=o||a}if(o)return o!==l[0]&&l.unshift(o),n[o]}function ee(e,t,n,i){var r,o,a,s,l,u={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)u[a.toLowerCase()]=e.converters[a];for(o=c.shift();o;)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!l&&i&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=o,o=c.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(a=u[l+" "+o]||u["* "+o],!a)for(r in u)if(s=r.split(" "),s[1]===o&&(a=u[l+" "+s[0]]||u["* "+s[0]])){a===!0?a=u[r]:u[r]!==!0&&(o=s[0],c.unshift(s[1]));break}if(a!==!0)if(a&&e["throws"])t=a(t);else try{t=a(t)}catch(p){return{state:"parsererror",error:a?p:"No conversion from "+l+" to "+o}}}return{state:"success",data:t}}var te=[],ne=e.document,ie=Object.getPrototypeOf,re=te.slice,oe=te.concat,ae=te.push,se=te.indexOf,le={},ue=le.toString,ce=le.hasOwnProperty,pe=ce.toString,fe=pe.call(Object),de={},he="3.2.1",me=function(e,t){return new me.fn.init(e,t)},ge=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,ve=/^-ms-/,ye=/-([a-z])/g,be=function(e,t){return t.toUpperCase()};me.fn=me.prototype={jquery:he,constructor:me,length:0,toArray:function(){return re.call(this)},get:function(e){return null==e?re.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=me.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return me.each(this,e)},map:function(e){return this.pushStack(me.map(this,function(t,n){return e.call(t,n,t)}))},slice:function(){return this.pushStack(re.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(n>=0&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:ae,sort:te.sort,splice:te.splice},me.extend=me.fn.extend=function(){var e,t,n,i,r,o,a=arguments[0]||{},s=1,l=arguments.length,u=!1;for("boolean"==typeof a&&(u=a,a=arguments[s]||{},s++),"object"==typeof a||me.isFunction(a)||(a={}),s===l&&(a=this,s--);s<l;s++)if(null!=(e=arguments[s]))for(t in e)n=a[t],i=e[t],a!==i&&(u&&i&&(me.isPlainObject(i)||(r=Array.isArray(i)))?(r?(r=!1,o=n&&Array.isArray(n)?n:[]):o=n&&me.isPlainObject(n)?n:{},a[t]=me.extend(u,o,i)):void 0!==i&&(a[t]=i));return a},me.extend({expando:"jQuery"+(he+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===me.type(e)},isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){var t=me.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==ue.call(e)||(t=ie(e))&&(n=ce.call(t,"constructor")&&t.constructor,"function"!=typeof n||pe.call(n)!==fe))},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?le[ue.call(e)]||"object":typeof e},globalEval:function(e){n(e)},camelCase:function(e){return e.replace(ve,"ms-").replace(ye,be)},each:function(e,t){var n,r=0;if(i(e))for(n=e.length;r<n&&t.call(e[r],r,e[r])!==!1;r++);else for(r in e)if(t.call(e[r],r,e[r])===!1)break;return e},trim:function(e){return null==e?"":(e+"").replace(ge,"")},makeArray:function(e,t){var n=t||[];return null!=e&&(i(Object(e))?me.merge(n,"string"==typeof e?[e]:e):ae.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:se.call(t,e,n)},merge:function(e,t){for(var n=+t.length,i=0,r=e.length;i<n;i++)e[r++]=t[i];return e.length=r,e},grep:function(e,t,n){for(var i,r=[],o=0,a=e.length,s=!n;o<a;o++)i=!t(e[o],o),i!==s&&r.push(e[o]);return r},map:function(e,t,n){var r,o,a=0,s=[];if(i(e))for(r=e.length;a<r;a++)o=t(e[a],a,n),null!=o&&s.push(o);else for(a in e)o=t(e[a],a,n),null!=o&&s.push(o);return oe.apply([],s)},guid:1,proxy:function(e,t){var n,i,r;if("string"==typeof t&&(n=e[t],t=e,e=n),me.isFunction(e))return i=re.call(arguments,2),r=function(){return e.apply(t||this,i.concat(re.call(arguments)))},r.guid=e.guid=e.guid||me.guid++,r},now:Date.now,support:de}),"function"==typeof Symbol&&(me.fn[Symbol.iterator]=te[Symbol.iterator]),me.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){le["[object "+t+"]"]=t.toLowerCase()});var ke=function(e){function t(e,t,n,i){var r,o,a,s,l,u,c,f=t&&t.ownerDocument,h=t?t.nodeType:9;if(n=n||[],"string"!=typeof e||!e||1!==h&&9!==h&&11!==h)return n;if(!i&&((t?t.ownerDocument||t:B)!==N&&M(t),t=t||N,L)){if(11!==h&&(l=ve.exec(e)))if(r=l[1]){if(9===h){if(!(a=t.getElementById(r)))return n;if(a.id===r)return n.push(a),n}else if(f&&(a=f.getElementById(r))&&I(t,a)&&a.id===r)return n.push(a),n}else{if(l[2])return J.apply(n,t.getElementsByTagName(e)),n;if((r=l[3])&&w.getElementsByClassName&&t.getElementsByClassName)return J.apply(n,t.getElementsByClassName(r)),n}if(w.qsa&&!V[e+" "]&&(!R||!R.test(e))){if(1!==h)f=t,c=e;else if("object"!==t.nodeName.toLowerCase()){for((s=t.getAttribute("id"))?s=s.replace(xe,we):t.setAttribute("id",s=q),u=P(e),o=u.length;o--;)u[o]="#"+s+" "+d(u[o]);c=u.join(","),f=ye.test(e)&&p(t.parentNode)||t}if(c)try{return J.apply(n,f.querySelectorAll(c)),n}catch(m){}finally{s===q&&t.removeAttribute("id")}}}return A(e.replace(se,"$1"),t,n,i)}function n(){function e(n,i){return t.push(n+" ")>C.cacheLength&&delete e[t.shift()],e[n+" "]=i}var t=[];return e}function i(e){return e[q]=!0,e}function r(e){var t=N.createElement("fieldset");try{return!!e(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function o(e,t){for(var n=e.split("|"),i=n.length;i--;)C.attrHandle[n[i]]=t}function a(e,t){var n=t&&e,i=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(i)return i;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function s(e){return function(t){var n=t.nodeName.toLowerCase();return"input"===n&&t.type===e}}function l(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function u(e){return function(t){return"form"in t?t.parentNode&&t.disabled===!1?"label"in t?"label"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&Se(t)===e:t.disabled===e:"label"in t&&t.disabled===e}}function c(e){return i(function(t){return t=+t,i(function(n,i){for(var r,o=e([],n.length,t),a=o.length;a--;)n[r=o[a]]&&(n[r]=!(i[r]=n[r]))})})}function p(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}function f(){}function d(e){for(var t=0,n=e.length,i="";t<n;t++)i+=e[t].value;return i}function h(e,t,n){var i=t.dir,r=t.next,o=r||i,a=n&&"parentNode"===o,s=G++;return t.first?function(t,n,r){for(;t=t[i];)if(1===t.nodeType||a)return e(t,n,r);return!1}:function(t,n,l){var u,c,p,f=[$,s];if(l){for(;t=t[i];)if((1===t.nodeType||a)&&e(t,n,l))return!0}else for(;t=t[i];)if(1===t.nodeType||a)if(p=t[q]||(t[q]={}),c=p[t.uniqueID]||(p[t.uniqueID]={}),r&&r===t.nodeName.toLowerCase())t=t[i]||t;else{if((u=c[o])&&u[0]===$&&u[1]===s)return f[2]=u[2];if(c[o]=f,f[2]=e(t,n,l))return!0}return!1}}function m(e){return e.length>1?function(t,n,i){for(var r=e.length;r--;)if(!e[r](t,n,i))return!1;return!0}:e[0]}function g(e,n,i){for(var r=0,o=n.length;r<o;r++)t(e,n[r],i);return i}function v(e,t,n,i,r){for(var o,a=[],s=0,l=e.length,u=null!=t;s<l;s++)(o=e[s])&&(n&&!n(o,i,r)||(a.push(o),u&&t.push(s)));return a}function y(e,t,n,r,o,a){return r&&!r[q]&&(r=y(r)),o&&!o[q]&&(o=y(o,a)),i(function(i,a,s,l){var u,c,p,f=[],d=[],h=a.length,m=i||g(t||"*",s.nodeType?[s]:s,[]),y=!e||!i&&t?m:v(m,f,e,s,l),b=n?o||(i?e:h||r)?[]:a:y;if(n&&n(y,b,s,l),r)for(u=v(b,d),r(u,[],s,l),c=u.length;c--;)(p=u[c])&&(b[d[c]]=!(y[d[c]]=p));if(i){if(o||e){if(o){for(u=[],c=b.length;c--;)(p=b[c])&&u.push(y[c]=p);o(null,b=[],u,l)}for(c=b.length;c--;)(p=b[c])&&(u=o?ee(i,p):f[c])>-1&&(i[u]=!(a[u]=p))}}else b=v(b===a?b.splice(h,b.length):b),o?o(null,a,b,l):J.apply(a,b)})}function b(e){for(var t,n,i,r=e.length,o=C.relative[e[0].type],a=o||C.relative[" "],s=o?1:0,l=h(function(e){return e===t},a,!0),u=h(function(e){return ee(t,e)>-1},a,!0),c=[function(e,n,i){var r=!o&&(i||n!==D)||((t=n).nodeType?l(e,n,i):u(e,n,i));return t=null,r}];s<r;s++)if(n=C.relative[e[s].type])c=[h(m(c),n)];else{if(n=C.filter[e[s].type].apply(null,e[s].matches),n[q]){for(i=++s;i<r&&!C.relative[e[i].type];i++);return y(s>1&&m(c),s>1&&d(e.slice(0,s-1).concat({value:" "===e[s-2].type?"*":""})).replace(se,"$1"),n,s<i&&b(e.slice(s,i)),i<r&&b(e=e.slice(i)),i<r&&d(e))}c.push(n)}return m(c)}function k(e,n){var r=n.length>0,o=e.length>0,a=function(i,a,s,l,u){var c,p,f,d=0,h="0",m=i&&[],g=[],y=D,b=i||o&&C.find.TAG("*",u),k=$+=null==y?1:Math.random()||.1,x=b.length;for(u&&(D=a===N||a||u);h!==x&&null!=(c=b[h]);h++){if(o&&c){for(p=0,a||c.ownerDocument===N||(M(c),s=!L);f=e[p++];)if(f(c,a||N,s)){l.push(c);break}u&&($=k)}r&&((c=!f&&c)&&d--,i&&m.push(c))}if(d+=h,r&&h!==d){for(p=0;f=n[p++];)f(m,g,a,s);if(i){if(d>0)for(;h--;)m[h]||g[h]||(g[h]=Q.call(l));g=v(g)}J.apply(l,g),u&&!i&&g.length>0&&d+n.length>1&&t.uniqueSort(l)}return u&&($=k,D=y),m};return r?i(a):a}var x,w,C,S,T,P,E,A,D,j,O,M,N,F,L,R,_,H,I,q="sizzle"+1*new Date,B=e.document,$=0,G=0,U=n(),W=n(),V=n(),z=function(e,t){return e===t&&(O=!0),0},K={}.hasOwnProperty,X=[],Q=X.pop,Y=X.push,J=X.push,Z=X.slice,ee=function(e,t){for(var n=0,i=e.length;n<i;n++)if(e[n]===t)return n;return-1},te="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ne="[\\x20\\t\\r\\n\\f]",ie="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",re="\\["+ne+"*("+ie+")(?:"+ne+"*([*^$|!~]?=)"+ne+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+ie+"))|)"+ne+"*\\]",oe=":("+ie+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+re+")*)|.*)\\)|)",ae=new RegExp(ne+"+","g"),se=new RegExp("^"+ne+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ne+"+$","g"),le=new RegExp("^"+ne+"*,"+ne+"*"),ue=new RegExp("^"+ne+"*([>+~]|"+ne+")"+ne+"*"),ce=new RegExp("="+ne+"*([^\\]'\"]*?)"+ne+"*\\]","g"),pe=new RegExp(oe),fe=new RegExp("^"+ie+"$"),de={ID:new RegExp("^#("+ie+")"),CLASS:new RegExp("^\\.("+ie+")"),TAG:new RegExp("^("+ie+"|[*])"),ATTR:new RegExp("^"+re),PSEUDO:new RegExp("^"+oe),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ne+"*(even|odd|(([+-]|)(\\d*)n|)"+ne+"*(?:([+-]|)"+ne+"*(\\d+)|))"+ne+"*\\)|)","i"),bool:new RegExp("^(?:"+te+")$","i"),needsContext:new RegExp("^"+ne+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ne+"*((?:-\\d)?\\d*)"+ne+"*\\)|)(?=[^-]|$)","i")},he=/^(?:input|select|textarea|button)$/i,me=/^h\d$/i,ge=/^[^{]+\{\s*\[native \w/,ve=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ye=/[+~]/,be=new RegExp("\\\\([\\da-f]{1,6}"+ne+"?|("+ne+")|.)","ig"),ke=function(e,t,n){var i="0x"+t-65536;return i!==i||n?t:i<0?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320)},xe=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,we=function(e,t){return t?"\0"===e?"�":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},Ce=function(){M()},Se=h(function(e){return e.disabled===!0&&("form"in e||"label"in e)},{dir:"parentNode",next:"legend"});try{J.apply(X=Z.call(B.childNodes),B.childNodes),X[B.childNodes.length].nodeType}catch(Te){J={apply:X.length?function(e,t){Y.apply(e,Z.call(t))}:function(e,t){for(var n=e.length,i=0;e[n++]=t[i++];);e.length=n-1}}}w=t.support={},T=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&"HTML"!==t.nodeName},M=t.setDocument=function(e){var t,n,i=e?e.ownerDocument||e:B;return i!==N&&9===i.nodeType&&i.documentElement?(N=i,F=N.documentElement,L=!T(N),B!==N&&(n=N.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",Ce,!1):n.attachEvent&&n.attachEvent("onunload",Ce)),w.attributes=r(function(e){return e.className="i",!e.getAttribute("className")}),w.getElementsByTagName=r(function(e){return e.appendChild(N.createComment("")),!e.getElementsByTagName("*").length}),w.getElementsByClassName=ge.test(N.getElementsByClassName),w.getById=r(function(e){return F.appendChild(e).id=q,!N.getElementsByName||!N.getElementsByName(q).length}),w.getById?(C.filter.ID=function(e){var t=e.replace(be,ke);return function(e){return e.getAttribute("id")===t}},C.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&L){var n=t.getElementById(e);return n?[n]:[]}}):(C.filter.ID=function(e){var t=e.replace(be,ke);return function(e){var n="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}},C.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&L){var n,i,r,o=t.getElementById(e);if(o){if(n=o.getAttributeNode("id"),n&&n.value===e)return[o];for(r=t.getElementsByName(e),i=0;o=r[i++];)if(n=o.getAttributeNode("id"),n&&n.value===e)return[o]}return[]}}),C.find.TAG=w.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):w.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,i=[],r=0,o=t.getElementsByTagName(e);if("*"===e){for(;n=o[r++];)1===n.nodeType&&i.push(n);return i}return o},C.find.CLASS=w.getElementsByClassName&&function(e,t){if("undefined"!=typeof t.getElementsByClassName&&L)return t.getElementsByClassName(e)},_=[],R=[],(w.qsa=ge.test(N.querySelectorAll))&&(r(function(e){F.appendChild(e).innerHTML="<a id='"+q+"'></a><select id='"+q+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&R.push("[*^$]="+ne+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||R.push("\\["+ne+"*(?:value|"+te+")"),e.querySelectorAll("[id~="+q+"-]").length||R.push("~="),e.querySelectorAll(":checked").length||R.push(":checked"),e.querySelectorAll("a#"+q+"+*").length||R.push(".#.+[+~]")}),r(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=N.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&R.push("name"+ne+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&R.push(":enabled",":disabled"),F.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&R.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),R.push(",.*:")})),(w.matchesSelector=ge.test(H=F.matches||F.webkitMatchesSelector||F.mozMatchesSelector||F.oMatchesSelector||F.msMatchesSelector))&&r(function(e){w.disconnectedMatch=H.call(e,"*"),H.call(e,"[s!='']:x"),_.push("!=",oe)}),R=R.length&&new RegExp(R.join("|")),_=_.length&&new RegExp(_.join("|")),t=ge.test(F.compareDocumentPosition),I=t||ge.test(F.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,i=t&&t.parentNode;return e===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):e.compareDocumentPosition&&16&e.compareDocumentPosition(i)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},z=t?function(e,t){if(e===t)return O=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n?n:(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&n||!w.sortDetached&&t.compareDocumentPosition(e)===n?e===N||e.ownerDocument===B&&I(B,e)?-1:t===N||t.ownerDocument===B&&I(B,t)?1:j?ee(j,e)-ee(j,t):0:4&n?-1:1)}:function(e,t){if(e===t)return O=!0,0;var n,i=0,r=e.parentNode,o=t.parentNode,s=[e],l=[t];if(!r||!o)return e===N?-1:t===N?1:r?-1:o?1:j?ee(j,e)-ee(j,t):0;if(r===o)return a(e,t);for(n=e;n=n.parentNode;)s.unshift(n);for(n=t;n=n.parentNode;)l.unshift(n);for(;s[i]===l[i];)i++;return i?a(s[i],l[i]):s[i]===B?-1:l[i]===B?1:0},N):N},t.matches=function(e,n){return t(e,null,null,n)},t.matchesSelector=function(e,n){if((e.ownerDocument||e)!==N&&M(e),n=n.replace(ce,"='$1']"),w.matchesSelector&&L&&!V[n+" "]&&(!_||!_.test(n))&&(!R||!R.test(n)))try{var i=H.call(e,n);if(i||w.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(r){}return t(n,N,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==N&&M(e),I(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==N&&M(e);var n=C.attrHandle[t.toLowerCase()],i=n&&K.call(C.attrHandle,t.toLowerCase())?n(e,t,!L):void 0;return void 0!==i?i:w.attributes||!L?e.getAttribute(t):(i=e.getAttributeNode(t))&&i.specified?i.value:null},t.escape=function(e){return(e+"").replace(xe,we)},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,n=[],i=0,r=0;if(O=!w.detectDuplicates,j=!w.sortStable&&e.slice(0),e.sort(z),O){for(;t=e[r++];)t===e[r]&&(i=n.push(r));for(;i--;)e.splice(n[i],1)}return j=null,e},S=t.getText=function(e){var t,n="",i=0,r=e.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=S(e)}else if(3===r||4===r)return e.nodeValue}else for(;t=e[i++];)n+=S(t);return n},C=t.selectors={cacheLength:50,createPseudo:i,match:de,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(be,ke),e[3]=(e[3]||e[4]||e[5]||"").replace(be,ke),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return de.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&pe.test(n)&&(t=P(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(be,ke).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=U[e+" "];return t||(t=new RegExp("(^|"+ne+")"+e+"("+ne+"|$)"))&&U(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,n,i){return function(r){var o=t.attr(r,e);return null==o?"!="===n:!n||(o+="","="===n?o===i:"!="===n?o!==i:"^="===n?i&&0===o.indexOf(i):"*="===n?i&&o.indexOf(i)>-1:"$="===n?i&&o.slice(-i.length)===i:"~="===n?(" "+o.replace(ae," ")+" ").indexOf(i)>-1:"|="===n&&(o===i||o.slice(0,i.length+1)===i+"-"))}},CHILD:function(e,t,n,i,r){var o="nth"!==e.slice(0,3),a="last"!==e.slice(-4),s="of-type"===t;return 1===i&&0===r?function(e){return!!e.parentNode}:function(t,n,l){var u,c,p,f,d,h,m=o!==a?"nextSibling":"previousSibling",g=t.parentNode,v=s&&t.nodeName.toLowerCase(),y=!l&&!s,b=!1;if(g){if(o){for(;m;){for(f=t;f=f[m];)if(s?f.nodeName.toLowerCase()===v:1===f.nodeType)return!1;h=m="only"===e&&!h&&"nextSibling"}return!0}if(h=[a?g.firstChild:g.lastChild],a&&y){for(f=g,p=f[q]||(f[q]={}),c=p[f.uniqueID]||(p[f.uniqueID]={}),u=c[e]||[],d=u[0]===$&&u[1],b=d&&u[2],f=d&&g.childNodes[d];f=++d&&f&&f[m]||(b=d=0)||h.pop();)if(1===f.nodeType&&++b&&f===t){c[e]=[$,d,b];break}}else if(y&&(f=t,p=f[q]||(f[q]={}),c=p[f.uniqueID]||(p[f.uniqueID]={}),u=c[e]||[],d=u[0]===$&&u[1],b=d),b===!1)for(;(f=++d&&f&&f[m]||(b=d=0)||h.pop())&&((s?f.nodeName.toLowerCase()!==v:1!==f.nodeType)||!++b||(y&&(p=f[q]||(f[q]={}),c=p[f.uniqueID]||(p[f.uniqueID]={}),c[e]=[$,b]),f!==t)););return b-=r,b===i||b%i===0&&b/i>=0}}},PSEUDO:function(e,n){var r,o=C.pseudos[e]||C.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return o[q]?o(n):o.length>1?(r=[e,e,"",n],C.setFilters.hasOwnProperty(e.toLowerCase())?i(function(e,t){for(var i,r=o(e,n),a=r.length;a--;)i=ee(e,r[a]),e[i]=!(t[i]=r[a])}):function(e){return o(e,0,r)}):o}},pseudos:{not:i(function(e){var t=[],n=[],r=E(e.replace(se,"$1"));return r[q]?i(function(e,t,n,i){for(var o,a=r(e,null,i,[]),s=e.length;s--;)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,i,o){return t[0]=e,r(t,null,o,n),t[0]=null,!n.pop()}}),has:i(function(e){return function(n){return t(e,n).length>0}}),contains:i(function(e){return e=e.replace(be,ke),function(t){return(t.textContent||t.innerText||S(t)).indexOf(e)>-1}}),lang:i(function(e){return fe.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(be,ke).toLowerCase(),function(t){var n;do if(n=L?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1;
}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===F},focus:function(e){return e===N.activeElement&&(!N.hasFocus||N.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:u(!1),disabled:u(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!C.pseudos.empty(e)},header:function(e){return me.test(e.nodeName)},input:function(e){return he.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:c(function(){return[0]}),last:c(function(e,t){return[t-1]}),eq:c(function(e,t,n){return[n<0?n+t:n]}),even:c(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:c(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:c(function(e,t,n){for(var i=n<0?n+t:n;--i>=0;)e.push(i);return e}),gt:c(function(e,t,n){for(var i=n<0?n+t:n;++i<t;)e.push(i);return e})}},C.pseudos.nth=C.pseudos.eq;for(x in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})C.pseudos[x]=s(x);for(x in{submit:!0,reset:!0})C.pseudos[x]=l(x);return f.prototype=C.filters=C.pseudos,C.setFilters=new f,P=t.tokenize=function(e,n){var i,r,o,a,s,l,u,c=W[e+" "];if(c)return n?0:c.slice(0);for(s=e,l=[],u=C.preFilter;s;){i&&!(r=le.exec(s))||(r&&(s=s.slice(r[0].length)||s),l.push(o=[])),i=!1,(r=ue.exec(s))&&(i=r.shift(),o.push({value:i,type:r[0].replace(se," ")}),s=s.slice(i.length));for(a in C.filter)!(r=de[a].exec(s))||u[a]&&!(r=u[a](r))||(i=r.shift(),o.push({value:i,type:a,matches:r}),s=s.slice(i.length));if(!i)break}return n?s.length:s?t.error(e):W(e,l).slice(0)},E=t.compile=function(e,t){var n,i=[],r=[],o=V[e+" "];if(!o){for(t||(t=P(e)),n=t.length;n--;)o=b(t[n]),o[q]?i.push(o):r.push(o);o=V(e,k(r,i)),o.selector=e}return o},A=t.select=function(e,t,n,i){var r,o,a,s,l,u="function"==typeof e&&e,c=!i&&P(e=u.selector||e);if(n=n||[],1===c.length){if(o=c[0]=c[0].slice(0),o.length>2&&"ID"===(a=o[0]).type&&9===t.nodeType&&L&&C.relative[o[1].type]){if(t=(C.find.ID(a.matches[0].replace(be,ke),t)||[])[0],!t)return n;u&&(t=t.parentNode),e=e.slice(o.shift().value.length)}for(r=de.needsContext.test(e)?0:o.length;r--&&(a=o[r],!C.relative[s=a.type]);)if((l=C.find[s])&&(i=l(a.matches[0].replace(be,ke),ye.test(o[0].type)&&p(t.parentNode)||t))){if(o.splice(r,1),e=i.length&&d(o),!e)return J.apply(n,i),n;break}}return(u||E(e,c))(i,t,!L,n,!t||ye.test(e)&&p(t.parentNode)||t),n},w.sortStable=q.split("").sort(z).join("")===q,w.detectDuplicates=!!O,M(),w.sortDetached=r(function(e){return 1&e.compareDocumentPosition(N.createElement("fieldset"))}),r(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||o("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),w.attributes&&r(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||o("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),r(function(e){return null==e.getAttribute("disabled")})||o(te,function(e,t,n){var i;if(!n)return e[t]===!0?t.toLowerCase():(i=e.getAttributeNode(t))&&i.specified?i.value:null}),t}(e);me.find=ke,me.expr=ke.selectors,me.expr[":"]=me.expr.pseudos,me.uniqueSort=me.unique=ke.uniqueSort,me.text=ke.getText,me.isXMLDoc=ke.isXML,me.contains=ke.contains,me.escapeSelector=ke.escape;var xe=function(e,t,n){for(var i=[],r=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(r&&me(e).is(n))break;i.push(e)}return i},we=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},Ce=me.expr.match.needsContext,Se=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,Te=/^.[^:#\[\.,]*$/;me.filter=function(e,t,n){var i=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===i.nodeType?me.find.matchesSelector(i,e)?[i]:[]:me.find.matches(e,me.grep(t,function(e){return 1===e.nodeType}))},me.fn.extend({find:function(e){var t,n,i=this.length,r=this;if("string"!=typeof e)return this.pushStack(me(e).filter(function(){for(t=0;t<i;t++)if(me.contains(r[t],this))return!0}));for(n=this.pushStack([]),t=0;t<i;t++)me.find(e,r[t],n);return i>1?me.uniqueSort(n):n},filter:function(e){return this.pushStack(o(this,e||[],!1))},not:function(e){return this.pushStack(o(this,e||[],!0))},is:function(e){return!!o(this,"string"==typeof e&&Ce.test(e)?me(e):e||[],!1).length}});var Pe,Ee=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,Ae=me.fn.init=function(e,t,n){var i,r;if(!e)return this;if(n=n||Pe,"string"==typeof e){if(i="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:Ee.exec(e),!i||!i[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(i[1]){if(t=t instanceof me?t[0]:t,me.merge(this,me.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:ne,!0)),Se.test(i[1])&&me.isPlainObject(t))for(i in t)me.isFunction(this[i])?this[i](t[i]):this.attr(i,t[i]);return this}return r=ne.getElementById(i[2]),r&&(this[0]=r,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):me.isFunction(e)?void 0!==n.ready?n.ready(e):e(me):me.makeArray(e,this)};Ae.prototype=me.fn,Pe=me(ne);var De=/^(?:parents|prev(?:Until|All))/,je={children:!0,contents:!0,next:!0,prev:!0};me.fn.extend({has:function(e){var t=me(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(me.contains(this,t[e]))return!0})},closest:function(e,t){var n,i=0,r=this.length,o=[],a="string"!=typeof e&&me(e);if(!Ce.test(e))for(;i<r;i++)for(n=this[i];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?a.index(n)>-1:1===n.nodeType&&me.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(o.length>1?me.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?se.call(me(e),this[0]):se.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(me.uniqueSort(me.merge(this.get(),me(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),me.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return xe(e,"parentNode")},parentsUntil:function(e,t,n){return xe(e,"parentNode",n)},next:function(e){return a(e,"nextSibling")},prev:function(e){return a(e,"previousSibling")},nextAll:function(e){return xe(e,"nextSibling")},prevAll:function(e){return xe(e,"previousSibling")},nextUntil:function(e,t,n){return xe(e,"nextSibling",n)},prevUntil:function(e,t,n){return xe(e,"previousSibling",n)},siblings:function(e){return we((e.parentNode||{}).firstChild,e)},children:function(e){return we(e.firstChild)},contents:function(e){return r(e,"iframe")?e.contentDocument:(r(e,"template")&&(e=e.content||e),me.merge([],e.childNodes))}},function(e,t){me.fn[e]=function(n,i){var r=me.map(this,t,n);return"Until"!==e.slice(-5)&&(i=n),i&&"string"==typeof i&&(r=me.filter(i,r)),this.length>1&&(je[e]||me.uniqueSort(r),De.test(e)&&r.reverse()),this.pushStack(r)}});var Oe=/[^\x20\t\r\n\f]+/g;me.Callbacks=function(e){e="string"==typeof e?s(e):me.extend({},e);var t,n,i,r,o=[],a=[],l=-1,u=function(){for(r=r||e.once,i=t=!0;a.length;l=-1)for(n=a.shift();++l<o.length;)o[l].apply(n[0],n[1])===!1&&e.stopOnFalse&&(l=o.length,n=!1);e.memory||(n=!1),t=!1,r&&(o=n?[]:"")},c={add:function(){return o&&(n&&!t&&(l=o.length-1,a.push(n)),function i(t){me.each(t,function(t,n){me.isFunction(n)?e.unique&&c.has(n)||o.push(n):n&&n.length&&"string"!==me.type(n)&&i(n)})}(arguments),n&&!t&&u()),this},remove:function(){return me.each(arguments,function(e,t){for(var n;(n=me.inArray(t,o,n))>-1;)o.splice(n,1),n<=l&&l--}),this},has:function(e){return e?me.inArray(e,o)>-1:o.length>0},empty:function(){return o&&(o=[]),this},disable:function(){return r=a=[],o=n="",this},disabled:function(){return!o},lock:function(){return r=a=[],n||t||(o=n=""),this},locked:function(){return!!r},fireWith:function(e,n){return r||(n=n||[],n=[e,n.slice?n.slice():n],a.push(n),t||u()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!i}};return c},me.extend({Deferred:function(t){var n=[["notify","progress",me.Callbacks("memory"),me.Callbacks("memory"),2],["resolve","done",me.Callbacks("once memory"),me.Callbacks("once memory"),0,"resolved"],["reject","fail",me.Callbacks("once memory"),me.Callbacks("once memory"),1,"rejected"]],i="pending",r={state:function(){return i},always:function(){return o.done(arguments).fail(arguments),this},"catch":function(e){return r.then(null,e)},pipe:function(){var e=arguments;return me.Deferred(function(t){me.each(n,function(n,i){var r=me.isFunction(e[i[4]])&&e[i[4]];o[i[1]](function(){var e=r&&r.apply(this,arguments);e&&me.isFunction(e.promise)?e.promise().progress(t.notify).done(t.resolve).fail(t.reject):t[i[0]+"With"](this,r?[e]:arguments)})}),e=null}).promise()},then:function(t,i,r){function o(t,n,i,r){return function(){var s=this,c=arguments,p=function(){var e,p;if(!(t<a)){if(e=i.apply(s,c),e===n.promise())throw new TypeError("Thenable self-resolution");p=e&&("object"==typeof e||"function"==typeof e)&&e.then,me.isFunction(p)?r?p.call(e,o(a,n,l,r),o(a,n,u,r)):(a++,p.call(e,o(a,n,l,r),o(a,n,u,r),o(a,n,l,n.notifyWith))):(i!==l&&(s=void 0,c=[e]),(r||n.resolveWith)(s,c))}},f=r?p:function(){try{p()}catch(e){me.Deferred.exceptionHook&&me.Deferred.exceptionHook(e,f.stackTrace),t+1>=a&&(i!==u&&(s=void 0,c=[e]),n.rejectWith(s,c))}};t?f():(me.Deferred.getStackHook&&(f.stackTrace=me.Deferred.getStackHook()),e.setTimeout(f))}}var a=0;return me.Deferred(function(e){n[0][3].add(o(0,e,me.isFunction(r)?r:l,e.notifyWith)),n[1][3].add(o(0,e,me.isFunction(t)?t:l)),n[2][3].add(o(0,e,me.isFunction(i)?i:u))}).promise()},promise:function(e){return null!=e?me.extend(e,r):r}},o={};return me.each(n,function(e,t){var a=t[2],s=t[5];r[t[1]]=a.add,s&&a.add(function(){i=s},n[3-e][2].disable,n[0][2].lock),a.add(t[3].fire),o[t[0]]=function(){return o[t[0]+"With"](this===o?void 0:this,arguments),this},o[t[0]+"With"]=a.fireWith}),r.promise(o),t&&t.call(o,o),o},when:function(e){var t=arguments.length,n=t,i=Array(n),r=re.call(arguments),o=me.Deferred(),a=function(e){return function(n){i[e]=this,r[e]=arguments.length>1?re.call(arguments):n,--t||o.resolveWith(i,r)}};if(t<=1&&(c(e,o.done(a(n)).resolve,o.reject,!t),"pending"===o.state()||me.isFunction(r[n]&&r[n].then)))return o.then();for(;n--;)c(r[n],a(n),o.reject);return o.promise()}});var Me=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;me.Deferred.exceptionHook=function(t,n){e.console&&e.console.warn&&t&&Me.test(t.name)&&e.console.warn("jQuery.Deferred exception: "+t.message,t.stack,n)},me.readyException=function(t){e.setTimeout(function(){throw t})};var Ne=me.Deferred();me.fn.ready=function(e){return Ne.then(e)["catch"](function(e){me.readyException(e)}),this},me.extend({isReady:!1,readyWait:1,ready:function(e){(e===!0?--me.readyWait:me.isReady)||(me.isReady=!0,e!==!0&&--me.readyWait>0||Ne.resolveWith(ne,[me]))}}),me.ready.then=Ne.then,"complete"===ne.readyState||"loading"!==ne.readyState&&!ne.documentElement.doScroll?e.setTimeout(me.ready):(ne.addEventListener("DOMContentLoaded",p),e.addEventListener("load",p));var Fe=function(e,t,n,i,r,o,a){var s=0,l=e.length,u=null==n;if("object"===me.type(n)){r=!0;for(s in n)Fe(e,t,s,n[s],!0,o,a)}else if(void 0!==i&&(r=!0,me.isFunction(i)||(a=!0),u&&(a?(t.call(e,i),t=null):(u=t,t=function(e,t,n){return u.call(me(e),n)})),t))for(;s<l;s++)t(e[s],n,a?i:i.call(e[s],s,t(e[s],n)));return r?e:u?t.call(e):l?t(e[0],n):o},Le=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};f.uid=1,f.prototype={cache:function(e){var t=e[this.expando];return t||(t={},Le(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var i,r=this.cache(e);if("string"==typeof t)r[me.camelCase(t)]=n;else for(i in t)r[me.camelCase(i)]=t[i];return r},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][me.camelCase(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,i=e[this.expando];if(void 0!==i){if(void 0!==t){Array.isArray(t)?t=t.map(me.camelCase):(t=me.camelCase(t),t=t in i?[t]:t.match(Oe)||[]),n=t.length;for(;n--;)delete i[t[n]]}(void 0===t||me.isEmptyObject(i))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!me.isEmptyObject(t)}};var Re=new f,_e=new f,He=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Ie=/[A-Z]/g;me.extend({hasData:function(e){return _e.hasData(e)||Re.hasData(e)},data:function(e,t,n){return _e.access(e,t,n)},removeData:function(e,t){_e.remove(e,t)},_data:function(e,t,n){return Re.access(e,t,n)},_removeData:function(e,t){Re.remove(e,t)}}),me.fn.extend({data:function(e,t){var n,i,r,o=this[0],a=o&&o.attributes;if(void 0===e){if(this.length&&(r=_e.get(o),1===o.nodeType&&!Re.get(o,"hasDataAttrs"))){for(n=a.length;n--;)a[n]&&(i=a[n].name,0===i.indexOf("data-")&&(i=me.camelCase(i.slice(5)),h(o,i,r[i])));Re.set(o,"hasDataAttrs",!0)}return r}return"object"==typeof e?this.each(function(){_e.set(this,e)}):Fe(this,function(t){var n;if(o&&void 0===t){if(n=_e.get(o,e),void 0!==n)return n;if(n=h(o,e),void 0!==n)return n}else this.each(function(){_e.set(this,e,t)})},null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){_e.remove(this,e)})}}),me.extend({queue:function(e,t,n){var i;if(e)return t=(t||"fx")+"queue",i=Re.get(e,t),n&&(!i||Array.isArray(n)?i=Re.access(e,t,me.makeArray(n)):i.push(n)),i||[]},dequeue:function(e,t){t=t||"fx";var n=me.queue(e,t),i=n.length,r=n.shift(),o=me._queueHooks(e,t),a=function(){me.dequeue(e,t)};"inprogress"===r&&(r=n.shift(),i--),r&&("fx"===t&&n.unshift("inprogress"),delete o.stop,r.call(e,a,o)),!i&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return Re.get(e,n)||Re.access(e,n,{empty:me.Callbacks("once memory").add(function(){Re.remove(e,[t+"queue",n])})})}}),me.fn.extend({queue:function(e,t){var n=2;return"string"!=typeof e&&(t=e,e="fx",n--),arguments.length<n?me.queue(this[0],e):void 0===t?this:this.each(function(){var n=me.queue(this,e,t);me._queueHooks(this,e),"fx"===e&&"inprogress"!==n[0]&&me.dequeue(this,e)})},dequeue:function(e){return this.each(function(){me.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,i=1,r=me.Deferred(),o=this,a=this.length,s=function(){--i||r.resolveWith(o,[o])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";a--;)n=Re.get(o[a],e+"queueHooks"),n&&n.empty&&(i++,n.empty.add(s));return s(),r.promise(t)}});var qe=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Be=new RegExp("^(?:([+-])=|)("+qe+")([a-z%]*)$","i"),$e=["Top","Right","Bottom","Left"],Ge=function(e,t){return e=t||e,"none"===e.style.display||""===e.style.display&&me.contains(e.ownerDocument,e)&&"none"===me.css(e,"display")},Ue=function(e,t,n,i){var r,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];r=n.apply(e,i||[]);for(o in t)e.style[o]=a[o];return r},We={};me.fn.extend({show:function(){return v(this,!0)},hide:function(){return v(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){Ge(this)?me(this).show():me(this).hide()})}});var Ve=/^(?:checkbox|radio)$/i,ze=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,Ke=/^$|\/(?:java|ecma)script/i,Xe={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Xe.optgroup=Xe.option,Xe.tbody=Xe.tfoot=Xe.colgroup=Xe.caption=Xe.thead,Xe.th=Xe.td;var Qe=/<|&#?\w+;/;!function(){var e=ne.createDocumentFragment(),t=e.appendChild(ne.createElement("div")),n=ne.createElement("input");n.setAttribute("type","radio"),n.setAttribute("checked","checked"),n.setAttribute("name","t"),t.appendChild(n),de.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,t.innerHTML="<textarea>x</textarea>",de.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue}();var Ye=ne.documentElement,Je=/^key/,Ze=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,et=/^([^.]*)(?:\.(.+)|)/;me.event={global:{},add:function(e,t,n,i,r){var o,a,s,l,u,c,p,f,d,h,m,g=Re.get(e);if(g)for(n.handler&&(o=n,n=o.handler,r=o.selector),r&&me.find.matchesSelector(Ye,r),n.guid||(n.guid=me.guid++),(l=g.events)||(l=g.events={}),(a=g.handle)||(a=g.handle=function(t){return"undefined"!=typeof me&&me.event.triggered!==t.type?me.event.dispatch.apply(e,arguments):void 0}),t=(t||"").match(Oe)||[""],u=t.length;u--;)s=et.exec(t[u])||[],d=m=s[1],h=(s[2]||"").split(".").sort(),d&&(p=me.event.special[d]||{},d=(r?p.delegateType:p.bindType)||d,p=me.event.special[d]||{},c=me.extend({type:d,origType:m,data:i,handler:n,guid:n.guid,selector:r,needsContext:r&&me.expr.match.needsContext.test(r),namespace:h.join(".")},o),(f=l[d])||(f=l[d]=[],f.delegateCount=0,p.setup&&p.setup.call(e,i,h,a)!==!1||e.addEventListener&&e.addEventListener(d,a)),p.add&&(p.add.call(e,c),c.handler.guid||(c.handler.guid=n.guid)),r?f.splice(f.delegateCount++,0,c):f.push(c),me.event.global[d]=!0)},remove:function(e,t,n,i,r){var o,a,s,l,u,c,p,f,d,h,m,g=Re.hasData(e)&&Re.get(e);if(g&&(l=g.events)){for(t=(t||"").match(Oe)||[""],u=t.length;u--;)if(s=et.exec(t[u])||[],d=m=s[1],h=(s[2]||"").split(".").sort(),d){for(p=me.event.special[d]||{},d=(i?p.delegateType:p.bindType)||d,f=l[d]||[],s=s[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=f.length;o--;)c=f[o],!r&&m!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||i&&i!==c.selector&&("**"!==i||!c.selector)||(f.splice(o,1),c.selector&&f.delegateCount--,p.remove&&p.remove.call(e,c));a&&!f.length&&(p.teardown&&p.teardown.call(e,h,g.handle)!==!1||me.removeEvent(e,d,g.handle),delete l[d])}else for(d in l)me.event.remove(e,d+t[u],n,i,!0);me.isEmptyObject(l)&&Re.remove(e,"handle events")}},dispatch:function(e){var t,n,i,r,o,a,s=me.event.fix(e),l=new Array(arguments.length),u=(Re.get(this,"events")||{})[s.type]||[],c=me.event.special[s.type]||{};for(l[0]=s,t=1;t<arguments.length;t++)l[t]=arguments[t];if(s.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,s)!==!1){for(a=me.event.handlers.call(this,s,u),t=0;(r=a[t++])&&!s.isPropagationStopped();)for(s.currentTarget=r.elem,n=0;(o=r.handlers[n++])&&!s.isImmediatePropagationStopped();)s.rnamespace&&!s.rnamespace.test(o.namespace)||(s.handleObj=o,s.data=o.data,i=((me.event.special[o.origType]||{}).handle||o.handler).apply(r.elem,l),void 0!==i&&(s.result=i)===!1&&(s.preventDefault(),s.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,s),s.result}},handlers:function(e,t){var n,i,r,o,a,s=[],l=t.delegateCount,u=e.target;if(l&&u.nodeType&&!("click"===e.type&&e.button>=1))for(;u!==this;u=u.parentNode||this)if(1===u.nodeType&&("click"!==e.type||u.disabled!==!0)){for(o=[],a={},n=0;n<l;n++)i=t[n],r=i.selector+" ",void 0===a[r]&&(a[r]=i.needsContext?me(r,this).index(u)>-1:me.find(r,this,null,[u]).length),a[r]&&o.push(i);o.length&&s.push({elem:u,handlers:o})}return u=this,l<t.length&&s.push({elem:u,handlers:t.slice(l)}),s},addProp:function(e,t){Object.defineProperty(me.Event.prototype,e,{enumerable:!0,configurable:!0,get:me.isFunction(t)?function(){if(this.originalEvent)return t(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[e]},set:function(t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:t})}})},fix:function(e){return e[me.expando]?e:new me.Event(e)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==C()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===C()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&r(this,"input"))return this.click(),!1},_default:function(e){return r(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},me.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},me.Event=function(e,t){return this instanceof me.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&e.returnValue===!1?x:w,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&me.extend(this,t),this.timeStamp=e&&e.timeStamp||me.now(),void(this[me.expando]=!0)):new me.Event(e,t)},me.Event.prototype={constructor:me.Event,isDefaultPrevented:w,isPropagationStopped:w,isImmediatePropagationStopped:w,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=x,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=x,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=x,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},me.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&Je.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&Ze.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},me.event.addProp),me.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){me.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,i=this,r=e.relatedTarget,o=e.handleObj;return r&&(r===i||me.contains(i,r))||(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),me.fn.extend({on:function(e,t,n,i){return S(this,e,t,n,i)},one:function(e,t,n,i){return S(this,e,t,n,i,1)},off:function(e,t,n){var i,r;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,me(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof e){for(r in e)this.off(r,t,e[r]);return this}return t!==!1&&"function"!=typeof t||(n=t,t=void 0),n===!1&&(n=w),this.each(function(){me.event.remove(this,e,n,t)})}});var tt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,nt=/<script|<style|<link/i,it=/checked\s*(?:[^=]|=\s*.checked.)/i,rt=/^true\/(.*)/,ot=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;me.extend({htmlPrefilter:function(e){return e.replace(tt,"<$1></$2>")},clone:function(e,t,n){var i,r,o,a,s=e.cloneNode(!0),l=me.contains(e.ownerDocument,e);if(!(de.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||me.isXMLDoc(e)))for(a=y(s),o=y(e),i=0,r=o.length;i<r;i++)D(o[i],a[i]);if(t)if(n)for(o=o||y(e),a=a||y(s),i=0,r=o.length;i<r;i++)A(o[i],a[i]);else A(e,s);return a=y(s,"script"),a.length>0&&b(a,!l&&y(e,"script")),s},cleanData:function(e){for(var t,n,i,r=me.event.special,o=0;void 0!==(n=e[o]);o++)if(Le(n)){if(t=n[Re.expando]){if(t.events)for(i in t.events)r[i]?me.event.remove(n,i):me.removeEvent(n,i,t.handle);n[Re.expando]=void 0}n[_e.expando]&&(n[_e.expando]=void 0)}}}),me.fn.extend({detach:function(e){return O(this,e,!0)},remove:function(e){return O(this,e)},text:function(e){return Fe(this,function(e){return void 0===e?me.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return j(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=T(this,e);t.appendChild(e)}})},prepend:function(){return j(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=T(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return j(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return j(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(me.cleanData(y(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return me.clone(this,e,t)})},html:function(e){return Fe(this,function(e){var t=this[0]||{},n=0,i=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!nt.test(e)&&!Xe[(ze.exec(e)||["",""])[1].toLowerCase()]){e=me.htmlPrefilter(e);try{for(;n<i;n++)t=this[n]||{},1===t.nodeType&&(me.cleanData(y(t,!1)),t.innerHTML=e);t=0}catch(r){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=[];return j(this,arguments,function(t){var n=this.parentNode;me.inArray(this,e)<0&&(me.cleanData(y(this)),n&&n.replaceChild(t,this))},e)}}),me.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){me.fn[e]=function(e){for(var n,i=[],r=me(e),o=r.length-1,a=0;a<=o;a++)n=a===o?this:this.clone(!0),me(r[a])[t](n),ae.apply(i,n.get());return this.pushStack(i)}});var at=/^margin/,st=new RegExp("^("+qe+")(?!px)[a-z%]+$","i"),lt=function(t){var n=t.ownerDocument.defaultView;return n&&n.opener||(n=e),n.getComputedStyle(t)};!function(){function t(){if(s){s.style.cssText="box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",s.innerHTML="",Ye.appendChild(a);var t=e.getComputedStyle(s);n="1%"!==t.top,o="2px"===t.marginLeft,i="4px"===t.width,s.style.marginRight="50%",r="4px"===t.marginRight,Ye.removeChild(a),s=null}}var n,i,r,o,a=ne.createElement("div"),s=ne.createElement("div");s.style&&(s.style.backgroundClip="content-box",s.cloneNode(!0).style.backgroundClip="",de.clearCloneStyle="content-box"===s.style.backgroundClip,a.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",a.appendChild(s),me.extend(de,{pixelPosition:function(){return t(),n},boxSizingReliable:function(){return t(),i},pixelMarginRight:function(){return t(),r},reliableMarginLeft:function(){return t(),o}}))}();var ut=/^(none|table(?!-c[ea]).+)/,ct=/^--/,pt={position:"absolute",visibility:"hidden",display:"block"},ft={letterSpacing:"0",fontWeight:"400"},dt=["Webkit","Moz","ms"],ht=ne.createElement("div").style;me.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=M(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(e,t,n,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var r,o,a,s=me.camelCase(t),l=ct.test(t),u=e.style;return l||(t=L(s)),a=me.cssHooks[t]||me.cssHooks[s],void 0===n?a&&"get"in a&&void 0!==(r=a.get(e,!1,i))?r:u[t]:(o=typeof n,"string"===o&&(r=Be.exec(n))&&r[1]&&(n=m(e,t,r),o="number"),void(null!=n&&n===n&&("number"===o&&(n+=r&&r[3]||(me.cssNumber[s]?"":"px")),de.clearCloneStyle||""!==n||0!==t.indexOf("background")||(u[t]="inherit"),a&&"set"in a&&void 0===(n=a.set(e,n,i))||(l?u.setProperty(t,n):u[t]=n))))}},css:function(e,t,n,i){var r,o,a,s=me.camelCase(t),l=ct.test(t);return l||(t=L(s)),a=me.cssHooks[t]||me.cssHooks[s],a&&"get"in a&&(r=a.get(e,!0,n)),void 0===r&&(r=M(e,t,i)),"normal"===r&&t in ft&&(r=ft[t]),""===n||n?(o=parseFloat(r),n===!0||isFinite(o)?o||0:r):r}}),me.each(["height","width"],function(e,t){me.cssHooks[t]={get:function(e,n,i){if(n)return!ut.test(me.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?H(e,t,i):Ue(e,pt,function(){return H(e,t,i)})},set:function(e,n,i){var r,o=i&&lt(e),a=i&&_(e,t,i,"border-box"===me.css(e,"boxSizing",!1,o),o);return a&&(r=Be.exec(n))&&"px"!==(r[3]||"px")&&(e.style[t]=n,n=me.css(e,t)),R(e,n,a)}}}),me.cssHooks.marginLeft=N(de.reliableMarginLeft,function(e,t){if(t)return(parseFloat(M(e,"marginLeft"))||e.getBoundingClientRect().left-Ue(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),me.each({margin:"",padding:"",border:"Width"},function(e,t){me.cssHooks[e+t]={expand:function(n){for(var i=0,r={},o="string"==typeof n?n.split(" "):[n];i<4;i++)r[e+$e[i]+t]=o[i]||o[i-2]||o[0];return r}},at.test(e)||(me.cssHooks[e+t].set=R)}),me.fn.extend({css:function(e,t){return Fe(this,function(e,t,n){var i,r,o={},a=0;if(Array.isArray(t)){for(i=lt(e),r=t.length;a<r;a++)o[t[a]]=me.css(e,t[a],!1,i);return o}return void 0!==n?me.style(e,t,n):me.css(e,t)},e,t,arguments.length>1)}}),me.Tween=I,I.prototype={constructor:I,init:function(e,t,n,i,r,o){this.elem=e,this.prop=n,this.easing=r||me.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=i,this.unit=o||(me.cssNumber[n]?"":"px")},cur:function(){var e=I.propHooks[this.prop];return e&&e.get?e.get(this):I.propHooks._default.get(this)},run:function(e){var t,n=I.propHooks[this.prop];return this.options.duration?this.pos=t=me.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):I.propHooks._default.set(this),this}},I.prototype.init.prototype=I.prototype,I.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=me.css(e.elem,e.prop,""),t&&"auto"!==t?t:0)},set:function(e){me.fx.step[e.prop]?me.fx.step[e.prop](e):1!==e.elem.nodeType||null==e.elem.style[me.cssProps[e.prop]]&&!me.cssHooks[e.prop]?e.elem[e.prop]=e.now:me.style(e.elem,e.prop,e.now+e.unit)}}},I.propHooks.scrollTop=I.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},me.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},me.fx=I.prototype.init,me.fx.step={};var mt,gt,vt=/^(?:toggle|show|hide)$/,yt=/queueHooks$/;me.Animation=me.extend(V,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return m(n.elem,e,Be.exec(t),n),n}]},tweener:function(e,t){me.isFunction(e)?(t=e,e=["*"]):e=e.match(Oe);for(var n,i=0,r=e.length;i<r;i++)n=e[i],V.tweeners[n]=V.tweeners[n]||[],V.tweeners[n].unshift(t)},prefilters:[U],prefilter:function(e,t){t?V.prefilters.unshift(e):V.prefilters.push(e)}}),me.speed=function(e,t,n){var i=e&&"object"==typeof e?me.extend({},e):{complete:n||!n&&t||me.isFunction(e)&&e,duration:e,easing:n&&t||t&&!me.isFunction(t)&&t};return me.fx.off?i.duration=0:"number"!=typeof i.duration&&(i.duration in me.fx.speeds?i.duration=me.fx.speeds[i.duration]:i.duration=me.fx.speeds._default),null!=i.queue&&i.queue!==!0||(i.queue="fx"),i.old=i.complete,i.complete=function(){me.isFunction(i.old)&&i.old.call(this),i.queue&&me.dequeue(this,i.queue)},i},me.fn.extend({fadeTo:function(e,t,n,i){return this.filter(Ge).css("opacity",0).show().end().animate({opacity:t},e,n,i)},animate:function(e,t,n,i){var r=me.isEmptyObject(e),o=me.speed(t,n,i),a=function(){var t=V(this,me.extend({},e),o);(r||Re.get(this,"finish"))&&t.stop(!0)};return a.finish=a,r||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(e,t,n){var i=function(e){var t=e.stop;delete e.stop,t(n)};return"string"!=typeof e&&(n=t,t=e,e=void 0),t&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,r=null!=e&&e+"queueHooks",o=me.timers,a=Re.get(this);if(r)a[r]&&a[r].stop&&i(a[r]);else for(r in a)a[r]&&a[r].stop&&yt.test(r)&&i(a[r]);
for(r=o.length;r--;)o[r].elem!==this||null!=e&&o[r].queue!==e||(o[r].anim.stop(n),t=!1,o.splice(r,1));!t&&n||me.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,n=Re.get(this),i=n[e+"queue"],r=n[e+"queueHooks"],o=me.timers,a=i?i.length:0;for(n.finish=!0,me.queue(this,e,[]),r&&r.stop&&r.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;t<a;t++)i[t]&&i[t].finish&&i[t].finish.call(this);delete n.finish})}}),me.each(["toggle","show","hide"],function(e,t){var n=me.fn[t];me.fn[t]=function(e,i,r){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate($(t,!0),e,i,r)}}),me.each({slideDown:$("show"),slideUp:$("hide"),slideToggle:$("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){me.fn[e]=function(e,n,i){return this.animate(t,e,n,i)}}),me.timers=[],me.fx.tick=function(){var e,t=0,n=me.timers;for(mt=me.now();t<n.length;t++)e=n[t],e()||n[t]!==e||n.splice(t--,1);n.length||me.fx.stop(),mt=void 0},me.fx.timer=function(e){me.timers.push(e),me.fx.start()},me.fx.interval=13,me.fx.start=function(){gt||(gt=!0,q())},me.fx.stop=function(){gt=null},me.fx.speeds={slow:600,fast:200,_default:400},me.fn.delay=function(t,n){return t=me.fx?me.fx.speeds[t]||t:t,n=n||"fx",this.queue(n,function(n,i){var r=e.setTimeout(n,t);i.stop=function(){e.clearTimeout(r)}})},function(){var e=ne.createElement("input"),t=ne.createElement("select"),n=t.appendChild(ne.createElement("option"));e.type="checkbox",de.checkOn=""!==e.value,de.optSelected=n.selected,e=ne.createElement("input"),e.value="t",e.type="radio",de.radioValue="t"===e.value}();var bt,kt=me.expr.attrHandle;me.fn.extend({attr:function(e,t){return Fe(this,me.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){me.removeAttr(this,e)})}}),me.extend({attr:function(e,t,n){var i,r,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return"undefined"==typeof e.getAttribute?me.prop(e,t,n):(1===o&&me.isXMLDoc(e)||(r=me.attrHooks[t.toLowerCase()]||(me.expr.match.bool.test(t)?bt:void 0)),void 0!==n?null===n?void me.removeAttr(e,t):r&&"set"in r&&void 0!==(i=r.set(e,n,t))?i:(e.setAttribute(t,n+""),n):r&&"get"in r&&null!==(i=r.get(e,t))?i:(i=me.find.attr(e,t),null==i?void 0:i))},attrHooks:{type:{set:function(e,t){if(!de.radioValue&&"radio"===t&&r(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,i=0,r=t&&t.match(Oe);if(r&&1===e.nodeType)for(;n=r[i++];)e.removeAttribute(n)}}),bt={set:function(e,t,n){return t===!1?me.removeAttr(e,n):e.setAttribute(n,n),n}},me.each(me.expr.match.bool.source.match(/\w+/g),function(e,t){var n=kt[t]||me.find.attr;kt[t]=function(e,t,i){var r,o,a=t.toLowerCase();return i||(o=kt[a],kt[a]=r,r=null!=n(e,t,i)?a:null,kt[a]=o),r}});var xt=/^(?:input|select|textarea|button)$/i,wt=/^(?:a|area)$/i;me.fn.extend({prop:function(e,t){return Fe(this,me.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[me.propFix[e]||e]})}}),me.extend({prop:function(e,t,n){var i,r,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&me.isXMLDoc(e)||(t=me.propFix[t]||t,r=me.propHooks[t]),void 0!==n?r&&"set"in r&&void 0!==(i=r.set(e,n,t))?i:e[t]=n:r&&"get"in r&&null!==(i=r.get(e,t))?i:e[t]},propHooks:{tabIndex:{get:function(e){var t=me.find.attr(e,"tabindex");return t?parseInt(t,10):xt.test(e.nodeName)||wt.test(e.nodeName)&&e.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),de.optSelected||(me.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),me.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){me.propFix[this.toLowerCase()]=this}),me.fn.extend({addClass:function(e){var t,n,i,r,o,a,s,l=0;if(me.isFunction(e))return this.each(function(t){me(this).addClass(e.call(this,t,K(this)))});if("string"==typeof e&&e)for(t=e.match(Oe)||[];n=this[l++];)if(r=K(n),i=1===n.nodeType&&" "+z(r)+" "){for(a=0;o=t[a++];)i.indexOf(" "+o+" ")<0&&(i+=o+" ");s=z(i),r!==s&&n.setAttribute("class",s)}return this},removeClass:function(e){var t,n,i,r,o,a,s,l=0;if(me.isFunction(e))return this.each(function(t){me(this).removeClass(e.call(this,t,K(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof e&&e)for(t=e.match(Oe)||[];n=this[l++];)if(r=K(n),i=1===n.nodeType&&" "+z(r)+" "){for(a=0;o=t[a++];)for(;i.indexOf(" "+o+" ")>-1;)i=i.replace(" "+o+" "," ");s=z(i),r!==s&&n.setAttribute("class",s)}return this},toggleClass:function(e,t){var n=typeof e;return"boolean"==typeof t&&"string"===n?t?this.addClass(e):this.removeClass(e):me.isFunction(e)?this.each(function(n){me(this).toggleClass(e.call(this,n,K(this),t),t)}):this.each(function(){var t,i,r,o;if("string"===n)for(i=0,r=me(this),o=e.match(Oe)||[];t=o[i++];)r.hasClass(t)?r.removeClass(t):r.addClass(t);else void 0!==e&&"boolean"!==n||(t=K(this),t&&Re.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||e===!1?"":Re.get(this,"__className__")||""))})},hasClass:function(e){var t,n,i=0;for(t=" "+e+" ";n=this[i++];)if(1===n.nodeType&&(" "+z(K(n))+" ").indexOf(t)>-1)return!0;return!1}});var Ct=/\r/g;me.fn.extend({val:function(e){var t,n,i,r=this[0];return arguments.length?(i=me.isFunction(e),this.each(function(n){var r;1===this.nodeType&&(r=i?e.call(this,n,me(this).val()):e,null==r?r="":"number"==typeof r?r+="":Array.isArray(r)&&(r=me.map(r,function(e){return null==e?"":e+""})),t=me.valHooks[this.type]||me.valHooks[this.nodeName.toLowerCase()],t&&"set"in t&&void 0!==t.set(this,r,"value")||(this.value=r))})):r?(t=me.valHooks[r.type]||me.valHooks[r.nodeName.toLowerCase()],t&&"get"in t&&void 0!==(n=t.get(r,"value"))?n:(n=r.value,"string"==typeof n?n.replace(Ct,""):null==n?"":n)):void 0}}),me.extend({valHooks:{option:{get:function(e){var t=me.find.attr(e,"value");return null!=t?t:z(me.text(e))}},select:{get:function(e){var t,n,i,o=e.options,a=e.selectedIndex,s="select-one"===e.type,l=s?null:[],u=s?a+1:o.length;for(i=a<0?u:s?a:0;i<u;i++)if(n=o[i],(n.selected||i===a)&&!n.disabled&&(!n.parentNode.disabled||!r(n.parentNode,"optgroup"))){if(t=me(n).val(),s)return t;l.push(t)}return l},set:function(e,t){for(var n,i,r=e.options,o=me.makeArray(t),a=r.length;a--;)i=r[a],(i.selected=me.inArray(me.valHooks.option.get(i),o)>-1)&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),me.each(["radio","checkbox"],function(){me.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=me.inArray(me(e).val(),t)>-1}},de.checkOn||(me.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var St=/^(?:focusinfocus|focusoutblur)$/;me.extend(me.event,{trigger:function(t,n,i,r){var o,a,s,l,u,c,p,f=[i||ne],d=ce.call(t,"type")?t.type:t,h=ce.call(t,"namespace")?t.namespace.split("."):[];if(a=s=i=i||ne,3!==i.nodeType&&8!==i.nodeType&&!St.test(d+me.event.triggered)&&(d.indexOf(".")>-1&&(h=d.split("."),d=h.shift(),h.sort()),u=d.indexOf(":")<0&&"on"+d,t=t[me.expando]?t:new me.Event(d,"object"==typeof t&&t),t.isTrigger=r?2:3,t.namespace=h.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=i),n=null==n?[t]:me.makeArray(n,[t]),p=me.event.special[d]||{},r||!p.trigger||p.trigger.apply(i,n)!==!1)){if(!r&&!p.noBubble&&!me.isWindow(i)){for(l=p.delegateType||d,St.test(l+d)||(a=a.parentNode);a;a=a.parentNode)f.push(a),s=a;s===(i.ownerDocument||ne)&&f.push(s.defaultView||s.parentWindow||e)}for(o=0;(a=f[o++])&&!t.isPropagationStopped();)t.type=o>1?l:p.bindType||d,c=(Re.get(a,"events")||{})[t.type]&&Re.get(a,"handle"),c&&c.apply(a,n),c=u&&a[u],c&&c.apply&&Le(a)&&(t.result=c.apply(a,n),t.result===!1&&t.preventDefault());return t.type=d,r||t.isDefaultPrevented()||p._default&&p._default.apply(f.pop(),n)!==!1||!Le(i)||u&&me.isFunction(i[d])&&!me.isWindow(i)&&(s=i[u],s&&(i[u]=null),me.event.triggered=d,i[d](),me.event.triggered=void 0,s&&(i[u]=s)),t.result}},simulate:function(e,t,n){var i=me.extend(new me.Event,n,{type:e,isSimulated:!0});me.event.trigger(i,null,t)}}),me.fn.extend({trigger:function(e,t){return this.each(function(){me.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return me.event.trigger(e,t,n,!0)}}),me.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,t){me.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),me.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),de.focusin="onfocusin"in e,de.focusin||me.each({focus:"focusin",blur:"focusout"},function(e,t){var n=function(e){me.event.simulate(t,e.target,me.event.fix(e))};me.event.special[t]={setup:function(){var i=this.ownerDocument||this,r=Re.access(i,t);r||i.addEventListener(e,n,!0),Re.access(i,t,(r||0)+1)},teardown:function(){var i=this.ownerDocument||this,r=Re.access(i,t)-1;r?Re.access(i,t,r):(i.removeEventListener(e,n,!0),Re.remove(i,t))}}});var Tt=e.location,Pt=me.now(),Et=/\?/;me.parseXML=function(t){var n;if(!t||"string"!=typeof t)return null;try{n=(new e.DOMParser).parseFromString(t,"text/xml")}catch(i){n=void 0}return n&&!n.getElementsByTagName("parsererror").length||me.error("Invalid XML: "+t),n};var At=/\[\]$/,Dt=/\r?\n/g,jt=/^(?:submit|button|image|reset|file)$/i,Ot=/^(?:input|select|textarea|keygen)/i;me.param=function(e,t){var n,i=[],r=function(e,t){var n=me.isFunction(t)?t():t;i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)};if(Array.isArray(e)||e.jquery&&!me.isPlainObject(e))me.each(e,function(){r(this.name,this.value)});else for(n in e)X(n,e[n],t,r);return i.join("&")},me.fn.extend({serialize:function(){return me.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=me.prop(this,"elements");return e?me.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!me(this).is(":disabled")&&Ot.test(this.nodeName)&&!jt.test(e)&&(this.checked||!Ve.test(e))}).map(function(e,t){var n=me(this).val();return null==n?null:Array.isArray(n)?me.map(n,function(e){return{name:t.name,value:e.replace(Dt,"\r\n")}}):{name:t.name,value:n.replace(Dt,"\r\n")}}).get()}});var Mt=/%20/g,Nt=/#.*$/,Ft=/([?&])_=[^&]*/,Lt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Rt=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,_t=/^(?:GET|HEAD)$/,Ht=/^\/\//,It={},qt={},Bt="*/".concat("*"),$t=ne.createElement("a");$t.href=Tt.href,me.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Tt.href,type:"GET",isLocal:Rt.test(Tt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Bt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":me.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?J(J(e,me.ajaxSettings),t):J(me.ajaxSettings,e)},ajaxPrefilter:Q(It),ajaxTransport:Q(qt),ajax:function(t,n){function i(t,n,i,s){var u,f,d,k,x,w=n;c||(c=!0,l&&e.clearTimeout(l),r=void 0,a=s||"",C.readyState=t>0?4:0,u=t>=200&&t<300||304===t,i&&(k=Z(h,C,i)),k=ee(h,k,C,u),u?(h.ifModified&&(x=C.getResponseHeader("Last-Modified"),x&&(me.lastModified[o]=x),x=C.getResponseHeader("etag"),x&&(me.etag[o]=x)),204===t||"HEAD"===h.type?w="nocontent":304===t?w="notmodified":(w=k.state,f=k.data,d=k.error,u=!d)):(d=w,!t&&w||(w="error",t<0&&(t=0))),C.status=t,C.statusText=(n||w)+"",u?v.resolveWith(m,[f,w,C]):v.rejectWith(m,[C,w,d]),C.statusCode(b),b=void 0,p&&g.trigger(u?"ajaxSuccess":"ajaxError",[C,h,u?f:d]),y.fireWith(m,[C,w]),p&&(g.trigger("ajaxComplete",[C,h]),--me.active||me.event.trigger("ajaxStop")))}"object"==typeof t&&(n=t,t=void 0),n=n||{};var r,o,a,s,l,u,c,p,f,d,h=me.ajaxSetup({},n),m=h.context||h,g=h.context&&(m.nodeType||m.jquery)?me(m):me.event,v=me.Deferred(),y=me.Callbacks("once memory"),b=h.statusCode||{},k={},x={},w="canceled",C={readyState:0,getResponseHeader:function(e){var t;if(c){if(!s)for(s={};t=Lt.exec(a);)s[t[1].toLowerCase()]=t[2];t=s[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return c?a:null},setRequestHeader:function(e,t){return null==c&&(e=x[e.toLowerCase()]=x[e.toLowerCase()]||e,k[e]=t),this},overrideMimeType:function(e){return null==c&&(h.mimeType=e),this},statusCode:function(e){var t;if(e)if(c)C.always(e[C.status]);else for(t in e)b[t]=[b[t],e[t]];return this},abort:function(e){var t=e||w;return r&&r.abort(t),i(0,t),this}};if(v.promise(C),h.url=((t||h.url||Tt.href)+"").replace(Ht,Tt.protocol+"//"),h.type=n.method||n.type||h.method||h.type,h.dataTypes=(h.dataType||"*").toLowerCase().match(Oe)||[""],null==h.crossDomain){u=ne.createElement("a");try{u.href=h.url,u.href=u.href,h.crossDomain=$t.protocol+"//"+$t.host!=u.protocol+"//"+u.host}catch(S){h.crossDomain=!0}}if(h.data&&h.processData&&"string"!=typeof h.data&&(h.data=me.param(h.data,h.traditional)),Y(It,h,n,C),c)return C;p=me.event&&h.global,p&&0===me.active++&&me.event.trigger("ajaxStart"),h.type=h.type.toUpperCase(),h.hasContent=!_t.test(h.type),o=h.url.replace(Nt,""),h.hasContent?h.data&&h.processData&&0===(h.contentType||"").indexOf("application/x-www-form-urlencoded")&&(h.data=h.data.replace(Mt,"+")):(d=h.url.slice(o.length),h.data&&(o+=(Et.test(o)?"&":"?")+h.data,delete h.data),h.cache===!1&&(o=o.replace(Ft,"$1"),d=(Et.test(o)?"&":"?")+"_="+Pt++ +d),h.url=o+d),h.ifModified&&(me.lastModified[o]&&C.setRequestHeader("If-Modified-Since",me.lastModified[o]),me.etag[o]&&C.setRequestHeader("If-None-Match",me.etag[o])),(h.data&&h.hasContent&&h.contentType!==!1||n.contentType)&&C.setRequestHeader("Content-Type",h.contentType),C.setRequestHeader("Accept",h.dataTypes[0]&&h.accepts[h.dataTypes[0]]?h.accepts[h.dataTypes[0]]+("*"!==h.dataTypes[0]?", "+Bt+"; q=0.01":""):h.accepts["*"]);for(f in h.headers)C.setRequestHeader(f,h.headers[f]);if(h.beforeSend&&(h.beforeSend.call(m,C,h)===!1||c))return C.abort();if(w="abort",y.add(h.complete),C.done(h.success),C.fail(h.error),r=Y(qt,h,n,C)){if(C.readyState=1,p&&g.trigger("ajaxSend",[C,h]),c)return C;h.async&&h.timeout>0&&(l=e.setTimeout(function(){C.abort("timeout")},h.timeout));try{c=!1,r.send(k,i)}catch(S){if(c)throw S;i(-1,S)}}else i(-1,"No Transport");return C},getJSON:function(e,t,n){return me.get(e,t,n,"json")},getScript:function(e,t){return me.get(e,void 0,t,"script")}}),me.each(["get","post"],function(e,t){me[t]=function(e,n,i,r){return me.isFunction(n)&&(r=r||i,i=n,n=void 0),me.ajax(me.extend({url:e,type:t,dataType:r,data:n,success:i},me.isPlainObject(e)&&e))}}),me._evalUrl=function(e){return me.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},me.fn.extend({wrapAll:function(e){var t;return this[0]&&(me.isFunction(e)&&(e=e.call(this[0])),t=me(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(e){return me.isFunction(e)?this.each(function(t){me(this).wrapInner(e.call(this,t))}):this.each(function(){var t=me(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=me.isFunction(e);return this.each(function(n){me(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(e){return this.parent(e).not("body").each(function(){me(this).replaceWith(this.childNodes)}),this}}),me.expr.pseudos.hidden=function(e){return!me.expr.pseudos.visible(e)},me.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},me.ajaxSettings.xhr=function(){try{return new e.XMLHttpRequest}catch(t){}};var Gt={0:200,1223:204},Ut=me.ajaxSettings.xhr();de.cors=!!Ut&&"withCredentials"in Ut,de.ajax=Ut=!!Ut,me.ajaxTransport(function(t){var n,i;if(de.cors||Ut&&!t.crossDomain)return{send:function(r,o){var a,s=t.xhr();if(s.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(a in t.xhrFields)s[a]=t.xhrFields[a];t.mimeType&&s.overrideMimeType&&s.overrideMimeType(t.mimeType),t.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest");for(a in r)s.setRequestHeader(a,r[a]);n=function(e){return function(){n&&(n=i=s.onload=s.onerror=s.onabort=s.onreadystatechange=null,"abort"===e?s.abort():"error"===e?"number"!=typeof s.status?o(0,"error"):o(s.status,s.statusText):o(Gt[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=n(),i=s.onerror=n("error"),void 0!==s.onabort?s.onabort=i:s.onreadystatechange=function(){4===s.readyState&&e.setTimeout(function(){n&&i()})},n=n("abort");try{s.send(t.hasContent&&t.data||null)}catch(l){if(n)throw l}},abort:function(){n&&n()}}}),me.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),me.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return me.globalEval(e),e}}}),me.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),me.ajaxTransport("script",function(e){if(e.crossDomain){var t,n;return{send:function(i,r){t=me("<script>").prop({charset:e.scriptCharset,src:e.url}).on("load error",n=function(e){t.remove(),n=null,e&&r("error"===e.type?404:200,e.type)}),ne.head.appendChild(t[0])},abort:function(){n&&n()}}}});var Wt=[],Vt=/(=)\?(?=&|$)|\?\?/;me.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Wt.pop()||me.expando+"_"+Pt++;return this[e]=!0,e}}),me.ajaxPrefilter("json jsonp",function(t,n,i){var r,o,a,s=t.jsonp!==!1&&(Vt.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Vt.test(t.data)&&"data");if(s||"jsonp"===t.dataTypes[0])return r=t.jsonpCallback=me.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,s?t[s]=t[s].replace(Vt,"$1"+r):t.jsonp!==!1&&(t.url+=(Et.test(t.url)?"&":"?")+t.jsonp+"="+r),t.converters["script json"]=function(){return a||me.error(r+" was not called"),a[0]},t.dataTypes[0]="json",o=e[r],e[r]=function(){a=arguments},i.always(function(){void 0===o?me(e).removeProp(r):e[r]=o,t[r]&&(t.jsonpCallback=n.jsonpCallback,Wt.push(r)),a&&me.isFunction(o)&&o(a[0]),a=o=void 0}),"script"}),de.createHTMLDocument=function(){var e=ne.implementation.createHTMLDocument("").body;return e.innerHTML="<form></form><form></form>",2===e.childNodes.length}(),me.parseHTML=function(e,t,n){if("string"!=typeof e)return[];"boolean"==typeof t&&(n=t,t=!1);var i,r,o;return t||(de.createHTMLDocument?(t=ne.implementation.createHTMLDocument(""),i=t.createElement("base"),i.href=ne.location.href,t.head.appendChild(i)):t=ne),r=Se.exec(e),o=!n&&[],r?[t.createElement(r[1])]:(r=k([e],t,o),o&&o.length&&me(o).remove(),me.merge([],r.childNodes))},me.fn.load=function(e,t,n){var i,r,o,a=this,s=e.indexOf(" ");return s>-1&&(i=z(e.slice(s)),e=e.slice(0,s)),me.isFunction(t)?(n=t,t=void 0):t&&"object"==typeof t&&(r="POST"),a.length>0&&me.ajax({url:e,type:r||"GET",dataType:"html",data:t}).done(function(e){o=arguments,a.html(i?me("<div>").append(me.parseHTML(e)).find(i):e)}).always(n&&function(e,t){a.each(function(){n.apply(this,o||[e.responseText,t,e])})}),this},me.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){me.fn[t]=function(e){return this.on(t,e)}}),me.expr.pseudos.animated=function(e){return me.grep(me.timers,function(t){return e===t.elem}).length},me.offset={setOffset:function(e,t,n){var i,r,o,a,s,l,u,c=me.css(e,"position"),p=me(e),f={};"static"===c&&(e.style.position="relative"),s=p.offset(),o=me.css(e,"top"),l=me.css(e,"left"),u=("absolute"===c||"fixed"===c)&&(o+l).indexOf("auto")>-1,u?(i=p.position(),a=i.top,r=i.left):(a=parseFloat(o)||0,r=parseFloat(l)||0),me.isFunction(t)&&(t=t.call(e,n,me.extend({},s))),null!=t.top&&(f.top=t.top-s.top+a),null!=t.left&&(f.left=t.left-s.left+r),"using"in t?t.using.call(e,f):p.css(f)}},me.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){me.offset.setOffset(this,e,t)});var t,n,i,r,o=this[0];return o?o.getClientRects().length?(i=o.getBoundingClientRect(),t=o.ownerDocument,n=t.documentElement,r=t.defaultView,{top:i.top+r.pageYOffset-n.clientTop,left:i.left+r.pageXOffset-n.clientLeft}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n=this[0],i={top:0,left:0};return"fixed"===me.css(n,"position")?t=n.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),r(e[0],"html")||(i=e.offset()),i={top:i.top+me.css(e[0],"borderTopWidth",!0),left:i.left+me.css(e[0],"borderLeftWidth",!0)}),{top:t.top-i.top-me.css(n,"marginTop",!0),left:t.left-i.left-me.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===me.css(e,"position");)e=e.offsetParent;return e||Ye})}}),me.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,t){var n="pageYOffset"===t;me.fn[e]=function(i){return Fe(this,function(e,i,r){var o;return me.isWindow(e)?o=e:9===e.nodeType&&(o=e.defaultView),void 0===r?o?o[t]:e[i]:void(o?o.scrollTo(n?o.pageXOffset:r,n?r:o.pageYOffset):e[i]=r)},e,i,arguments.length)}}),me.each(["top","left"],function(e,t){me.cssHooks[t]=N(de.pixelPosition,function(e,n){if(n)return n=M(e,t),st.test(n)?me(e).position()[t]+"px":n})}),me.each({Height:"height",Width:"width"},function(e,t){me.each({padding:"inner"+e,content:t,"":"outer"+e},function(n,i){me.fn[i]=function(r,o){var a=arguments.length&&(n||"boolean"!=typeof r),s=n||(r===!0||o===!0?"margin":"border");return Fe(this,function(t,n,r){var o;return me.isWindow(t)?0===i.indexOf("outer")?t["inner"+e]:t.document.documentElement["client"+e]:9===t.nodeType?(o=t.documentElement,Math.max(t.body["scroll"+e],o["scroll"+e],t.body["offset"+e],o["offset"+e],o["client"+e])):void 0===r?me.css(t,n,s):me.style(t,n,r,s)},t,a?r:void 0,a)}})}),me.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,i){return this.on(t,e,n,i)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}}),me.holdReady=function(e){e?me.readyWait++:me.ready(!0)},me.isArray=Array.isArray,me.parseJSON=JSON.parse,me.nodeName=r,"function"==typeof define&&define.amd&&define("jquery",[],function(){return me});var zt=e.jQuery,Kt=e.$;return me.noConflict=function(t){return e.$===me&&(e.$=Kt),t&&e.jQuery===me&&(e.jQuery=zt),me},t||(e.jQuery=e.$=me),me}),function(e){e.fn.bPopup=function(t,n){function i(){switch(g.contentContainer=e(g.contentContainer||A),g.content){case"iframe":var t=e('<iframe class="b-iframe" '+g.iframeAttr+"></iframe>");t.appendTo(g.contentContainer),S=A.outerHeight(!0),T=A.outerWidth(!0),r(),t.attr("src",g.loadUrl),d(g.loadCallback);break;case"image":r(),e("<img />").load(function(){d(g.loadCallback),s(e(this))}).attr("src",g.loadUrl).hide().appendTo(g.contentContainer);break;default:r(),e('<div class="b-ajax-wrapper"></div>').load(g.loadUrl,g.loadData,function(t,n,i){d(g.loadCallback,n),s(e(this))}).hide().appendTo(g.contentContainer)}}function r(){g.modal&&e('<div class="b-modal '+v+'"></div>').css({backgroundColor:g.modalColor,position:"fixed",top:0,right:0,bottom:0,left:0,opacity:0,zIndex:g.zIndex+F}).appendTo(g.appendTo).fadeTo(g.speed,g.opacity),h(),A.data("bPopup",g).data("id",v).css({left:"slideIn"==g.transition||"slideBack"==g.transition?"slideBack"==g.transition?D.scrollLeft()+M:-1*(C+T):p(!(!g.follow[0]&&k||x)),position:g.positionStyle||"absolute",top:"slideDown"==g.transition||"slideUp"==g.transition?"slideUp"==g.transition?D.scrollTop()+O:w+-1*S:f(!(!g.follow[1]&&b||x)),"z-index":g.zIndex+F+1}).each(function(){g.appending&&e(this).appendTo(g.appendTo)}),u(!0)}function o(){return g.modal&&e(".b-modal."+A.data("id")).fadeTo(g.speed,0,function(){e(this).remove()}),g.scrollBar||e("html").css("overflow","auto"),e(".b-modal."+v).unbind("click"),D.unbind("keydown."+v),j.unbind("."+v).data("bPopup",0<j.data("bPopup")-1?j.data("bPopup")-1:null),A.undelegate(".bClose, ."+g.closeClass,"click."+v,o).data("bPopup",null),clearTimeout(E),u(),!1}function a(t){O=j.height(),M=j.width(),y=m(),(y.x||y.y)&&(clearTimeout(P),P=setTimeout(function(){h(),t=t||g.followSpeed;var n={};y.x&&(n.left=g.follow[0]?p(!0):"auto"),y.y&&(n.top=g.follow[1]?f(!0):"auto"),A.dequeue().each(function(){x?e(this).css({left:C,top:w}):e(this).animate(n,t,g.followEasing)})},50))}function s(e){var t=e.width(),n=e.height(),i={};g.contentContainer.css({height:n,width:t}),n>=A.height()&&(i.height=A.height()),t>=A.width()&&(i.width=A.width()),S=A.outerHeight(!0),T=A.outerWidth(!0),h(),g.contentContainer.css({height:"auto",width:"auto"}),i.left=p(!(!g.follow[0]&&k||x)),i.top=f(!(!g.follow[1]&&b||x)),A.animate(i,250,function(){e.show(),y=m()})}function l(){j.data("bPopup",F),A.delegate(".bClose, ."+g.closeClass,"click."+v,o),g.modalClose&&e(".b-modal."+v).css("cursor","pointer").bind("click",o),N||!g.follow[0]&&!g.follow[1]||j.bind("scroll."+v,function(){if(y.x||y.y){var e={};y.x&&(e.left=g.follow[0]?p(!x):"auto"),y.y&&(e.top=g.follow[1]?f(!x):"auto"),A.dequeue().animate(e,g.followSpeed,g.followEasing)}}).bind("resize."+v,function(){a()}),g.escClose&&D.bind("keydown."+v,function(e){27==e.which&&o()})}function u(e){function t(t){A.css({display:"block",opacity:1}).animate(t,g.speed,g.easing,function(){c(e)})}switch(e?g.transition:g.transitionClose||g.transition){case"slideIn":t({left:e?p(!(!g.follow[0]&&k||x)):D.scrollLeft()-(T||A.outerWidth(!0))-200});break;case"slideBack":t({left:e?p(!(!g.follow[0]&&k||x)):D.scrollLeft()+M+200});break;case"slideDown":t({top:e?f(!(!g.follow[1]&&b||x)):D.scrollTop()-(S||A.outerHeight(!0))-200});break;case"slideUp":t({top:e?f(!(!g.follow[1]&&b||x)):D.scrollTop()+O+200});break;default:A.stop().fadeTo(g.speed,e?1:0,function(){c(e)})}}function c(e){e?(l(),d(n),g.autoClose&&(E=setTimeout(o,g.autoClose))):(A.hide(),d(g.onClose),g.loadUrl&&(g.contentContainer.empty(),A.css({height:"auto",width:"auto"})))}function p(e){return e?C+D.scrollLeft():C}function f(e){return e?w+D.scrollTop():w}function d(t,n){e.isFunction(t)&&t.call(A,n)}function h(){w=b?g.position[1]:Math.max(0,(O-A.outerHeight(!0))/2-g.amsl),C=k?g.position[0]:(M-A.outerWidth(!0))/2,y=m()}function m(){return{x:M>A.outerWidth(!0),y:O>A.outerHeight(!0)}}e.isFunction(t)&&(n=t,t=null);var g=e.extend({},e.fn.bPopup.defaults,t);g.scrollBar||e("html").css("overflow","hidden");var v,y,b,k,x,w,C,S,T,P,E,A=this,D=e(document),j=e(window),O=j.height(),M=j.width(),N=/OS 6(_\d)+/i.test(navigator.userAgent),F=0;return A.close=function(){o()},A.reposition=function(e){a(e)},A.each(function(){e(this).data("bPopup")||(d(g.onOpen),F=(j.data("bPopup")||0)+1,v="__b-popup"+F+"__",b="auto"!==g.position[1],k="auto"!==g.position[0],x="fixed"===g.positionStyle,S=A.outerHeight(!0),T=A.outerWidth(!0),g.loadUrl?i():r())})},e.fn.bPopup.defaults={amsl:50,appending:!0,appendTo:"body",autoClose:!1,closeClass:"b-close",content:"ajax",contentContainer:!1,easing:"swing",escClose:!0,follow:[!0,!0],followEasing:"swing",followSpeed:500,iframeAttr:'scrolling="no" frameborder="0"',loadCallback:!1,loadData:!1,loadUrl:!1,modal:!0,modalClose:!0,modalColor:"#000",onClose:!1,onOpen:!1,opacity:.7,position:["auto","auto"],positionStyle:"absolute",scrollBar:!0,speed:250,transition:"fadeIn",transitionClose:!1,zIndex:9997}}(jQuery),!function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=3)}([function(e,t,n){"use strict";var i,r,o;"function"==typeof Symbol&&Symbol.iterator,!function(a){r=[n(2)],void 0!==(o="function"==typeof(i=a)?i.apply(t,r):i)&&(e.exports=o)}(function(e){return e})},function(e,t,n){"use strict";var i,r,o,a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};!function(a){r=[n(0),n(10),n(11)],void 0!==(o="function"==typeof(i=a)?i.apply(t,r):i)&&(e.exports=o)}(function(e,t,n,i){function r(t,n,a){return this instanceof r?(this.el=i,this.events={},this.maskset=i,this.refreshValue=!1,!0!==a&&(e.isPlainObject(t)?n=t:(n=n||{}).alias=t,this.opts=e.extend(!0,{},this.defaults,n),this.noMasksCache=n&&n.definitions!==i,this.userOptions=n||{},this.isRTL=this.opts.numericInput,o(this.opts.alias,n,this.opts)),void 0):new r(t,n,a)}function o(t,n,a){var s=r.prototype.aliases[t];return s?(s.alias&&o(s.alias,i,a),e.extend(!0,a,s),e.extend(!0,a,n),!0):(null===a.mask&&(a.mask=t),!1)}function s(t,n){function o(t,o,a){var s=!1;if(null!==t&&""!==t||((s=null!==a.regex)?t=(t=a.regex).replace(/^(\^)(.*)(\$)$/,"$2"):(s=!0,t=".*")),1===t.length&&!1===a.greedy&&0!==a.repeat&&(a.placeholder=""),a.repeat>0||"*"===a.repeat||"+"===a.repeat){var l="*"===a.repeat?0:"+"===a.repeat?1:a.repeat;t=a.groupmarker[0]+t+a.groupmarker[1]+a.quantifiermarker[0]+l+","+a.repeat+a.quantifiermarker[1]}var u,c=s?"regex_"+a.regex:a.numericInput?t.split("").reverse().join(""):t;return r.prototype.masksCache[c]===i||!0===n?(u={mask:t,maskToken:r.prototype.analyseMask(t,s,a),validPositions:{},_buffer:i,buffer:i,tests:{},metadata:o,maskLength:i},!0!==n&&(r.prototype.masksCache[c]=u,u=e.extend(!0,{},r.prototype.masksCache[c]))):u=e.extend(!0,{},r.prototype.masksCache[c]),u}if(e.isFunction(t.mask)&&(t.mask=t.mask(t)),e.isArray(t.mask)){if(t.mask.length>1){t.keepStatic=null===t.keepStatic||t.keepStatic;var a=t.groupmarker[0];return e.each(t.numericInput?t.mask.reverse():t.mask,function(n,r){a.length>1&&(a+=t.groupmarker[1]+t.alternatormarker+t.groupmarker[0]),a+=r.mask===i||e.isFunction(r.mask)?r:r.mask}),a+=t.groupmarker[1],o(a,t.mask,t)}t.mask=t.mask.pop()}return t.mask&&t.mask.mask!==i&&!e.isFunction(t.mask.mask)?o(t.mask.mask,t.mask,t):o(t.mask,t.mask,t)}function l(e){var t=n.createElement("input"),i="on"+e,r=i in t;return r||(t.setAttribute(i,"return;"),r="function"==typeof t[i]),t=null,r}function u(o,s,c){function h(e,t,n){t=t||0;var r,o,a,s=[],l=0,u=v();do!0===e&&m().validPositions[l]?(o=(a=m().validPositions[l]).match,r=a.locator.slice(),s.push(!0===n?a.input:!1===n?o.nativeDef:F(l,o))):(o=(a=k(l,r,l-1)).match,r=a.locator.slice(),(!1===c.jitMasking||l<u||"number"==typeof c.jitMasking&&isFinite(c.jitMasking)&&c.jitMasking>l)&&s.push(!1===n?o.nativeDef:F(l,o))),l++;while((V===i||l<V)&&(null!==o.fn||""!==o.def)||t>l);return""===s[s.length-1]&&s.pop(),!1===n&&m().maskLength!==i||(m().maskLength=l+1),s}function m(){return s}function g(e){var t=m();t.buffer=i,!0!==e&&(t.validPositions={},t.p=0)}function v(e,t,n){var r=-1,o=-1,a=n||m().validPositions;e===i&&(e=-1);for(var s in a){var l=parseInt(s);a[l]&&(t||!0!==a[l].generatedInput)&&(l<=e&&(r=l),l>=e&&(o=l))}return-1!==r&&e-r>1||o<e?r:o}function y(t,n,r,o){var a,s=t,l=e.extend(!0,{},m().validPositions),u=!1;for(m().p=t,a=n-1;a>=s;a--)m().validPositions[a]!==i&&(!0!==r&&(!m().validPositions[a].match.optionality&&function(e){var t=m().validPositions[e];if(t!==i&&null===t.match.fn){var n=m().validPositions[e-1],r=m().validPositions[e+1];return n!==i&&r!==i}return!1}(a)||!1===c.canClearPosition(m(),a,v(i,!0),o,c))||delete m().validPositions[a]);
for(g(!0),a=s+1;a<=v();){for(;m().validPositions[s]!==i;)s++;if(a<s&&(a=s+1),m().validPositions[a]===i&&j(a))a++;else{var p=k(a);!1===u&&l[s]&&l[s].match.def===p.match.def?(m().validPositions[s]=e.extend(!0,{},l[s]),m().validPositions[s].input=p.input,delete m().validPositions[a],a++):w(s,p.match.def)?!1!==D(s,p.input||F(a),!0)&&(delete m().validPositions[a],a++,u=!0):j(a)||(a++,s--),s++}}g(!0)}function b(e,t,n){for(var r,o=x(e=e>0?e-1:0),a=o.alternation!==i?o.locator[o.alternation].toString().split(","):[],s=0;s<t.length&&(!((r=t[s]).match&&(c.greedy&&!0!==r.match.optionalQuantifier||(!1===r.match.optionality||!1===r.match.newBlockMarker)&&!0!==r.match.optionalQuantifier)&&(o.alternation===i||o.alternation!==r.alternation||r.locator[o.alternation]!==i&&A(r.locator[o.alternation].toString().split(","),a)))||!0===n&&(null!==r.match.fn||/[0-9a-bA-Z]/.test(r.match.def)));s++);return r}function k(e,t,n){return m().validPositions[e]||b(e,C(e,t?t.slice():t,n))}function x(e){return m().validPositions[e]?m().validPositions[e]:C(e)[0]}function w(e,t){for(var n=!1,i=C(e),r=0;r<i.length;r++)if(i[r].match&&i[r].match.def===t){n=!0;break}return n}function C(t,n,r){function o(n,r,a,l){function p(a,l,g){function v(t,n){var i=0===e.inArray(t,n.matches);return i||e.each(n.matches,function(e,r){if(!0===r.isQuantifier&&(i=v(t,n.matches[e-1])))return!1}),i}function y(t,n,r){var o,a;if((m().tests[t]||m().validPositions[t])&&e.each(m().tests[t]||[m().validPositions[t]],function(e,t){if(t.mloc[n])return o=t,!1;var s=r!==i?r:t.alternation,l=t.locator[s]!==i?t.locator[s].toString().indexOf(n):-1;(a===i||l<a)&&-1!==l&&(o=t,a=l)}),o){var s=o.locator[o.alternation];return(o.mloc[n]||o.mloc[s]||o.locator).slice((r!==i?r:o.alternation)+1)}return r!==i?y(t,n):i}function b(e,t){e.mloc=e.mloc||{};var n=e.locator[e.alternation];if("string"==typeof n&&(n=n.split(",")[0]),e.mloc[n]===i&&(e.mloc[n]=e.locator.slice()),t!==i){for(var r in t.mloc)"string"==typeof r&&(r=r.split(",")[0]),e.mloc[r]===i&&(e.mloc[r]=t.mloc[r]);e.locator[e.alternation]=Object.keys(e.mloc).join(",")}}if(u>1e4)throw"Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. "+m().mask;if(u===t&&a.matches===i)return f.push({match:a,locator:l.reverse(),cd:h,mloc:{}}),!0;if(a.matches!==i){if(a.isGroup&&g!==a){if(a=p(n.matches[e.inArray(a,n.matches)+1],l))return!0}else if(a.isOptional){var k=a;if(a=o(a,r,l,g)){if(s=f[f.length-1].match,!v(s,k))return!0;d=!0,u=t}}else if(a.isAlternator){var x,w=a,C=[],S=f.slice(),T=l.length,P=r.length>0?r.shift():-1;if(-1===P||"string"==typeof P){var E,A=u,D=r.slice(),j=[];if("string"==typeof P)j=P.split(",");else for(E=0;E<w.matches.length;E++)j.push(E);for(var O=0;O<j.length;O++){E=parseInt(j[O]),f=[],r=y(u,E,T)||D.slice(),a=p(w.matches[E]||n.matches[E],[E].concat(l),g)||a,x=f.slice(),u=A,f=[];for(var M=0;M<x.length;M++){var N=x[M],F=!1;N.alternation=N.alternation||T,b(N);for(var L=0;L<C.length;L++){var R=C[L];if("string"!=typeof P||-1!==e.inArray(N.locator[N.alternation].toString(),j)){if(function(e,t){return e.match.nativeDef===t.match.nativeDef||e.match.def===t.match.nativeDef||e.match.nativeDef===t.match.def}(N,R)){F=!0,N.alternation===R.alternation&&-1===R.locator[R.alternation].toString().indexOf(N.locator[N.alternation])&&b(R,N),N.match.nativeDef!==R.match.nativeDef&&N.match.nativeDef===R.match.def&&(F=!1);break}if(N.match.def===R.match.def){F=!1;break}if(function(e,n){return null===e.match.fn&&null!==n.match.fn&&n.match.fn.test(e.match.def,m(),t,!1,c,!1)}(N,R)||function(e,n){return null!==e.match.fn&&null!==n.match.fn&&n.match.fn.test(e.match.def.replace(/[\[\]]/g,""),m(),t,!1,c,!1)}(N,R)){N.alternation===R.alternation&&-1===N.locator[N.alternation].toString().indexOf(R.locator[R.alternation].toString().split("")[0])&&(N.na=N.na||N.locator[N.alternation].toString(),-1===N.na.indexOf(N.locator[N.alternation].toString().split("")[0])&&(N.na=N.na+","+N.locator[R.alternation].toString().split("")[0]),F=!0,b(N,R),C.splice(C.indexOf(R),0,N));break}}}F||C.push(N)}}f=S.concat(C),u=t,d=f.length>0,a=C.length>0,r=D.slice()}else a=p(w.matches[P]||n.matches[P],[P].concat(l),g);if(a)return!0}else if(a.isQuantifier&&g!==n.matches[e.inArray(a,n.matches)-1])for(var _=a,H=r.length>0?r.shift():0;H<(isNaN(_.quantifier.max)?H+1:_.quantifier.max)&&u<=t;H++){var I=n.matches[e.inArray(_,n.matches)-1];if(a=p(I,[H].concat(l),I)){if(s=f[f.length-1].match,s.optionalQuantifier=H>_.quantifier.min-1,v(s,I)){if(H>_.quantifier.min-1){d=!0,u=t;break}return!0}return!0}}else if(a=o(a,r,l,g))return!0}else u++}for(var g=r.length>0?r.shift():0;g<n.matches.length;g++)if(!0!==n.matches[g].isQuantifier){var v=p(n.matches[g],[g].concat(a),l);if(v&&u===t)return v;if(u>t)break}}function a(e){if(c.keepStatic&&t>0&&e.length>1+(""===e[e.length-1].match.def?1:0)&&!0!==e[0].match.optionality&&!0!==e[0].match.optionalQuantifier&&null===e[0].match.fn&&!/[0-9a-bA-Z]/.test(e[0].match.def)){if(m().validPositions[t-1]===i)return[b(t,e)];if(m().validPositions[t-1].alternation===e[0].alternation)return[b(t,e)];if(m().validPositions[t-1])return[b(t,e)]}return e}var s,l=m().maskToken,u=n?r:0,p=n?n.slice():[0],f=[],d=!1,h=n?n.join(""):"";if(t>-1){if(n===i){for(var g,v=t-1;(g=m().validPositions[v]||m().tests[v])===i&&v>-1;)v--;g!==i&&v>-1&&(p=function(t,n){var r=[];return e.isArray(n)||(n=[n]),n.length>0&&(n[0].alternation===i?0===(r=b(t,n.slice()).locator.slice()).length&&(r=n[0].locator.slice()):e.each(n,function(e,t){if(""!==t.def)if(0===r.length)r=t.locator.slice();else for(var n=0;n<r.length;n++)t.locator[n]&&-1===r[n].toString().indexOf(t.locator[n])&&(r[n]+=","+t.locator[n])})),r}(v,g),h=p.join(""),u=v)}if(m().tests[t]&&m().tests[t][0].cd===h)return a(m().tests[t]);for(var y=p.shift();y<l.length&&!(o(l[y],p,[y])&&u===t||u>t);y++);}return(0===f.length||d)&&f.push({match:{fn:null,optionality:!0,casing:null,def:"",placeholder:""},locator:[],mloc:{},cd:h}),n!==i&&m().tests[t]?a(e.extend(!0,[],f)):(m().tests[t]=e.extend(!0,[],f),a(m().tests[t]))}function S(){return m()._buffer===i&&(m()._buffer=h(!1,1),m().buffer===i&&(m().buffer=m()._buffer.slice())),m()._buffer}function T(e){return m().buffer!==i&&!0!==e||(m().buffer=h(!0,v(),!0)),m().buffer}function P(e,t,n){var r,o;if(!0===e)g(),e=0,t=n.length;else for(r=e;r<t;r++)delete m().validPositions[r];for(o=e,r=e;r<t;r++)if(g(!0),n[r]!==c.skipOptionalPartCharacter){var a=D(o,n[r],!0,!0);!1!==a&&(g(!0),o=a.caret!==i?a.caret:a.pos+1)}}function E(t,n,i){switch(c.casing||n.casing){case"upper":t=t.toUpperCase();break;case"lower":t=t.toLowerCase();break;case"title":var o=m().validPositions[i-1];t=0===i||o&&o.input===String.fromCharCode(r.keyCode.SPACE)?t.toUpperCase():t.toLowerCase();break;default:if(e.isFunction(c.casing)){var a=Array.prototype.slice.call(arguments);a.push(m().validPositions),t=c.casing.apply(this,a)}}return t}function A(t,n,r){for(var o,a=c.greedy?n:n.slice(0,1),s=!1,l=r!==i?r.split(","):[],u=0;u<l.length;u++)-1!==(o=t.indexOf(l[u]))&&t.splice(o,1);for(var p=0;p<t.length;p++)if(-1!==e.inArray(t[p],a)){s=!0;break}return s}function D(t,n,o,a,s,l){function u(e){var t=Q?e.begin-e.end>1||e.begin-e.end==1:e.end-e.begin>1||e.end-e.begin==1;return t&&0===e.begin&&e.end===m().maskLength?"full":t}function p(n,r,o){var s=!1;return e.each(C(n),function(l,p){var d=p.match;if(T(!0),!1!==(s=null!=d.fn?d.fn.test(r,m(),n,o,c,u(t)):(r===d.def||r===c.skipOptionalPartCharacter)&&""!==d.def&&{c:F(n,d,!0)||d.def,pos:n})){var h=s.c!==i?s.c:r;h=h===c.skipOptionalPartCharacter&&null===d.fn?F(n,d,!0)||d.def:h;var b=n,k=T();if(s.remove!==i&&(e.isArray(s.remove)||(s.remove=[s.remove]),e.each(s.remove.sort(function(e,t){return t-e}),function(e,t){y(t,t+1,!0)})),s.insert!==i&&(e.isArray(s.insert)||(s.insert=[s.insert]),e.each(s.insert.sort(function(e,t){return e-t}),function(e,t){D(t.pos,t.c,!0,a)})),s.refreshFromBuffer){var x=s.refreshFromBuffer;if(P(!0===x?x:x.start,x.end,k),s.pos===i&&s.c===i)return s.pos=v(),!1;if((b=s.pos!==i?s.pos:n)!==n)return s=e.extend(s,D(b,h,!0,a)),!1}else if(!0!==s&&s.pos!==i&&s.pos!==n&&(b=s.pos,P(n,b,T().slice()),b!==n))return s=e.extend(s,D(b,h,!0)),!1;return(!0===s||s.pos!==i||s.c!==i)&&(l>0&&g(!0),f(b,e.extend({},p,{input:E(h,d,b)}),a,u(t))||(s=!1),!1)}}),s}function f(t,n,r,o){if(o||c.insertMode&&m().validPositions[t]!==i&&r===i){var a,s=e.extend(!0,{},m().validPositions),l=v(i,!0);for(a=t;a<=l;a++)delete m().validPositions[a];m().validPositions[t]=e.extend(!0,{},n);var u,p=!0,f=m().validPositions,h=!1,y=m().maskLength;for(a=u=t;a<=l;a++){var b=s[a];if(b!==i)for(var k=u;k<m().maskLength&&(null===b.match.fn&&f[a]&&(!0===f[a].match.optionalQuantifier||!0===f[a].match.optionality)||null!=b.match.fn);){if(k++,!1===h&&s[k]&&s[k].match.def===b.match.def)m().validPositions[k]=e.extend(!0,{},s[k]),m().validPositions[k].input=b.input,d(k),u=k,p=!0;else if(w(k,b.match.def)){var x=D(k,b.input,!0,!0);p=!1!==x,u=x.caret||x.insert?v():k,h=!0}else if(!(p=!0===b.generatedInput)&&k>=m().maskLength-1)break;if(m().maskLength<y&&(m().maskLength=y),p)break}if(!p)break}if(!p)return m().validPositions=e.extend(!0,{},s),g(!0),!1}else m().validPositions[t]=e.extend(!0,{},n);return g(!0),!0}function d(t){for(var n=t-1;n>-1&&!m().validPositions[n];n--);var r,o;for(n++;n<t;n++)m().validPositions[n]===i&&(!1===c.jitMasking||c.jitMasking>n)&&(""===(o=C(n,k(n-1).locator,n-1).slice())[o.length-1].match.def&&o.pop(),(r=b(n,o))&&(r.match.def===c.radixPointDefinitionSymbol||!j(n,!0)||e.inArray(c.radixPoint,T())<n&&r.match.fn&&r.match.fn.test(F(n),m(),n,!1,c))&&!1!==(x=p(n,F(n,r.match,!0)||(null==r.match.fn?r.match.def:""!==F(n)?F(n):T()[n]),!0))&&(m().validPositions[x.pos||n].generatedInput=!0))}o=!0===o;var h=t;t.begin!==i&&(h=Q&&!u(t)?t.end:t.begin);var x=!0,S=e.extend(!0,{},m().validPositions);if(e.isFunction(c.preValidation)&&!o&&!0!==a&&!0!==l&&(x=c.preValidation(T(),h,n,u(t),c)),!0===x){if(d(h),u(t)&&(B(i,r.keyCode.DELETE,t,!0,!0),h=m().p),h<m().maskLength&&(V===i||h<V)&&(x=p(h,n,o),(!o||!0===a)&&!1===x&&!0!==l)){var M=m().validPositions[h];if(!M||null!==M.match.fn||M.match.def!==n&&n!==c.skipOptionalPartCharacter){if((c.insertMode||m().validPositions[O(h)]===i)&&!j(h,!0))for(var N=h+1,L=O(h);N<=L;N++)if(!1!==(x=p(N,n,o))){!function(t,n){var r=m().validPositions[n];if(r)for(var o=r.locator,a=o.length,s=t;s<n;s++)if(m().validPositions[s]===i&&!j(s,!0)){var l=C(s).slice(),u=b(s,l,!0),c=-1;""===l[l.length-1].match.def&&l.pop(),e.each(l,function(e,t){for(var n=0;n<a;n++){if(t.locator[n]===i||!A(t.locator[n].toString().split(","),o[n].toString().split(","),t.na)){var r=o[n],s=u.locator[n],l=t.locator[n];r-s>Math.abs(r-l)&&(u=t);break}c<n&&(c=n,u=t)}}),(u=e.extend({},u,{input:F(s,u.match,!0)||u.match.def})).generatedInput=!0,f(s,u,!0),m().validPositions[n]=i,p(n,r.input,!0)}}(h,x.pos!==i?x.pos:N),h=N;break}}else x={caret:O(h)}}!1===x&&c.keepStatic&&!o&&!0!==s&&(x=function(t,n,r){var o,s,l,u,p,f,d,h,y=e.extend(!0,{},m().validPositions),b=!1,k=v();for(u=m().validPositions[k];k>=0;k--)if((l=m().validPositions[k])&&l.alternation!==i){if(o=k,s=m().validPositions[o].alternation,u.locator[l.alternation]!==l.locator[l.alternation])break;u=l}if(s!==i){h=parseInt(o);var x=u.locator[u.alternation||s]!==i?u.locator[u.alternation||s]:d[0];x.length>0&&(x=x.split(",")[0]);var w=m().validPositions[h],S=m().validPositions[h-1];e.each(C(h,S?S.locator:i,h-1),function(o,l){d=l.locator[s]?l.locator[s].toString().split(","):[];for(var u=0;u<d.length;u++){var k=[],C=0,S=0,T=!1;if(x<d[u]&&(l.na===i||-1===e.inArray(d[u],l.na.split(","))||-1===e.inArray(x.toString(),d))){m().validPositions[h]=e.extend(!0,{},l);var P=m().validPositions[h].locator;for(m().validPositions[h].locator[s]=parseInt(d[u]),null==l.match.fn?(w.input!==l.match.def&&(T=!0,!0!==w.generatedInput&&k.push(w.input)),S++,m().validPositions[h].generatedInput=!/[0-9a-bA-Z]/.test(l.match.def),m().validPositions[h].input=l.match.def):m().validPositions[h].input=w.input,p=h+1;p<v(i,!0)+1;p++)(f=m().validPositions[p])&&!0!==f.generatedInput&&/[0-9a-bA-Z]/.test(f.input)?k.push(f.input):p<t&&C++,delete m().validPositions[p];for(T&&k[0]===l.match.def&&k.shift(),g(!0),b=!0;k.length>0;){var E=k.shift();if(E!==c.skipOptionalPartCharacter&&!(b=D(v(i,!0)+1,E,!1,a,!0)))break}if(b){m().validPositions[h].locator=P;var A=v(t)+1;for(p=h+1;p<v()+1;p++)((f=m().validPositions[p])===i||null==f.match.fn)&&p<t+(S-C)&&S++;b=D((t+=S-C)>A?A:t,n,r,a,!0)}if(b)return!1;g(),m().validPositions=e.extend(!0,{},y)}}})}return b}(h,n,o)),!0===x&&(x={pos:h})}if(e.isFunction(c.postValidation)&&!1!==x&&!o&&!0!==a&&!0!==l){var R=c.postValidation(T(!0),x,c);if(R!==i){if(R.refreshFromBuffer&&R.buffer){var _=R.refreshFromBuffer;P(!0===_?_:_.start,_.end,R.buffer)}x=!0===R?x:R}}return x&&x.pos===i&&(x.pos=h),!1!==x&&!0!==l||(g(!0),m().validPositions=e.extend(!0,{},S)),x}function j(e,t){var n=k(e).match;if(""===n.def&&(n=x(e).match),null!=n.fn)return n.fn;if(!0!==t&&e>-1){var i=C(e);return i.length>1+(""===i[i.length-1].match.def?1:0)}return!1}function O(e,t){var n=m().maskLength;if(e>=n)return n;var i=e;for(C(n+1).length>1&&(n=h(!0,n+1,!1).kength);++i<n&&(!0===t&&(!0!==x(i).match.newBlockMarker||!j(i))||!0!==t&&!j(i)););return i}function M(e,t){var n,i=e;if(i<=0)return 0;for(;--i>0&&(!0===t&&!0!==x(i).match.newBlockMarker||!0!==t&&!j(i)&&((n=C(i)).length<2||2===n.length&&""===n[1].match.def)););return i}function N(t,n,r,o,a){if(o&&e.isFunction(c.onBeforeWrite)){var s=c.onBeforeWrite.call(K,o,n,r,c);if(s){if(s.refreshFromBuffer){var l=s.refreshFromBuffer;P(!0===l?l:l.start,l.end,s.buffer||n),n=T(!0)}r!==i&&(r=s.caret!==i?s.caret:r)}}t!==i&&(t.inputmask._valueSet(n.join("")),r===i||o!==i&&"blur"===o.type?G(t,r,0===n.length):_(t,r),!0===a&&(J=!0,e(t).trigger("input")))}function F(t,n,r){if((n=n||x(t).match).placeholder!==i||!0===r)return e.isFunction(n.placeholder)?n.placeholder(c):n.placeholder;if(null===n.fn){if(t>-1&&m().validPositions[t]===i){var o,a=C(t),s=[];if(a.length>1+(""===a[a.length-1].match.def?1:0))for(var l=0;l<a.length;l++)if(!0!==a[l].match.optionality&&!0!==a[l].match.optionalQuantifier&&(null===a[l].match.fn||o===i||!1!==a[l].match.fn.test(o.match.def,m(),t,!0,c))&&(s.push(a[l]),null===a[l].match.fn&&(o=a[l]),s.length>1&&/[0-9a-bA-Z]/.test(s[0].match.def)))return c.placeholder.charAt(t%c.placeholder.length)}return n.def}return c.placeholder.charAt(t%c.placeholder.length)}function L(t,n,o,a,s){function l(e,t){return-1!==h(!0,0,!1).slice(e,O(e)).join("").indexOf(t)&&!j(e)&&(x(e).match.nativeDef===t.charAt(0)||" "===x(e).match.nativeDef&&x(e+1).match.nativeDef===t.charAt(0))}var u=a.slice(),p="",f=-1,d=i;if(g(),o||!0===c.autoUnmask)f=O(f);else{var y=S().slice(0,O(-1)).join(""),b=u.join("").match(new RegExp("^"+r.escapeRegex(y),"g"));b&&b.length>0&&(u.splice(0,b.length*y.length),f=O(f))}-1===f?(m().p=O(f),f=0):m().p=f,e.each(u,function(n,r){if(r!==i)if(m().validPositions[n]===i&&u[n]===F(n)&&j(n,!0)&&!1===D(n,u[n],!0,i,i,!0))m().p++;else{var a=new e.Event("_checkval");a.which=r.charCodeAt(0),p+=r;var s=v(i,!0),h=x(s),g=k(s+1,h?h.locator.slice():i,s);if(!l(f,p)||o||c.autoUnmask){var y=o?n:null==g.match.fn&&g.match.optionality&&s+1<m().p?s+1:m().p;(d=ie.keypressEvent.call(t,a,!0,!1,o,y))&&(f=y+1,p="")}else d=ie.keypressEvent.call(t,a,!0,!1,!0,s+1);N(i,T(),d.forwardPosition,a,!1)}}),n&&N(t,T(),d?d.forwardPosition:i,s||new e.Event("checkval"),s&&"input"===s.type)}function R(t){if(t){if(t.inputmask===i)return t.value;t.inputmask&&t.inputmask.refreshValue&&ie.setValueEvent.call(t)}var n=[],r=m().validPositions;for(var o in r)r[o].match&&null!=r[o].match.fn&&n.push(r[o].input);var a=0===n.length?"":(Q?n.reverse():n).join("");if(e.isFunction(c.onUnMask)){var s=(Q?T().slice().reverse():T()).join("");a=c.onUnMask.call(K,s,a,c)}return a}function _(r,o,a,s){function l(e){return!0===s||!Q||"number"!=typeof e||c.greedy&&""===c.placeholder||(e=r.inputmask.__valueGet.call(r).length-e),e}var u;if(o===i)return r.setSelectionRange?(o=r.selectionStart,a=r.selectionEnd):t.getSelection?(u=t.getSelection().getRangeAt(0)).commonAncestorContainer.parentNode!==r&&u.commonAncestorContainer!==r||(o=u.startOffset,a=u.endOffset):n.selection&&n.selection.createRange&&(a=(o=0-(u=n.selection.createRange()).duplicate().moveStart("character",-r.inputmask._valueGet().length))+u.text.length),{begin:l(o),end:l(a)};if(e.isArray(o)&&(a=Q?o[0]:o[1],o=Q?o[1]:o[0]),o.begin!==i&&(a=Q?o.begin:o.end,o=Q?o.end:o.begin),"number"==typeof o){o=l(o),a="number"==typeof(a=l(a))?a:o;var p=parseInt(((r.ownerDocument.defaultView||t).getComputedStyle?(r.ownerDocument.defaultView||t).getComputedStyle(r,null):r.currentStyle).fontSize)*a;if(r.scrollLeft=p>r.scrollWidth?p:0,!1===c.insertMode&&o===a&&a++,r.inputmask.caretPos={begin:o,end:a},r.setSelectionRange)r.selectionStart=o,r.selectionEnd=a;else if(t.getSelection){if(u=n.createRange(),r.firstChild===i||null===r.firstChild){var f=n.createTextNode("");r.appendChild(f)}u.setStart(r.firstChild,o<r.inputmask._valueGet().length?o:r.inputmask._valueGet().length),u.setEnd(r.firstChild,a<r.inputmask._valueGet().length?a:r.inputmask._valueGet().length),u.collapse(!0);var d=t.getSelection();d.removeAllRanges(),d.addRange(u)}else r.createTextRange&&((u=r.createTextRange()).collapse(!0),u.moveEnd("character",a),u.moveStart("character",o),u.select());G(r,{begin:o,end:a})}}function H(t){var n,r,o=T(),a=o.length,s=v(),l={},u=m().validPositions[s],c=u!==i?u.locator.slice():i;for(n=s+1;n<o.length;n++)c=(r=k(n,c,n-1)).locator.slice(),l[n]=e.extend(!0,{},r);var p=u&&u.alternation!==i?u.locator[u.alternation]:i;for(n=a-1;n>s&&((r=l[n]).match.optionality||r.match.optionalQuantifier&&r.match.newBlockMarker||p&&(p!==l[n].locator[u.alternation]&&null!=r.match.fn||null===r.match.fn&&r.locator[u.alternation]&&A(r.locator[u.alternation].toString().split(","),p.toString().split(","))&&""!==C(n)[0].def))&&o[n]===F(n,r.match);n--)a--;return t?{l:a,def:l[a]?l[a].match:i}:a}function I(e){for(var t,n=H(),r=e.length,o=m().validPositions[v()];n<r&&!j(n,!0)&&(t=o!==i?k(n,o.locator.slice(""),o):x(n))&&!0!==t.match.optionality&&(!0!==t.match.optionalQuantifier&&!0!==t.match.newBlockMarker||n+1===r&&""===(o!==i?k(n+1,o.locator.slice(""),o):x(n+1)).match.def);)n++;for(;(t=m().validPositions[n-1])&&t&&t.match.optionality&&t.input===c.skipOptionalPartCharacter;)n--;return e.splice(n),e}function q(t){if(e.isFunction(c.isComplete))return c.isComplete(t,c);if("*"===c.repeat)return i;var n=!1,r=H(!0),o=M(r.l);if(r.def===i||r.def.newBlockMarker||r.def.optionality||r.def.optionalQuantifier){n=!0;for(var a=0;a<=o;a++){var s=k(a).match;if(null!==s.fn&&m().validPositions[a]===i&&!0!==s.optionality&&!0!==s.optionalQuantifier||null===s.fn&&t[a]!==F(a,s)){n=!1;break}}}return n}function B(t,n,o,a,s){if((c.numericInput||Q)&&(n===r.keyCode.BACKSPACE?n=r.keyCode.DELETE:n===r.keyCode.DELETE&&(n=r.keyCode.BACKSPACE),Q)){var l=o.end;o.end=o.begin,o.begin=l}n===r.keyCode.BACKSPACE&&(o.end-o.begin<1||!1===c.insertMode)?(o.begin=M(o.begin),m().validPositions[o.begin]!==i&&m().validPositions[o.begin].input===c.groupSeparator&&o.begin--):n===r.keyCode.DELETE&&o.begin===o.end&&(o.end=j(o.end,!0)&&m().validPositions[o.end]&&m().validPositions[o.end].input!==c.radixPoint?o.end+1:O(o.end)+1,m().validPositions[o.begin]!==i&&m().validPositions[o.begin].input===c.groupSeparator&&o.end++),y(o.begin,o.end,!1,a),!0!==a&&function(){if(c.keepStatic){for(var n=[],r=v(-1,!0),o=e.extend(!0,{},m().validPositions),a=m().validPositions[r];r>=0;r--){var s=m().validPositions[r];if(s){if(!0!==s.generatedInput&&/[0-9a-bA-Z]/.test(s.input)&&n.push(s.input),delete m().validPositions[r],s.alternation!==i&&s.locator[s.alternation]!==a.locator[s.alternation])break;a=s}}if(r>-1)for(m().p=O(v(-1,!0));n.length>0;){var l=new e.Event("keypress");l.which=n.pop().charCodeAt(0),ie.keypressEvent.call(t,l,!0,!1,!1,m().p)}else m().validPositions=e.extend(!0,{},o)}}();var u=v(o.begin,!0);if(u<o.begin)m().p=O(u);else if(!0!==a&&(m().p=o.begin,!0!==s))for(;m().p<u&&m().validPositions[m().p]===i;)m().p++}function $(i){function r(e){var t,r=n.createElement("span");for(var a in o)isNaN(a)&&-1!==a.indexOf("font")&&(r.style[a]=o[a]);r.style.textTransform=o.textTransform,r.style.letterSpacing=o.letterSpacing,r.style.position="absolute",r.style.height="auto",r.style.width="auto",r.style.visibility="hidden",r.style.whiteSpace="nowrap",n.body.appendChild(r);var s,l=i.inputmask._valueGet(),u=0;for(t=0,s=l.length;t<=s;t++){if(r.innerHTML+=l.charAt(t)||"_",r.offsetWidth>=e){var c=e-u,p=r.offsetWidth-e;r.innerHTML=l.charAt(t),t=(c-=r.offsetWidth/3)<p?t-1:t;break}u=r.offsetWidth}return n.body.removeChild(r),t}var o=(i.ownerDocument.defaultView||t).getComputedStyle(i,null),a=n.createElement("div");a.style.width=o.width,a.style.textAlign=o.textAlign,z=n.createElement("div"),i.inputmask.colorMask=z,z.className="im-colormask",i.parentNode.insertBefore(z,i),i.parentNode.removeChild(i),z.appendChild(a),z.appendChild(i),i.style.left=a.offsetLeft+"px",e(i).on("click",function(e){return _(i,r(e.clientX)),ie.clickEvent.call(i,[e])}),e(i).on("keydown",function(e){e.shiftKey||!1===c.insertMode||setTimeout(function(){G(i)},0)})}function G(e,t,r){function o(e){if(e===i&&(e=""),p||null!==a.fn&&s.input!==i)if(p&&(null!==a.fn&&s.input!==i||""===a.def)){p=!1;var t=u.length;u[t-1]=u[t-1]+"</span>",u.push(e)}else u.push(e);else p=!0,u.push("<span class='im-static'>"+e)}var a,s,l,u=[],p=!1,f=0;if(z!==i){var d=T();if(t===i?t=_(e):t.begin===i&&(t={begin:t,end:t}),!0!==r){var h=v();do m().validPositions[f]?(s=m().validPositions[f],a=s.match,l=s.locator.slice(),o(d[f])):(s=k(f,l,f-1),a=s.match,l=s.locator.slice(),(!1===c.jitMasking||f<h||"number"==typeof c.jitMasking&&isFinite(c.jitMasking)&&c.jitMasking>f)&&o(F(f,a))),f++;while((V===i||f<V)&&(null!==a.fn||""!==a.def)||h>f||p);p&&o(),n.activeElement===e&&(u.splice(t.begin,0,t.begin===t.end?'<mark class="im-caret" style="border-right-width: 1px;border-right-style: solid;">':'<mark class="im-caret-select">'),u.splice(t.end+1,0,"</mark>"))}var g=z.getElementsByTagName("div")[0];g.innerHTML=u.join(""),e.inputmask.positionColorMask(e,g)}}s=s||this.maskset,c=c||this.opts;var U,W,V,z,K=this,X=this.el,Q=this.isRTL,Y=!1,J=!1,Z=!1,ee=!1,te=!1,ne={on:function(t,n,o){var a=function(t){var n=this;if(n.inputmask===i&&"FORM"!==this.nodeName){var a=e.data(n,"_inputmask_opts");a?new r(a).mask(n):ne.off(n)}else{if("setvalue"===t.type||"FORM"===this.nodeName||!(n.disabled||n.readOnly&&!("keydown"===t.type&&t.ctrlKey&&67===t.keyCode||!1===c.tabThrough&&t.keyCode===r.keyCode.TAB))){switch(t.type){case"input":if(!0===J)return J=!1,t.preventDefault();p&&(te=!0);break;case"keydown":Y=!1,J=!1;break;case"keypress":if(!0===Y)return t.preventDefault();Y=!0;break;case"click":if(f||d){var s=arguments;return setTimeout(function(){o.apply(n,s)},0),!1}}var l=o.apply(n,arguments);return te&&(te=!1,setTimeout(function(){_(n,n.inputmask.caretPos,i,!0)})),!1===l&&(t.preventDefault(),t.stopPropagation()),l}t.preventDefault()}};t.inputmask.events[n]=t.inputmask.events[n]||[],t.inputmask.events[n].push(a),-1!==e.inArray(n,["submit","reset"])?null!==t.form&&e(t.form).on(n,a):e(t).on(n,a)},off:function(t,n){if(t.inputmask&&t.inputmask.events){var i;n?(i=[])[n]=t.inputmask.events[n]:i=t.inputmask.events,e.each(i,function(n,i){for(;i.length>0;){var r=i.pop();-1!==e.inArray(n,["submit","reset"])?null!==t.form&&e(t.form).off(n,r):e(t).off(n,r)}delete t.inputmask.events[n]})}}},ie={keydownEvent:function(t){var n=this,i=e(n),o=t.keyCode,a=_(n);if(o===r.keyCode.BACKSPACE||o===r.keyCode.DELETE||d&&o===r.keyCode.BACKSPACE_SAFARI||t.ctrlKey&&o===r.keyCode.X&&!l("cut"))t.preventDefault(),B(n,o,a),N(n,T(!0),m().p,t,n.inputmask._valueGet()!==T().join("")),n.inputmask._valueGet()===S().join("")?i.trigger("cleared"):!0===q(T())&&i.trigger("complete");else if(o===r.keyCode.END||o===r.keyCode.PAGE_DOWN){t.preventDefault();var s=O(v());c.insertMode||s!==m().maskLength||t.shiftKey||s--,_(n,t.shiftKey?a.begin:s,s,!0)}else o===r.keyCode.HOME&&!t.shiftKey||o===r.keyCode.PAGE_UP?(t.preventDefault(),_(n,0,t.shiftKey?a.begin:0,!0)):(c.undoOnEscape&&o===r.keyCode.ESCAPE||90===o&&t.ctrlKey)&&!0!==t.altKey?(L(n,!0,!1,U.split("")),i.trigger("click")):o!==r.keyCode.INSERT||t.shiftKey||t.ctrlKey?!0===c.tabThrough&&o===r.keyCode.TAB?(!0===t.shiftKey?(null===x(a.begin).match.fn&&(a.begin=O(a.begin)),a.end=M(a.begin,!0),a.begin=M(a.end,!0)):(a.begin=O(a.begin,!0),a.end=O(a.begin,!0),a.end<m().maskLength&&a.end--),a.begin<m().maskLength&&(t.preventDefault(),_(n,a.begin,a.end))):t.shiftKey||!1===c.insertMode&&(o===r.keyCode.RIGHT?setTimeout(function(){var e=_(n);_(n,e.begin)},0):o===r.keyCode.LEFT&&setTimeout(function(){var e=_(n);_(n,Q?e.begin+1:e.begin-1)},0)):(c.insertMode=!c.insertMode,_(n,c.insertMode||a.begin!==m().maskLength?a.begin:a.begin-1));c.onKeyDown.call(this,t,T(),_(n).begin,c),Z=-1!==e.inArray(o,c.ignorables)},keypressEvent:function(t,n,o,a,s){var l=this,u=e(l),p=t.which||t.charCode||t.keyCode;if(!(!0===n||t.ctrlKey&&t.altKey)&&(t.ctrlKey||t.metaKey||Z))return p===r.keyCode.ENTER&&U!==T().join("")&&(U=T().join(""),setTimeout(function(){u.trigger("change")},0)),!0;if(p){46===p&&!1===t.shiftKey&&""!==c.radixPoint&&(p=c.radixPoint.charCodeAt(0));var f,d=n?{begin:s,end:s}:_(l),h=String.fromCharCode(p);m().writeOutBuffer=!0;var v=D(d,h,a);if(!1!==v&&(g(!0),f=v.caret!==i?v.caret:O(v.pos.begin?v.pos.begin:v.pos),m().p=f),f=c.numericInput&&v.caret===i?M(f):f,!1!==o&&(setTimeout(function(){c.onKeyValidation.call(l,p,v,c)},0),m().writeOutBuffer&&!1!==v)){var y=T();N(l,y,f,t,!0!==n),!0!==n&&setTimeout(function(){!0===q(y)&&u.trigger("complete")},0)}if(t.preventDefault(),n)return!1!==v&&(v.forwardPosition=f),v}},pasteEvent:function(n){var i,r=this,o=n.originalEvent||n,a=e(r),s=r.inputmask._valueGet(!0),l=_(r);Q&&(i=l.end,l.end=l.begin,l.begin=i);var u=s.substr(0,l.begin),p=s.substr(l.end,s.length);if(u===(Q?S().reverse():S()).slice(0,l.begin).join("")&&(u=""),p===(Q?S().reverse():S()).slice(l.end).join("")&&(p=""),Q&&(i=u,u=p,p=i),t.clipboardData&&t.clipboardData.getData)s=u+t.clipboardData.getData("Text")+p;else{if(!o.clipboardData||!o.clipboardData.getData)return!0;s=u+o.clipboardData.getData("text/plain")+p}var f=s;if(e.isFunction(c.onBeforePaste)){if(!1===(f=c.onBeforePaste.call(K,s,c)))return n.preventDefault();f||(f=s)}return L(r,!1,!1,Q?f.split("").reverse():f.toString().split("")),N(r,T(),O(v()),n,U!==T().join("")),!0===q(T())&&a.trigger("complete"),n.preventDefault()},inputFallBackEvent:function(t){var n=this,i=n.inputmask._valueGet();if(T().join("")!==i){var o=_(n);if(i=function(e,t,n){return"."===t.charAt(n.begin-1)&&""!==c.radixPoint&&((t=t.split(""))[n.begin-1]=c.radixPoint.charAt(0),t=t.join("")),t}(0,i,o),i=function(e,t,n){if(f){var i=t.replace(T().join(""),"");if(1===i.length){var r=t.split("");r.splice(n.begin,0,i),t=r.join("")}}return t}(0,i,o),T().join("")!==i){var a=T().join(""),s=i.length>a.length?-1:0,l=i.substr(0,o.begin),u=i.substr(o.begin),p=a.substr(0,o.begin+s),d=a.substr(o.begin+s),h=o,m="",g=!1;if(l!==p){for(var v=(g=l.length>=p.length)?l.length:p.length,y=0;l.charAt(y)===p.charAt(y)&&y<v;y++);g&&(0===s&&(h.begin=y),m+=l.slice(y,h.end))}if(u!==d&&(u.length>d.length?m+=u.slice(0,1):u.length<d.length&&(h.end+=d.length-u.length,g||""===c.radixPoint||""!==u||l.charAt(h.begin+s-1)!==c.radixPoint||(h.begin--,m=c.radixPoint))),N(n,T(),{begin:h.begin+s,end:h.end+s}),m.length>0)e.each(m.split(""),function(t,i){var r=new e.Event("keypress");r.which=i.charCodeAt(0),Z=!1,ie.keypressEvent.call(n,r)});else{h.begin===h.end-1&&(h.begin=M(h.begin+1),h.begin===h.end-1?_(n,h.begin):_(n,h.begin,h.end));var b=new e.Event("keydown");b.keyCode=r.keyCode.DELETE,ie.keydownEvent.call(n,b),!1===c.insertMode&&_(n,_(n).begin-1)}t.preventDefault()}}},setValueEvent:function(t){this.inputmask.refreshValue=!1;var n=this,i=n.inputmask._valueGet(!0);e.isFunction(c.onBeforeMask)&&(i=c.onBeforeMask.call(K,i,c)||i),i=i.split(""),L(n,!0,!1,Q?i.reverse():i),U=T().join(""),(c.clearMaskOnLostFocus||c.clearIncomplete)&&n.inputmask._valueGet()===S().join("")&&n.inputmask._valueSet("")},focusEvent:function(e){var t=this,n=t.inputmask._valueGet();c.showMaskOnFocus&&(!c.showMaskOnHover||c.showMaskOnHover&&""===n)&&(t.inputmask._valueGet()!==T().join("")?N(t,T(),O(v())):!1===ee&&_(t,O(v()))),!0===c.positionCaretOnTab&&!1===ee&&""!==n&&(N(t,T(),_(t)),ie.clickEvent.apply(t,[e,!0])),U=T().join("")},mouseleaveEvent:function(e){var t=this;if(ee=!1,c.clearMaskOnLostFocus&&n.activeElement!==t){var i=T().slice(),r=t.inputmask._valueGet();r!==t.getAttribute("placeholder")&&""!==r&&(-1===v()&&r===S().join("")?i=[]:I(i),N(t,i))}},clickEvent:function(t,r){function o(t){if(""!==c.radixPoint){var n=m().validPositions;if(n[t]===i||n[t].input===F(t)){if(t<O(-1))return!0;var r=e.inArray(c.radixPoint,T());if(-1!==r){for(var o in n)if(r<o&&n[o].input!==F(o))return!1;return!0}}}return!1}var a=this;setTimeout(function(){if(n.activeElement===a){var e=_(a);if(r&&(Q?e.end=e.begin:e.begin=e.end),e.begin===e.end)switch(c.positionCaretOnClick){case"none":break;case"radixFocus":if(o(e.begin)){var t=T().join("").indexOf(c.radixPoint);_(a,c.numericInput?O(t):t);break}default:var s=e.begin,l=v(s,!0),u=O(l);if(s<u)_(a,j(s,!0)||j(s-1,!0)?s:O(s));else{var p=m().validPositions[l],f=k(u,p?p.match.locator:i,p),d=F(u,f.match);if(""!==d&&T()[u]!==d&&!0!==f.match.optionalQuantifier&&!0!==f.match.newBlockMarker||!j(u,!0)&&f.match.def===d){var h=O(u);(s>=h||s===u)&&(u=h)}_(a,u)}}}},0)},dblclickEvent:function(e){var t=this;setTimeout(function(){_(t,0,O(v()))},0)},cutEvent:function(i){var o=this,a=e(o),s=_(o),l=i.originalEvent||i,u=t.clipboardData||l.clipboardData,c=Q?T().slice(s.end,s.begin):T().slice(s.begin,s.end);u.setData("text",Q?c.reverse().join(""):c.join("")),n.execCommand&&n.execCommand("copy"),B(o,r.keyCode.DELETE,s),N(o,T(),m().p,i,U!==T().join("")),o.inputmask._valueGet()===S().join("")&&a.trigger("cleared")},blurEvent:function(t){var n=e(this),r=this;if(r.inputmask){var o=r.inputmask._valueGet(),a=T().slice();""===o&&z===i||(c.clearMaskOnLostFocus&&(-1===v()&&o===S().join("")?a=[]:I(a)),!1===q(a)&&(setTimeout(function(){n.trigger("incomplete")},0),c.clearIncomplete&&(g(),a=c.clearMaskOnLostFocus?[]:S().slice())),N(r,a,i,t)),U!==T().join("")&&(U=a.join(""),n.trigger("change"))}},mouseenterEvent:function(e){var t=this;ee=!0,n.activeElement!==t&&c.showMaskOnHover&&t.inputmask._valueGet()!==T().join("")&&N(t,T())},submitEvent:function(e){U!==T().join("")&&W.trigger("change"),c.clearMaskOnLostFocus&&-1===v()&&X.inputmask._valueGet&&X.inputmask._valueGet()===S().join("")&&X.inputmask._valueSet(""),c.removeMaskOnSubmit&&(X.inputmask._valueSet(X.inputmask.unmaskedvalue(),!0),setTimeout(function(){N(X,T())},0))},resetEvent:function(e){X.inputmask.refreshValue=!0,setTimeout(function(){W.trigger("setvalue")},0)}};r.prototype.positionColorMask=function(e,t){e.style.left=t.offsetLeft+"px"};var re;if(o!==i)switch(o.action){case"isComplete":return X=o.el,q(T());case"unmaskedvalue":return X!==i&&o.value===i||(re=o.value,re=(e.isFunction(c.onBeforeMask)?c.onBeforeMask.call(K,re,c)||re:re).split(""),L(i,!1,!1,Q?re.reverse():re),e.isFunction(c.onBeforeWrite)&&c.onBeforeWrite.call(K,i,T(),0,c)),R(X);case"mask":!function(t){ne.off(t);var r=function(t,r){var o=t.getAttribute("type"),s="INPUT"===t.tagName&&-1!==e.inArray(o,r.supportsInputType)||t.isContentEditable||"TEXTAREA"===t.tagName;if(!s)if("INPUT"===t.tagName){var l=n.createElement("input");l.setAttribute("type",o),s="text"===l.type,l=null}else s="partial";return!1!==s?function(t){function o(){return this.inputmask?this.inputmask.opts.autoUnmask?this.inputmask.unmaskedvalue():-1!==v()||!0!==r.nullable?n.activeElement===this&&r.clearMaskOnLostFocus?(Q?I(T().slice()).reverse():I(T().slice())).join(""):l.call(this):"":l.call(this)}function s(t){u.call(this,t),this.inputmask&&e(this).trigger("setvalue")}var l,u;if(!t.inputmask.__valueGet){if(!0!==r.noValuePatching){if(Object.getOwnPropertyDescriptor){"function"!=typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===a("test".__proto__)?function(e){
return e.__proto__}:function(e){return e.constructor.prototype});var c=Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(t),"value"):i;c&&c.get&&c.set?(l=c.get,u=c.set,Object.defineProperty(t,"value",{get:o,set:s,configurable:!0})):"INPUT"!==t.tagName&&(l=function(){return this.textContent},u=function(e){this.textContent=e},Object.defineProperty(t,"value",{get:o,set:s,configurable:!0}))}else n.__lookupGetter__&&t.__lookupGetter__("value")&&(l=t.__lookupGetter__("value"),u=t.__lookupSetter__("value"),t.__defineGetter__("value",o),t.__defineSetter__("value",s));t.inputmask.__valueGet=l,t.inputmask.__valueSet=u}t.inputmask._valueGet=function(e){return Q&&!0!==e?l.call(this.el).split("").reverse().join(""):l.call(this.el)},t.inputmask._valueSet=function(e,t){u.call(this.el,null===e||e===i?"":!0!==t&&Q?e.split("").reverse().join(""):e)},l===i&&(l=function(){return this.value},u=function(e){this.value=e},function(t){if(e.valHooks&&(e.valHooks[t]===i||!0!==e.valHooks[t].inputmaskpatch)){var n=e.valHooks[t]&&e.valHooks[t].get?e.valHooks[t].get:function(e){return e.value},o=e.valHooks[t]&&e.valHooks[t].set?e.valHooks[t].set:function(e,t){return e.value=t,e};e.valHooks[t]={get:function(e){if(e.inputmask){if(e.inputmask.opts.autoUnmask)return e.inputmask.unmaskedvalue();var t=n(e);return-1!==v(i,i,e.inputmask.maskset.validPositions)||!0!==r.nullable?t:""}return n(e)},set:function(t,n){var i,r=e(t);return i=o(t,n),t.inputmask&&r.trigger("setvalue"),i},inputmaskpatch:!0}}}(t.type),function(t){ne.on(t,"mouseenter",function(t){var n=e(this);this.inputmask._valueGet()!==T().join("")&&n.trigger("setvalue")})}(t))}}(t):t.inputmask=i,s}(t,c);if(!1!==r&&(X=t,W=e(X),-1===(V=X!==i?X.maxLength:i)&&(V=i),!0===c.colorMask&&$(X),p&&("inputmode"in X&&(X.inputmode=c.inputmode,X.setAttribute("inputmode",c.inputmode)),!0===c.disablePredictiveText&&("autocorrect"in X?X.autocorrect=!1:(!0!==c.colorMask&&$(X),X.type="password"))),!0===r&&(ne.on(X,"submit",ie.submitEvent),ne.on(X,"reset",ie.resetEvent),ne.on(X,"mouseenter",ie.mouseenterEvent),ne.on(X,"blur",ie.blurEvent),ne.on(X,"focus",ie.focusEvent),ne.on(X,"mouseleave",ie.mouseleaveEvent),!0!==c.colorMask&&ne.on(X,"click",ie.clickEvent),ne.on(X,"dblclick",ie.dblclickEvent),ne.on(X,"paste",ie.pasteEvent),ne.on(X,"dragdrop",ie.pasteEvent),ne.on(X,"drop",ie.pasteEvent),ne.on(X,"cut",ie.cutEvent),ne.on(X,"complete",c.oncomplete),ne.on(X,"incomplete",c.onincomplete),ne.on(X,"cleared",c.oncleared),p||!0===c.inputEventOnly?X.removeAttribute("maxLength"):(ne.on(X,"keydown",ie.keydownEvent),ne.on(X,"keypress",ie.keypressEvent)),ne.on(X,"compositionstart",e.noop),ne.on(X,"compositionupdate",e.noop),ne.on(X,"compositionend",e.noop),ne.on(X,"keyup",e.noop),ne.on(X,"input",ie.inputFallBackEvent),ne.on(X,"beforeinput",e.noop)),ne.on(X,"setvalue",ie.setValueEvent),U=S().join(""),""!==X.inputmask._valueGet(!0)||!1===c.clearMaskOnLostFocus||n.activeElement===X)){var o=e.isFunction(c.onBeforeMask)?c.onBeforeMask.call(K,X.inputmask._valueGet(!0),c)||X.inputmask._valueGet(!0):X.inputmask._valueGet(!0);""!==o&&L(X,!0,!1,Q?o.split("").reverse():o.split(""));var s=T().slice();U=s.join(""),!1===q(s)&&c.clearIncomplete&&g(),c.clearMaskOnLostFocus&&n.activeElement!==X&&(-1===v()?s=[]:I(s)),N(X,s),n.activeElement===X&&_(X,O(v()))}}(X);break;case"format":return re=(e.isFunction(c.onBeforeMask)?c.onBeforeMask.call(K,o.value,c)||o.value:o.value).split(""),L(i,!0,!1,Q?re.reverse():re),o.metadata?{value:Q?T().slice().reverse().join(""):T().join(""),metadata:u.call(this,{action:"getmetadata"},s,c)}:Q?T().slice().reverse().join(""):T().join("");case"isValid":o.value?(re=o.value.split(""),L(i,!0,!0,Q?re.reverse():re)):o.value=T().join("");for(var oe=T(),ae=H(),se=oe.length-1;se>ae&&!j(se);se--);return oe.splice(ae,se+1-ae),q(oe)&&o.value===T().join("");case"getemptymask":return S().join("");case"remove":return X&&X.inputmask&&(W=e(X),X.inputmask._valueSet(c.autoUnmask?R(X):X.inputmask._valueGet(!0)),ne.off(X),X.inputmask.colorMask&&((z=X.inputmask.colorMask).removeChild(X),z.parentNode.insertBefore(X,z),z.parentNode.removeChild(z)),Object.getOwnPropertyDescriptor&&Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(X),"value")&&X.inputmask.__valueGet&&Object.defineProperty(X,"value",{get:X.inputmask.__valueGet,set:X.inputmask.__valueSet,configurable:!0}):n.__lookupGetter__&&X.__lookupGetter__("value")&&X.inputmask.__valueGet&&(X.__defineGetter__("value",X.inputmask.__valueGet),X.__defineSetter__("value",X.inputmask.__valueSet)),X.inputmask=i),X;case"getmetadata":if(e.isArray(s.metadata)){var le=h(!0,0,!1).join("");return e.each(s.metadata,function(e,t){if(t.mask===le)return le=t,!1}),le}return s.metadata}}var c=navigator.userAgent,p=l("touchstart"),f=/iemobile/i.test(c),d=/iphone/i.test(c)&&!f;return r.prototype={dataAttribute:"data-inputmask",defaults:{placeholder:"_",optionalmarker:["[","]"],quantifiermarker:["{","}"],groupmarker:["(",")"],alternatormarker:"|",escapeChar:"\\",mask:null,regex:null,oncomplete:e.noop,onincomplete:e.noop,oncleared:e.noop,repeat:0,greedy:!0,autoUnmask:!1,removeMaskOnSubmit:!1,clearMaskOnLostFocus:!0,insertMode:!0,clearIncomplete:!1,alias:null,onKeyDown:e.noop,onBeforeMask:null,onBeforePaste:function(t,n){return e.isFunction(n.onBeforeMask)?n.onBeforeMask.call(this,t,n):t},onBeforeWrite:null,onUnMask:null,showMaskOnFocus:!0,showMaskOnHover:!0,onKeyValidation:e.noop,skipOptionalPartCharacter:" ",numericInput:!1,rightAlign:!1,undoOnEscape:!0,radixPoint:"",radixPointDefinitionSymbol:i,groupSeparator:"",keepStatic:null,positionCaretOnTab:!0,tabThrough:!1,supportsInputType:["text","tel","password","search"],ignorables:[8,9,13,19,27,33,34,35,36,37,38,39,40,45,46,93,112,113,114,115,116,117,118,119,120,121,122,123,0,229],isComplete:null,canClearPosition:e.noop,preValidation:null,postValidation:null,staticDefinitionSymbol:i,jitMasking:!1,nullable:!0,inputEventOnly:!1,noValuePatching:!1,positionCaretOnClick:"lvp",casing:null,inputmode:"verbatim",colorMask:!1,disablePredictiveText:!1,importDataAttributes:!0},definitions:{9:{validator:"[0-9１-９]",definitionSymbol:"*"},a:{validator:"[A-Za-zА-яЁёÀ-ÿµ]",definitionSymbol:"*"},"*":{validator:"[0-9１-９A-Za-zА-яЁёÀ-ÿµ]"}},aliases:{},masksCache:{},mask:function(a){function l(n,r,a,s){if(!0===r.importDataAttributes){var l,u,c,p,f=function(e,r){null!==(r=r!==i?r:n.getAttribute(s+"-"+e))&&("string"==typeof r&&(0===e.indexOf("on")?r=t[r]:"false"===r?r=!1:"true"===r&&(r=!0)),a[e]=r)},d=n.getAttribute(s);if(d&&""!==d&&(d=d.replace(new RegExp("'","g"),'"'),u=JSON.parse("{"+d+"}")),u){c=i;for(p in u)if("alias"===p.toLowerCase()){c=u[p];break}}f("alias",c),a.alias&&o(a.alias,a,r);for(l in r){if(u){c=i;for(p in u)if(p.toLowerCase()===l.toLowerCase()){c=u[p];break}}f(l,c)}}return e.extend(!0,r,a),("rtl"===n.dir||r.rightAlign)&&(n.style.textAlign="right"),("rtl"===n.dir||r.numericInput)&&(n.dir="ltr",n.removeAttribute("dir"),r.isRTL=!0),r}var c=this;return"string"==typeof a&&(a=n.getElementById(a)||n.querySelectorAll(a)),a=a.nodeName?[a]:a,e.each(a,function(t,n){var o=e.extend(!0,{},c.opts);l(n,o,e.extend(!0,{},c.userOptions),c.dataAttribute);var a=s(o,c.noMasksCache);a!==i&&(n.inputmask!==i&&(n.inputmask.opts.autoUnmask=!0,n.inputmask.remove()),n.inputmask=new r(i,i,(!0)),n.inputmask.opts=o,n.inputmask.noMasksCache=c.noMasksCache,n.inputmask.userOptions=e.extend(!0,{},c.userOptions),n.inputmask.isRTL=o.isRTL||o.numericInput,n.inputmask.el=n,n.inputmask.maskset=a,e.data(n,"_inputmask_opts",o),u.call(n.inputmask,{action:"mask"}))}),a&&a[0]?a[0].inputmask||this:this},option:function(t,n){return"string"==typeof t?this.opts[t]:"object"===(void 0===t?"undefined":a(t))?(e.extend(this.userOptions,t),this.el&&!0!==n&&this.mask(this.el),this):void 0},unmaskedvalue:function(e){return this.maskset=this.maskset||s(this.opts,this.noMasksCache),u.call(this,{action:"unmaskedvalue",value:e})},remove:function(){return u.call(this,{action:"remove"})},getemptymask:function(){return this.maskset=this.maskset||s(this.opts,this.noMasksCache),u.call(this,{action:"getemptymask"})},hasMaskedValue:function(){return!this.opts.autoUnmask},isComplete:function(){return this.maskset=this.maskset||s(this.opts,this.noMasksCache),u.call(this,{action:"isComplete"})},getmetadata:function(){return this.maskset=this.maskset||s(this.opts,this.noMasksCache),u.call(this,{action:"getmetadata"})},isValid:function(e){return this.maskset=this.maskset||s(this.opts,this.noMasksCache),u.call(this,{action:"isValid",value:e})},format:function(e,t){return this.maskset=this.maskset||s(this.opts,this.noMasksCache),u.call(this,{action:"format",value:e,metadata:t})},analyseMask:function(t,n,o){function a(e,t,n,i){this.matches=[],this.openGroup=e||!1,this.alternatorGroup=!1,this.isGroup=e||!1,this.isOptional=t||!1,this.isQuantifier=n||!1,this.isAlternator=i||!1,this.quantifier={min:1,max:1}}function s(t,a,s){s=s!==i?s:t.matches.length;var l=t.matches[s-1];if(n)0===a.indexOf("[")||k&&/\\d|\\s|\\w]/i.test(a)||"."===a?t.matches.splice(s++,0,{fn:new RegExp(a,o.casing?"i":""),optionality:t.isOptional,newBlockMarker:l===i||l.def!==a,casing:null,def:a,placeholder:i,nativeDef:a}):(k&&(a=a[a.length-1]),e.each(a.split(""),function(e,n){l=t.matches[s-1],t.matches.splice(s++,0,{fn:null,optionality:t.isOptional,newBlockMarker:l===i||l.def!==n&&null!==l.fn,casing:null,def:o.staticDefinitionSymbol||n,placeholder:o.staticDefinitionSymbol!==i?n:i,nativeDef:n})})),k=!1;else{var u=(o.definitions?o.definitions[a]:i)||r.prototype.definitions[a];u&&!k?t.matches.splice(s++,0,{fn:u.validator?"string"==typeof u.validator?new RegExp(u.validator,o.casing?"i":""):new function(){this.test=u.validator}:new RegExp("."),optionality:t.isOptional,newBlockMarker:l===i||l.def!==(u.definitionSymbol||a),casing:u.casing,def:u.definitionSymbol||a,placeholder:u.placeholder,nativeDef:a}):(t.matches.splice(s++,0,{fn:null,optionality:t.isOptional,newBlockMarker:l===i||l.def!==a&&null!==l.fn,casing:null,def:o.staticDefinitionSymbol||a,placeholder:o.staticDefinitionSymbol!==i?a:i,nativeDef:a}),k=!1)}}function l(t){t&&t.matches&&e.each(t.matches,function(e,r){var a=t.matches[e+1];(a===i||a.matches===i||!1===a.isQuantifier)&&r&&r.isGroup&&(r.isGroup=!1,n||(s(r,o.groupmarker[0],0),!0!==r.openGroup&&s(r,o.groupmarker[1]))),l(r)})}function u(){if(w.length>0){if(h=w[w.length-1],s(h,f),h.isAlternator){m=w.pop();for(var e=0;e<m.matches.length;e++)m.matches[e].isGroup=!1;w.length>0?(h=w[w.length-1]).matches.push(m):x.matches.push(m)}}else s(x,f)}function c(e){e.matches=e.matches.reverse();for(var t in e.matches)if(e.matches.hasOwnProperty(t)){var n=parseInt(t);if(e.matches[t].isQuantifier&&e.matches[n+1]&&e.matches[n+1].isGroup){var r=e.matches[t];e.matches.splice(t,1),e.matches.splice(n+1,0,r)}e.matches[t].matches!==i?e.matches[t]=c(e.matches[t]):e.matches[t]=function(e){return e===o.optionalmarker[0]?e=o.optionalmarker[1]:e===o.optionalmarker[1]?e=o.optionalmarker[0]:e===o.groupmarker[0]?e=o.groupmarker[1]:e===o.groupmarker[1]&&(e=o.groupmarker[0]),e}(e.matches[t])}return e}var p,f,d,h,m,g,v,y=/(?:[?*+]|\{[0-9\+\*]+(?:,[0-9\+\*]*)?\})|[^.?*+^${[]()|\\]+|./g,b=/\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,k=!1,x=new a,w=[],C=[];for(n&&(o.optionalmarker[0]=i,o.optionalmarker[1]=i);p=n?b.exec(t):y.exec(t);){if(f=p[0],n)switch(f.charAt(0)){case"?":f="{0,1}";break;case"+":case"*":f="{"+f+"}"}if(k)u();else switch(f.charAt(0)){case o.escapeChar:k=!0,n&&u();break;case o.optionalmarker[1]:case o.groupmarker[1]:if(d=w.pop(),d.openGroup=!1,d!==i)if(w.length>0){if((h=w[w.length-1]).matches.push(d),h.isAlternator){m=w.pop();for(var S=0;S<m.matches.length;S++)m.matches[S].isGroup=!1,m.matches[S].alternatorGroup=!1;w.length>0?(h=w[w.length-1]).matches.push(m):x.matches.push(m)}}else x.matches.push(d);else u();break;case o.optionalmarker[0]:w.push(new a((!1),(!0)));break;case o.groupmarker[0]:w.push(new a((!0)));break;case o.quantifiermarker[0]:var T=new a((!1),(!1),(!0)),P=(f=f.replace(/[{}]/g,"")).split(","),E=isNaN(P[0])?P[0]:parseInt(P[0]),A=1===P.length?E:isNaN(P[1])?P[1]:parseInt(P[1]);if("*"!==A&&"+"!==A||(E="*"===A?0:1),T.quantifier={min:E,max:A},w.length>0){var D=w[w.length-1].matches;(p=D.pop()).isGroup||((v=new a((!0))).matches.push(p),p=v),D.push(p),D.push(T)}else(p=x.matches.pop()).isGroup||(n&&null===p.fn&&"."===p.def&&(p.fn=new RegExp(p.def,o.casing?"i":"")),(v=new a((!0))).matches.push(p),p=v),x.matches.push(p),x.matches.push(T);break;case o.alternatormarker:if(w.length>0){var j=(h=w[w.length-1]).matches[h.matches.length-1];g=h.openGroup&&(j.matches===i||!1===j.isGroup&&!1===j.isAlternator)?w.pop():h.matches.pop()}else g=x.matches.pop();if(g.isAlternator)w.push(g);else if(g.alternatorGroup?(m=w.pop(),g.alternatorGroup=!1):m=new a((!1),(!1),(!1),(!0)),m.matches.push(g),w.push(m),g.openGroup){g.openGroup=!1;var O=new a((!0));O.alternatorGroup=!0,w.push(O)}break;default:u()}}for(;w.length>0;)d=w.pop(),x.matches.push(d);return x.matches.length>0&&(l(x),C.push(x)),(o.numericInput||o.isRTL)&&c(C[0]),C}},r.extendDefaults=function(t){e.extend(!0,r.prototype.defaults,t)},r.extendDefinitions=function(t){e.extend(!0,r.prototype.definitions,t)},r.extendAliases=function(t){e.extend(!0,r.prototype.aliases,t)},r.format=function(e,t,n){return r(t).format(e,n)},r.unmask=function(e,t){return r(t).unmaskedvalue(e)},r.isValid=function(e,t){return r(t).isValid(e)},r.remove=function(t){e.each(t,function(e,t){t.inputmask&&t.inputmask.remove()})},r.escapeRegex=function(e){var t=["/",".","*","+","?","|","(",")","[","]","{","}","\\","$","^"];return e.replace(new RegExp("(\\"+t.join("|\\")+")","gim"),"\\$1")},r.keyCode={BACKSPACE:8,BACKSPACE_SAFARI:127,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,RIGHT:39,SPACE:32,TAB:9,UP:38,X:88,CONTROL:17},r})},function(e,t){e.exports=jQuery},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{"default":e}}n(4),n(9),n(12),n(13),n(14);var r=i(n(1)),o=i(n(0)),a=i(n(2));o["default"]===a["default"]&&n(15),window.Inputmask=r["default"]},function(e,t,n){var i=n(5);"string"==typeof i&&(i=[[e.i,i,""]]);var r={hmr:!0};r.transform=void 0,n(7)(i,r),i.locals&&(e.exports=i.locals)},function(e,t,n){(e.exports=n(6)(void 0)).push([e.i,"mark.im-caret {\n    -webkit-animation: 1s blink step-end infinite !important;\n            animation: 1s blink step-end infinite !important;\n}\n\nmark.im-caret-select {\n    background-color: rgba(0, 0, 0, .25);\n}\n\n@-webkit-keyframes blink {\n    from, to {\n        border-right-color: black;\n    }\n    50% {\n        border-right-color: transparent;\n    }\n}\n\n@keyframes blink {\n    from, to {\n        border-right-color: black;\n    }\n    50% {\n        border-right-color: transparent;\n    }\n}\n\nspan.im-static {\n    color: grey;\n}\n\ndiv.im-colormask {\n    display: inline-block;\n    border-style: inset;\n    border-width: 2px;\n    -webkit-appearance: textfield;\n       -moz-appearance: textfield;\n            appearance: textfield;\n}\n\ndiv.im-colormask > input {\n    position: absolute !important;\n    display: inline-block;\n    background-color: transparent;\n    color: transparent;\n    caret-color: transparent;\n    -webkit-appearance: caret;\n       -moz-appearance: caret;\n            appearance: caret;\n    border-style: none;\n    left: 0; /*calculated*/\n}\n\ndiv.im-colormask > input:focus {\n    outline: none;\n}\n\ndiv.im-colormask > input::-moz-selection{\n    background: none;\n}\n\ndiv.im-colormask > input::selection{\n    background: none;\n}\ndiv.im-colormask > input::-moz-selection{\n    background: none;\n}\n\ndiv.im-colormask > div {\n    color: black;\n    display: inline-block;\n    width: 100px; /*calculated*/\n}",""])},function(e,t){function n(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=i(r),a=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(a).concat([o]).join("\n")}return[n].join("\n")}function i(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var i=n(t,e);return t[2]?"@media "+t[2]+"{"+i+"}":i}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var i={},r=0;r<this.length;r++){var o=this[r][0];"number"==typeof o&&(i[o]=!0)}for(r=0;r<e.length;r++){var a=e[r];"number"==typeof a[0]&&i[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},function(e,t,n){function i(e,t){for(var n=0;n<e.length;n++){var i=e[n],r=h[i.id];if(r){for(r.refs++,a=0;a<r.parts.length;a++)r.parts[a](i.parts[a]);for(;a<i.parts.length;a++)r.parts.push(c(i.parts[a],t))}else{for(var o=[],a=0;a<i.parts.length;a++)o.push(c(i.parts[a],t));h[i.id]={id:i.id,refs:1,parts:o}}}}function r(e,t){for(var n=[],i={},r=0;r<e.length;r++){var o=e[r],a=t.base?o[0]+t.base:o[0],s={css:o[1],media:o[2],sourceMap:o[3]};i[a]?i[a].parts.push(s):n.push(i[a]={id:a,parts:[s]})}return n}function o(e,t){var n=g(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var i=b[b.length-1];if("top"===e.insertAt)i?i.nextSibling?n.insertBefore(t,i.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),b.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var r=g(e.insertInto+" "+e.insertAt.before);n.insertBefore(t,r)}}function a(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=b.indexOf(e);t>=0&&b.splice(t,1)}function s(e){var t=document.createElement("style");return e.attrs.type="text/css",u(t,e.attrs),o(e,t),t}function l(e){var t=document.createElement("link");return e.attrs.type="text/css",e.attrs.rel="stylesheet",u(t,e.attrs),o(e,t),t}function u(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function c(e,t){var n,i,r,o;if(t.transform&&e.css){if(!(o=t.transform(e.css)))return function(){};e.css=o}if(t.singleton){var u=y++;n=v||(v=s(t)),i=p.bind(null,n,u,!1),r=p.bind(null,n,u,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=l(t),i=d.bind(null,n,t),r=function(){a(n),n.href&&URL.revokeObjectURL(n.href)}):(n=s(t),i=f.bind(null,n),r=function(){a(n)});return i(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;i(e=t)}else r()}}function p(e,t,n,i){var r=n?"":i.css;if(e.styleSheet)e.styleSheet.cssText=x(t,r);else{var o=document.createTextNode(r),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(o,a[t]):e.appendChild(o)}}function f(e,t){var n=t.css,i=t.media;if(i&&e.setAttribute("media",i),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}function d(e,t,n){var i=n.css,r=n.sourceMap,o=void 0===t.convertToAbsoluteUrls&&r;(t.convertToAbsoluteUrls||o)&&(i=k(i)),r&&(i+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var a=new Blob([i],{type:"text/css"}),s=e.href;e.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}var h={},m=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),g=function(e){var t={};return function(n){if(void 0===t[n]){var i=e.call(this,n);if(i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(r){i=null}t[n]=i}return t[n]}}(function(e){return document.querySelector(e)}),v=null,y=0,b=[],k=n(8);e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||(t.singleton=m()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=r(e,t);return i(n,t),function(e){for(var o=[],a=0;a<n.length;a++){var s=n[a];(l=h[s.id]).refs--,o.push(l)}for(e&&i(r(e,t),t),a=0;a<o.length;a++){var l=o[a];if(0===l.refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete h[l.id]}}}};var x=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}()},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,i=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var r=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});if(/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(r))return e;var o;return o=0===r.indexOf("//")?r:0===r.indexOf("/")?n+r:i+r.replace(/^\.\//,""),"url("+JSON.stringify(o)+")"})}},function(e,t,n){"use strict";var i,r,o;"function"==typeof Symbol&&Symbol.iterator,!function(a){r=[n(0),n(1)],void 0!==(o="function"==typeof(i=a)?i.apply(t,r):i)&&(e.exports=o)}(function(e,t){function n(e){if(!e.tokenizer){var t=[];for(var n in l)-1===t.indexOf(n[0])&&t.push(n[0]);e.tokenizer="("+t.join("+|")+")+?|.",e.tokenizer=new RegExp(e.tokenizer,"g")}return e.tokenizer}function i(e,t){return(!isFinite(e.day)||"29"==e.day&&!isFinite(e.rawyear)||new Date(e.date.getFullYear(),isFinite(e.month)?e.month:e.date.getMonth()+1,0).getDate()>=e.day)&&t}function r(e,t){var n=!0;return t.min&&t.min.date.getTime()===t.min.date.getTime()&&(n=n&&t.min.date.getTime()<=e.getTime()),t.max&&t.max.date.getTime()===t.max.date.getTime()&&(n=n&&t.max.date.getTime()>=e.getTime()),n}function o(e,t,i){for(var r,o="";r=n(i).exec(e);)o+=void 0===t?l[r[0]]?"("+l[r[0]][0]+")":r[0]:l[r[0]]?l[r[0]][3].call(t.date):r[0];return o}function a(e,t){for(e=String(e),t=t||2;e.length<t;)e="0"+e;return e}function s(e,t,i){function r(e){var t=4===e.length?e:(new Date).getFullYear().toString().substr(0,4-e.length)+e;return i.min&&i.min.year&&i.max&&i.max.year?(t=t.replace(/[^0-9]/g,""),t=e.charAt(0)===i.max.year.charAt(0)?e.replace(/[^0-9]/g,"0"):t+i.min.year.substr(t.length)):t=t.replace(/[^0-9]/g,"0"),t}var o,a,s,u={date:new Date(1,0,1)},c=e;if("string"==typeof c){for(;a=n(i).exec(t);){var p=c.slice(0,a[0].length);l.hasOwnProperty(a[0])&&(o=l[a[0]][2],s=l[a[0]][1],function(e,t,n){"year"===o?(e[o]=r(t),e["raw"+o]=t):e[o]=n.min&&t.match(/[^0-9]/)?n.min[o]:t,void 0!==s&&s.call(e.date,"month"==o?parseInt(e[o])-1:e[o])}(u,p,i)),c=c.slice(p.length)}return u}}var l={d:["[1-9]|[12][0-9]|3[01]",Date.prototype.setDate,"day",Date.prototype.getDate],dd:["0[1-9]|[12][0-9]|3[01]",Date.prototype.setDate,"day",function(){return a(Date.prototype.getDate.call(this),2)}],ddd:[""],dddd:[""],m:["[1-9]|1[012]",Date.prototype.setMonth,"month",function(){return Date.prototype.getMonth.call(this)+1}],mm:["0[1-9]|1[012]",Date.prototype.setMonth,"month",function(){return a(Date.prototype.getMonth.call(this)+1,2)}],mmm:[""],mmmm:[""],yy:["[0-9]{2}",Date.prototype.setFullYear,"year",function(){return a(Date.prototype.getFullYear.call(this),2)}],yyyy:["[0-9]{4}",Date.prototype.setFullYear,"year",function(){return a(Date.prototype.getFullYear.call(this),4)}],h:["[1-9]|1[0-2]",Date.prototype.setHours,"hours",Date.prototype.getHours],hh:["0[1-9]|1[0-2]",Date.prototype.setHours,"hours",function(){return a(Date.prototype.getHours.call(this),2)}],hhh:["[0-9]+",Date.prototype.setHours,"hours",Date.prototype.getHours],H:["1?[1-9]|2[0-3]",Date.prototype.setHours,"hours",Date.prototype.getHours],HH:["[01][1-9]|2[0-3]",Date.prototype.setHours,"hours",function(){return a(Date.prototype.getHours.call(this),2)}],HHH:["[0-9]+",Date.prototype.setHours,"hours",Date.prototype.getHours],M:["[1-5]?[0-9]",Date.prototype.setMinutes,"minutes",Date.prototype.getMinutes],MM:["[0-5][0-9]",Date.prototype.setMinutes,"minutes",function(){return a(Date.prototype.getMinutes.call(this),2)}],s:["[1-5]?[0-9]",Date.prototype.setSeconds,"seconds",Date.prototype.getSeconds],ss:["[0-5][0-9]",Date.prototype.setSeconds,"seconds",function(){return a(Date.prototype.getSeconds.call(this),2)}],l:["[0-9]{3}",Date.prototype.setMilliseconds,"milliseconds",function(){return a(Date.prototype.getMilliseconds.call(this),3)}],L:["[0-9]{2}",Date.prototype.setMilliseconds,"milliseconds",function(){return a(Date.prototype.getMilliseconds.call(this),2)}],t:[""],tt:[""],T:[""],TT:[""],Z:[""],o:[""],S:[""]},u={isoDate:"yyyy-mm-dd",isoTime:"HH:MM:ss",isoDateTime:"yyyy-mm-dd'T'HH:MM:ss",isoUtcDateTime:"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"};return t.extendAliases({datetime:{mask:function(e){return e.inputFormat=u[e.inputFormat]||e.inputFormat,e.displayFormat=u[e.displayFormat]||e.displayFormat||e.inputFormat,e.outputFormat=u[e.outputFormat]||e.outputFormat||e.inputFormat,e.placeholder=e.placeholder!==t.prototype.defaults.placeholder?e.placeholder:e.inputFormat,e.min=s(e.min,e.inputFormat,e),e.max=s(e.max,e.inputFormat,e),e.regex=o(e.inputFormat,void 0,e),null},inputFormat:"isoDateTime",displayFormat:void 0,outputFormat:void 0,min:null,max:null,i18n:{dayNames:["Mon","Tue","Wed","Thu","Fri","Sat","Sun","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],monthNames:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","January","February","March","April","May","June","July","August","September","October","November","December"]},postValidation:function(e,t,n){var o=t,a=s(e.join(""),n.inputFormat,n);return o&&a.date.getTime()===a.date.getTime()&&(o=(o=i(a,o))&&r(a.date,n)),o},onKeyDown:function(i,r,o,a){var s=this;if(i.ctrlKey&&i.keyCode===t.keyCode.RIGHT){for(var l,u=new Date,c="";l=n(a).exec(a.inputFormat);)"d"===l[0].charAt(0)?c+=u.getDate().toString():"m"===l[0].charAt(0)?c+=(u.getMonth()+1).toString():"yyyy"===l[0]?c+=u.getFullYear().toString():"yy"===l[0]&&(c+=u.getYear().toString());s.inputmask._valueSet(c),e(s).trigger("setvalue")}},onUnMask:function(e,t,n){return o(n.outputFormat,s(e,n.inputFormat,n),n)},insertMode:!1}}),t})},function(e,t,n){"use strict";var i;"function"==typeof Symbol&&Symbol.iterator,void 0!==(i=function(){return window}.call(t,n,t,e))&&(e.exports=i)},function(e,t,n){"use strict";var i;"function"==typeof Symbol&&Symbol.iterator,void 0!==(i=function(){return document}.call(t,n,t,e))&&(e.exports=i)},function(e,t,n){"use strict";var i,r,o;"function"==typeof Symbol&&Symbol.iterator,!function(a){r=[n(0),n(1)],void 0!==(o="function"==typeof(i=a)?i.apply(t,r):i)&&(e.exports=o)}(function(e,t){return t.extendDefinitions({A:{validator:"[A-Za-zА-яЁёÀ-ÿµ]",casing:"upper"},"&":{validator:"[0-9A-Za-zА-яЁёÀ-ÿµ]",casing:"upper"},"#":{validator:"[0-9A-Fa-f]",casing:"upper"}}),t.extendAliases({url:{definitions:{i:{validator:"."}},mask:"(\\http://)|(\\http\\s://)|(ftp://)|(ftp\\s://)i{+}",insertMode:!1,autoUnmask:!1,inputmode:"url"},ip:{mask:"i[i[i]].i[i[i]].i[i[i]].i[i[i]]",definitions:{i:{validator:function(e,t,n,i,r){return n-1>-1&&"."!==t.buffer[n-1]?(e=t.buffer[n-1]+e,e=n-2>-1&&"."!==t.buffer[n-2]?t.buffer[n-2]+e:"0"+e):e="00"+e,new RegExp("25[0-5]|2[0-4][0-9]|[01][0-9][0-9]").test(e)}}},onUnMask:function(e,t,n){return e},inputmode:"numeric"},email:{mask:"*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]",greedy:!1,onBeforePaste:function(e,t){return(e=e.toLowerCase()).replace("mailto:","")},definitions:{"*":{validator:"[0-9A-Za-z!#$%&'*+/=?^_`{|}~-]",casing:"lower"},"-":{validator:"[0-9A-Za-z-]",casing:"lower"}},onUnMask:function(e,t,n){return e},inputmode:"email"},mac:{mask:"##:##:##:##:##:##"},vin:{mask:"V{13}9{4}",definitions:{V:{validator:"[A-HJ-NPR-Za-hj-npr-z\\d]",casing:"upper"}},clearIncomplete:!0,autoUnmask:!0}}),t})},function(e,t,n){"use strict";var i,r,o;"function"==typeof Symbol&&Symbol.iterator,!function(a){r=[n(0),n(1)],void 0!==(o="function"==typeof(i=a)?i.apply(t,r):i)&&(e.exports=o)}(function(e,t,n){function i(e,n){for(var i="",r=0;r<e.length;r++)i+=t.prototype.definitions[e.charAt(r)]||n.definitions[e.charAt(r)]||n.optionalmarker.start===e.charAt(r)||n.optionalmarker.end===e.charAt(r)||n.quantifiermarker.start===e.charAt(r)||n.quantifiermarker.end===e.charAt(r)||n.groupmarker.start===e.charAt(r)||n.groupmarker.end===e.charAt(r)||n.alternatormarker===e.charAt(r)?"\\"+e.charAt(r):e.charAt(r);return i}return t.extendAliases({numeric:{mask:function(e){if(0!==e.repeat&&isNaN(e.integerDigits)&&(e.integerDigits=e.repeat),e.repeat=0,e.groupSeparator===e.radixPoint&&e.digits&&"0"!==e.digits&&("."===e.radixPoint?e.groupSeparator=",":","===e.radixPoint?e.groupSeparator=".":e.groupSeparator="")," "===e.groupSeparator&&(e.skipOptionalPartCharacter=n),e.autoGroup=e.autoGroup&&""!==e.groupSeparator,e.autoGroup&&("string"==typeof e.groupSize&&isFinite(e.groupSize)&&(e.groupSize=parseInt(e.groupSize)),isFinite(e.integerDigits))){var t=Math.floor(e.integerDigits/e.groupSize),r=e.integerDigits%e.groupSize;e.integerDigits=parseInt(e.integerDigits)+(0===r?t-1:t),e.integerDigits<1&&(e.integerDigits="*")}e.placeholder.length>1&&(e.placeholder=e.placeholder.charAt(0)),"radixFocus"===e.positionCaretOnClick&&""===e.placeholder&&!1===e.integerOptional&&(e.positionCaretOnClick="lvp"),e.definitions[";"]=e.definitions["~"],e.definitions[";"].definitionSymbol="~",!0===e.numericInput&&(e.positionCaretOnClick="radixFocus"===e.positionCaretOnClick?"lvp":e.positionCaretOnClick,e.digitsOptional=!1,isNaN(e.digits)&&(e.digits=2),e.decimalProtect=!1);var o="[+]";if(o+=i(e.prefix,e),o+=!0===e.integerOptional?"~{1,"+e.integerDigits+"}":"~{"+e.integerDigits+"}",e.digits!==n){e.radixPointDefinitionSymbol=e.decimalProtect?":":e.radixPoint;var a=e.digits.toString().split(",");isFinite(a[0]&&a[1]&&isFinite(a[1]))?o+=e.radixPointDefinitionSymbol+";{"+e.digits+"}":(isNaN(e.digits)||parseInt(e.digits)>0)&&(o+=e.digitsOptional?"["+e.radixPointDefinitionSymbol+";{1,"+e.digits+"}]":e.radixPointDefinitionSymbol+";{"+e.digits+"}")}return o+=i(e.suffix,e),o+="[-]",e.greedy=!1,o},placeholder:"",greedy:!1,digits:"*",digitsOptional:!0,enforceDigitsOnBlur:!1,radixPoint:".",positionCaretOnClick:"radixFocus",groupSize:3,groupSeparator:"",autoGroup:!1,allowMinus:!0,negationSymbol:{front:"-",back:""},integerDigits:"+",integerOptional:!0,prefix:"",suffix:"",rightAlign:!0,decimalProtect:!0,min:null,max:null,step:1,insertMode:!0,autoUnmask:!1,unmaskAsNumber:!1,inputmode:"numeric",preValidation:function(t,i,r,o,a){if("-"===r||r===a.negationSymbol.front)return!0===a.allowMinus&&(a.isNegative=a.isNegative===n||!a.isNegative,""===t.join("")||{caret:i,dopost:!0});if(!1===o&&r===a.radixPoint&&a.digits!==n&&(isNaN(a.digits)||parseInt(a.digits)>0)){var s=e.inArray(a.radixPoint,t);if(-1!==s)return!0===a.numericInput?i===s:{caret:s+1}}return!0},postValidation:function(i,r,o){var a=o.suffix.split(""),s=o.prefix.split("");if(r.pos===n&&r.caret!==n&&!0!==r.dopost)return r;var l=r.caret!==n?r.caret:r.pos,u=i.slice();o.numericInput&&(l=u.length-l-1,u=u.reverse());var c=u[l];if(c===o.groupSeparator&&(c=u[l+=1]),l===u.length-o.suffix.length-1&&c===o.radixPoint)return r;c!==n&&c!==o.radixPoint&&c!==o.negationSymbol.front&&c!==o.negationSymbol.back&&(u[l]="?",o.prefix.length>0&&l>=(!1===o.isNegative?1:0)&&l<o.prefix.length-1+(!1===o.isNegative?1:0)?s[l-(!1===o.isNegative?1:0)]="?":o.suffix.length>0&&l>=u.length-o.suffix.length-(!1===o.isNegative?1:0)&&(a[l-(u.length-o.suffix.length-(!1===o.isNegative?1:0))]="?")),s=s.join(""),a=a.join("");var p=u.join("").replace(s,"");if(p=p.replace(a,""),p=p.replace(new RegExp(t.escapeRegex(o.groupSeparator),"g"),""),
p=p.replace(new RegExp("[-"+t.escapeRegex(o.negationSymbol.front)+"]","g"),""),p=p.replace(new RegExp(t.escapeRegex(o.negationSymbol.back)+"$"),""),isNaN(o.placeholder)&&(p=p.replace(new RegExp(t.escapeRegex(o.placeholder),"g"),"")),p.length>1&&1!==p.indexOf(o.radixPoint)&&("0"===c&&(p=p.replace(/^\?/g,"")),p=p.replace(/^0/g,"")),p.charAt(0)===o.radixPoint&&""!==o.radixPoint&&!0!==o.numericInput&&(p="0"+p),""!==p){if(p=p.split(""),(!o.digitsOptional||o.enforceDigitsOnBlur&&"blur"===r.event)&&isFinite(o.digits)){var f=e.inArray(o.radixPoint,p),d=e.inArray(o.radixPoint,u);-1===f&&(p.push(o.radixPoint),f=p.length-1);for(var h=1;h<=o.digits;h++)o.digitsOptional&&(!o.enforceDigitsOnBlur||"blur"!==r.event)||p[f+h]!==n&&p[f+h]!==o.placeholder.charAt(0)?-1!==d&&u[d+h]!==n&&(p[f+h]=p[f+h]||u[d+h]):p[f+h]=r.placeholder||o.placeholder.charAt(0)}if(!0!==o.autoGroup||""===o.groupSeparator||c===o.radixPoint&&r.pos===n&&!r.dopost)p=p.join("");else{var m=p[p.length-1]===o.radixPoint&&r.c===o.radixPoint;p=t(function(e,t){var n="";if(n+="("+t.groupSeparator+"*{"+t.groupSize+"}){*}",""!==t.radixPoint){var i=e.join("").split(t.radixPoint);i[1]&&(n+=t.radixPoint+"*{"+i[1].match(/^\d*\??\d*/)[0].length+"}")}return n}(p,o),{numericInput:!0,jitMasking:!0,definitions:{"*":{validator:"[0-9?]",cardinality:1}}}).format(p.join("")),m&&(p+=o.radixPoint),p.charAt(0)===o.groupSeparator&&p.substr(1)}}if(o.isNegative&&"blur"===r.event&&(o.isNegative="0"!==p),p=s+p,p+=a,o.isNegative&&(p=o.negationSymbol.front+p,p+=o.negationSymbol.back),p=p.split(""),c!==n)if(c!==o.radixPoint&&c!==o.negationSymbol.front&&c!==o.negationSymbol.back)(l=e.inArray("?",p))>-1?p[l]=c:l=r.caret||0;else if(c===o.radixPoint||c===o.negationSymbol.front||c===o.negationSymbol.back){var g=e.inArray(c,p);-1!==g&&(l=g)}o.numericInput&&(l=p.length-l-1,p=p.reverse());var v={caret:c===n||r.pos!==n?l+(o.numericInput?-1:1):l,buffer:p,refreshFromBuffer:r.dopost||i.join("")!==p.join("")};return v.refreshFromBuffer?v:r},onBeforeWrite:function(i,r,o,a){if(i)switch(i.type){case"keydown":return a.postValidation(r,{caret:o,dopost:!0},a);case"blur":case"checkval":var s;if(function(e){e.parseMinMaxOptions===n&&(null!==e.min&&(e.min=e.min.toString().replace(new RegExp(t.escapeRegex(e.groupSeparator),"g"),""),","===e.radixPoint&&(e.min=e.min.replace(e.radixPoint,".")),e.min=isFinite(e.min)?parseFloat(e.min):NaN,isNaN(e.min)&&(e.min=Number.MIN_VALUE)),null!==e.max&&(e.max=e.max.toString().replace(new RegExp(t.escapeRegex(e.groupSeparator),"g"),""),","===e.radixPoint&&(e.max=e.max.replace(e.radixPoint,".")),e.max=isFinite(e.max)?parseFloat(e.max):NaN,isNaN(e.max)&&(e.max=Number.MAX_VALUE)),e.parseMinMaxOptions="done")}(a),null!==a.min||null!==a.max){if(s=a.onUnMask(r.join(""),n,e.extend({},a,{unmaskAsNumber:!0})),null!==a.min&&s<a.min)return a.isNegative=a.min<0,a.postValidation(a.min.toString().replace(".",a.radixPoint).split(""),{caret:o,dopost:!0,placeholder:"0"},a);if(null!==a.max&&s>a.max)return a.isNegative=a.max<0,a.postValidation(a.max.toString().replace(".",a.radixPoint).split(""),{caret:o,dopost:!0,placeholder:"0"},a)}return a.postValidation(r,{caret:o,placeholder:"0",event:"blur"},a);case"_checkval":return{caret:o}}},regex:{integerPart:function(e,n){return n?new RegExp("["+t.escapeRegex(e.negationSymbol.front)+"+]?"):new RegExp("["+t.escapeRegex(e.negationSymbol.front)+"+]?\\d+")},integerNPart:function(e){return new RegExp("[\\d"+t.escapeRegex(e.groupSeparator)+t.escapeRegex(e.placeholder.charAt(0))+"]+")}},definitions:{"~":{validator:function(e,i,r,o,a,s){var l=o?new RegExp("[0-9"+t.escapeRegex(a.groupSeparator)+"]").test(e):new RegExp("[0-9]").test(e);if(!0===l){if(!0!==a.numericInput&&i.validPositions[r]!==n&&"~"===i.validPositions[r].match.def&&!s){var u=i.buffer.join(""),c=(u=(u=u.replace(new RegExp("[-"+t.escapeRegex(a.negationSymbol.front)+"]","g"),"")).replace(new RegExp(t.escapeRegex(a.negationSymbol.back)+"$"),"")).split(a.radixPoint);c.length>1&&(c[1]=c[1].replace(/0/g,a.placeholder.charAt(0))),"0"===c[0]&&(c[0]=c[0].replace(/0/g,a.placeholder.charAt(0))),u=c[0]+a.radixPoint+c[1]||"";var p=i._buffer.join("");for(u===a.radixPoint&&(u=p);null===u.match(t.escapeRegex(p)+"$");)p=p.slice(1);l=(u=(u=u.replace(p,"")).split(""))[r]===n?{pos:r,remove:r}:{pos:r}}}else o||e!==a.radixPoint||i.validPositions[r-1]!==n||(i.buffer[r]="0",l={pos:r+1});return l},cardinality:1},"+":{validator:function(e,t,n,i,r){return r.allowMinus&&("-"===e||e===r.negationSymbol.front)},cardinality:1,placeholder:""},"-":{validator:function(e,t,n,i,r){return r.allowMinus&&e===r.negationSymbol.back},cardinality:1,placeholder:""},":":{validator:function(e,n,i,r,o){var a="["+t.escapeRegex(o.radixPoint)+"]",s=new RegExp(a).test(e);return s&&n.validPositions[i]&&n.validPositions[i].match.placeholder===o.radixPoint&&(s={caret:i+1}),s},cardinality:1,placeholder:function(e){return e.radixPoint}}},onUnMask:function(e,n,i){if(""===n&&!0===i.nullable)return n;var r=e.replace(i.prefix,"");return r=r.replace(i.suffix,""),r=r.replace(new RegExp(t.escapeRegex(i.groupSeparator),"g"),""),""!==i.placeholder.charAt(0)&&(r=r.replace(new RegExp(i.placeholder.charAt(0),"g"),"0")),i.unmaskAsNumber?(""!==i.radixPoint&&-1!==r.indexOf(i.radixPoint)&&(r=r.replace(t.escapeRegex.call(this,i.radixPoint),".")),r=r.replace(new RegExp("^"+t.escapeRegex(i.negationSymbol.front)),"-"),r=r.replace(new RegExp(t.escapeRegex(i.negationSymbol.back)+"$"),""),Number(r)):r},isComplete:function(e,n){var i=e.join("");if(e.slice().join("")!==i)return!1;var r=i.replace(n.prefix,"");return r=r.replace(n.suffix,""),r=r.replace(new RegExp(t.escapeRegex(n.groupSeparator)+"([0-9]{3})","g"),"$1"),","===n.radixPoint&&(r=r.replace(t.escapeRegex(n.radixPoint),".")),isFinite(r)},onBeforeMask:function(e,i){if(i.isNegative=n,e=e.toString().charAt(e.length-1)===i.radixPoint?e.toString().substr(0,e.length-1):e.toString(),""!==i.radixPoint&&isFinite(e)){var r=e.split("."),o=""!==i.groupSeparator?parseInt(i.groupSize):0;2===r.length&&(r[0].length>o||r[1].length>o||r[0].length<=o&&r[1].length<o)&&(e=e.replace(".",i.radixPoint))}var a=e.match(/,/g),s=e.match(/\./g);if(e=s&&a?s.length>a.length?(e=e.replace(/\./g,"")).replace(",",i.radixPoint):a.length>s.length?(e=e.replace(/,/g,"")).replace(".",i.radixPoint):e.indexOf(".")<e.indexOf(",")?e.replace(/\./g,""):e.replace(/,/g,""):e.replace(new RegExp(t.escapeRegex(i.groupSeparator),"g"),""),0===i.digits&&(-1!==e.indexOf(".")?e=e.substring(0,e.indexOf(".")):-1!==e.indexOf(",")&&(e=e.substring(0,e.indexOf(",")))),""!==i.radixPoint&&isFinite(i.digits)&&-1!==e.indexOf(i.radixPoint)){var l=e.split(i.radixPoint)[1].match(new RegExp("\\d*"))[0];if(parseInt(i.digits)<l.toString().length){var u=Math.pow(10,parseInt(i.digits));e=e.replace(t.escapeRegex(i.radixPoint),"."),e=(e=Math.round(parseFloat(e)*u)/u).toString().replace(".",i.radixPoint)}}return e},canClearPosition:function(e,t,n,i,r){var o=e.validPositions[t],a=o.input!==r.radixPoint||null!==e.validPositions[t].match.fn&&!1===r.decimalProtect||o.input===r.radixPoint&&e.validPositions[t+1]&&null===e.validPositions[t+1].match.fn||isFinite(o.input)||t===n||o.input===r.groupSeparator||o.input===r.negationSymbol.front||o.input===r.negationSymbol.back;return!a||"+"!==o.match.nativeDef&&"-"!==o.match.nativeDef||(r.isNegative=!1),a},onKeyDown:function(n,i,r,o){var a=e(this);if(n.ctrlKey)switch(n.keyCode){case t.keyCode.UP:a.val(parseFloat(this.inputmask.unmaskedvalue())+parseInt(o.step)),a.trigger("setvalue");break;case t.keyCode.DOWN:a.val(parseFloat(this.inputmask.unmaskedvalue())-parseInt(o.step)),a.trigger("setvalue")}}},currency:{prefix:"$ ",groupSeparator:",",alias:"numeric",placeholder:"0",autoGroup:!0,digits:2,digitsOptional:!1,clearMaskOnLostFocus:!1},decimal:{alias:"numeric"},integer:{alias:"numeric",digits:0,radixPoint:""},percentage:{alias:"numeric",digits:2,digitsOptional:!0,radixPoint:".",placeholder:"0",autoGroup:!1,min:0,max:100,suffix:" %",allowMinus:!1}}),t})},function(e,t,n){"use strict";var i,r,o;"function"==typeof Symbol&&Symbol.iterator,!function(a){r=[n(0),n(1)],void 0!==(o="function"==typeof(i=a)?i.apply(t,r):i)&&(e.exports=o)}(function(e,t){function n(e,t){var n=(e.mask||e).replace(/#/g,"9").replace(/\)/,"9").replace(/[+()#-]/g,""),i=(t.mask||t).replace(/#/g,"9").replace(/\)/,"9").replace(/[+()#-]/g,""),r=(e.mask||e).split("#")[0],o=(t.mask||t).split("#")[0];return 0===o.indexOf(r)?-1:0===r.indexOf(o)?1:n.localeCompare(i)}var i=t.prototype.analyseMask;return t.prototype.analyseMask=function(t,n,r){function o(e,n,i){n=n||"",i=i||s,""!==n&&(i[n]={});for(var r="",a=i[n]||i,l=e.length-1;l>=0;l--)a[r=(t=e[l].mask||e[l]).substr(0,1)]=a[r]||[],a[r].unshift(t.substr(1)),e.splice(l,1);for(var u in a)a[u].length>500&&o(a[u].slice(),u,a)}function a(t){var n="",i=[];for(var o in t)e.isArray(t[o])?1===t[o].length?i.push(o+t[o]):i.push(o+r.groupmarker[0]+t[o].join(r.groupmarker[1]+r.alternatormarker+r.groupmarker[0])+r.groupmarker[1]):i.push(o+a(t[o]));return n+=1===i.length?i[0]:r.groupmarker[0]+i.join(r.groupmarker[1]+r.alternatormarker+r.groupmarker[0])+r.groupmarker[1]}var s={};return r.phoneCodes&&(r.phoneCodes&&r.phoneCodes.length>1e3&&(o((t=t.substr(1,t.length-2)).split(r.groupmarker[1]+r.alternatormarker+r.groupmarker[0])),t=a(s)),t=t.replace(/9/g,"\\9")),i.call(this,t,n,r)},t.extendAliases({abstractphone:{groupmarker:["<",">"],countrycode:"",phoneCodes:[],mask:function(e){return e.definitions={"#":t.prototype.definitions[9]},e.phoneCodes.sort(n)},keepStatic:!0,onBeforeMask:function(e,t){var n=e.replace(/^0{1,2}/,"").replace(/[\s]/g,"");return(n.indexOf(t.countrycode)>1||-1===n.indexOf(t.countrycode))&&(n="+"+t.countrycode+n),n},onUnMask:function(e,t,n){return e.replace(/[()#-]/g,"")},inputmode:"tel"}}),t})},function(e,t,n){"use strict";var i,r,o,a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};!function(a){r=[n(2),n(1)],void 0!==(o="function"==typeof(i=a)?i.apply(t,r):i)&&(e.exports=o)}(function(e,t){return void 0===e.fn.inputmask&&(e.fn.inputmask=function(n,i){var r,o=this[0];if(void 0===i&&(i={}),"string"==typeof n)switch(n){case"unmaskedvalue":return o&&o.inputmask?o.inputmask.unmaskedvalue():e(o).val();case"remove":return this.each(function(){this.inputmask&&this.inputmask.remove()});case"getemptymask":return o&&o.inputmask?o.inputmask.getemptymask():"";case"hasMaskedValue":return!(!o||!o.inputmask)&&o.inputmask.hasMaskedValue();case"isComplete":return!o||!o.inputmask||o.inputmask.isComplete();case"getmetadata":return o&&o.inputmask?o.inputmask.getmetadata():void 0;case"setvalue":e(o).val(i),o&&void 0===o.inputmask&&e(o).triggerHandler("setvalue");break;case"option":if("string"!=typeof i)return this.each(function(){if(void 0!==this.inputmask)return this.inputmask.option(i)});if(o&&void 0!==o.inputmask)return o.inputmask.option(i);break;default:return i.alias=n,r=new t(i),this.each(function(){r.mask(this)})}else{if("object"==(void 0===n?"undefined":a(n)))return r=new t(n),void 0===n.mask&&void 0===n.alias?this.each(function(){return void 0!==this.inputmask?this.inputmask.option(n):void r.mask(this)}):this.each(function(){r.mask(this)});if(void 0===n)return this.each(function(){(r=new t(i)).mask(this)})}}),e.fn.inputmask})}]);var EmptyBlock=function(e){this.container=$(e),this.init()};EmptyBlock.prototype.init=function(){this.updateHeight(),$(window).on("resize",this.updateHeight.bind(this))},EmptyBlock.prototype.updateHeight=function(){var e=$(window).height(),t=this.container.offset().top,n=e-t;this.container.height(n)};var FormFields=function(){this.init()};FormFields.prototype.init=function(){this.initMasks(),$(".field-image").on("change",this.uploadImage),$(".field-avatar").on("change",this.uploadAvatar),$(".field-textarea").on("input propertychange",this.checkLength)},FormFields.prototype.initMasks=function(){Inputmask.extendDefinitions({positionCaretOnTab:0}),$(".is-mobile").inputmask({mask:"+7 (999) 999-9999",clearIncomplete:!0})},FormFields.prototype.uploadImage=function(){var e=$(this).closest(".formLabel"),t=new FileReader,n=$(this).prop("files")[0];t.onloadend=function(){var n=t.result;e.addClass("with-image"),e.css("background-image",'url("'+n+'")')},n?t.readAsDataURL(n):(e.removeClass("with-image"),e.css("background-image",""))},FormFields.prototype.uploadAvatar=function(){var e=$(this).closest(".formLabel"),t=e.find(".formLabel__avatarInfo"),n=e.find(".formLabel__avatarImg"),i=new FileReader,r=$(this).prop("files")[0];i.onloadend=function(){var r=i.result;e.addClass("with-image"),n.attr("src",r),t.text("изменить фото")},r?i.readAsDataURL(r):(e.removeClass("with-image"),n.attr("src",""),t.text("загрузить фото"))},FormFields.prototype.checkLength=function(){var e=$(this).closest(".formLabel").find(".field-length"),t=e.find(".field-length-current"),n=+$(this).attr("maxlength"),i=$(this).val().length,r=n-i;e.toggleClass("is-full",0==r),t.text(r)};var Plug=function(){this.init()};Plug.prototype.init=function(){this.showPlugPopup()},Plug.prototype.showPlugPopup=function(){$(".popup-plug").bPopup({opacity:.5,follow:[!0,!1],closeClass:"popup-close"})};var Popups=function(){this.body=$("body"),this.bPopupOpened=!1,this.init()};Popups.prototype.init=function(){this.body.on("click",".popup-open",this.openPopup.bind(this))},Popups.prototype.openPopup=function(e){e.preventDefault();var t=this,n=$(e.target).closest(".popup-open").data("popup"),i=$("."+n),r="popup-close";this.bPopupOpened&&this.bPopupOpened.bPopup().close(),this.bPopupOpened=i.bPopup({opacity:.5,follow:[!0,!1],closeClass:r,onOpen:function(){t.body.addClass("popup-opened")},onClose:function(){t.bPopupOpened="",t.body.removeClass("popup-opened")}})};var Tabs=function(e){this.container=$(e),this.content=this.container.find(".tab-content"),this.links=this.container.find(".tab-link"),this.init()};Tabs.prototype.init=function(){this.checkActiveContent(),this.links.on("click",this.switchContent.bind(this))},Tabs.prototype.checkActiveContent=function(){var e=this.links.filter(".is-active"),t=this.links.index(e);this.content.eq(t).addClass("is-active"),$(window).trigger("resize")},Tabs.prototype.switchContent=function(e){e.preventDefault();var t=$(e.target);t.hasClass("is-active")||(this.links.removeClass("is-active"),this.content.removeClass("is-active"),t.addClass("is-active"),this.checkActiveContent())};var Tooltip=function(){this.content=$(".tooltip-content"),this.links=$(".tooltip-link"),this.init()};Tooltip.prototype.init=function(){var e=this;this.links.on("click",this.switchTooltip.bind(this)),$("body").on("click",function(t){$(t.target).closest(".tooltip-link").length||e.closeTooltips()})},Tooltip.prototype.switchTooltip=function(e){e.preventDefault(),e.stopPropagation();var t=$(e.target).closest(".tooltip-link"),n=t.closest(".tooltip-container").find(".tooltip-content");t.hasClass("is-active")?this.closeTooltips():(this.closeTooltips(),t.addClass("is-active"),n.stop().fadeIn())},Tooltip.prototype.closeTooltips=function(){this.links.removeClass("is-active"),this.content.stop().fadeOut()};var Vacancies=function(){this.showLink=$(".vacancy-show"),this.hideLink=$(".vacancy-close"),this.addVacancyLink=$(".vacancy-add"),this.addVacancyContainer=$(".vacancyAdd"),this.vacanciesInfo=$(".vacancy-info"),this.vacancyMap=$(".vacancy-map"),this.bodyOverlay=$(".contentWrapper__overlay"),this.init()};Vacancies.prototype.init=function(){this.showLink.on("click",this.showVacancy.bind(this)),this.hideLink.on("click",this.hideVacancy.bind(this)),this.vacanciesInfo.on("click",function(e){e.stopPropagation()}),this.addVacancyLink.on("click",this.addVacancy.bind(this))},Vacancies.prototype.showVacancy=function(e){e.preventDefault();var t=$(e.target).closest(".vacancy-show").find(".vacancy-info");t.addClass("is-active"),this.bodyOverlay.addClass("is-active"),this.initMap(t)},Vacancies.prototype.hideVacancy=function(e){e.preventDefault(),this.bodyOverlay.removeClass("is-active"),this.vacanciesInfo.removeClass("is-active"),this.vacancyMap.attr("id","")},Vacancies.prototype.initMap=function(e){function t(){var e=new ymaps.geocode(r,{results:1});e.then(function(e){var t=e.geoObjects.get(0).geometry.getCoordinates(),i=new ymaps.Map(o,{center:t,zoom:15});i.geoObjects.add(e.geoObjects.get(0)),n.data("map",!0)})}var n=e.find(".vacancy-map"),i=n.data("map");if(i)return!1;var r=n.data("address"),o="vacancy-map";n.attr("id",o),ymaps.ready(t)},Vacancies.prototype.addVacancy=function(e){e.preventDefault(),this.bodyOverlay.addClass("is-active"),this.addVacancyContainer.addClass("is-active")};var Profile=function(e){this.container=$(e),this.mapId="vacancy-map",this.mapContainer=this.container.find("#"+this.mapId),this.init()};Profile.prototype.init=function(){this.initMap()},Profile.prototype.initMap=function(){function e(){var e=new ymaps.geocode(n,{results:1});e.then(function(e){var n=e.geoObjects.get(0).geometry.getCoordinates(),i=new ymaps.Map(t.mapId,{center:n,zoom:15});i.geoObjects.add(e.geoObjects.get(0))})}var t=this,n=this.mapContainer.data("address");ymaps.ready(e)};var Viewer=function(){this.window=$(window),this.body=$("body"),this.init()};Viewer.prototype.init=function(){this.initClasses(),this.initFunctions(),this.window.on("resize",this.updateResizer.bind(this))},Viewer.prototype.initClasses=function(){$(".popup-plug").length&&new Plug,$(".tooltip-container").length&&new Tooltip,$(".tabs-container").each(function(){new Tabs(this)}),$(".empty-block").each(function(){new EmptyBlock(this)}),$(".person").each(function(){new Profile(this)}),new FormFields,new Popups,new Vacancies},Viewer.prototype.initFunctions=function(){},Viewer.prototype.updateResizer=function(){},$(document).ready(function(){window.viewer=new Viewer});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhIiwiYiIsIm1vZHVsZSIsImV4cG9ydHMiLCJkb2N1bWVudCIsIkVycm9yIiwid2luZG93IiwidGhpcyIsInAiLCJkIiwiYyIsImNyZWF0ZUVsZW1lbnQiLCJ0ZXh0IiwiaGVhZCIsImFwcGVuZENoaWxkIiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwidyIsImxlbmd0aCIsInIiLCJ0eXBlIiwiaXNXaW5kb3ciLCJCIiwibm9kZU5hbWUiLCJ0b0xvd2VyQ2FzZSIsIkUiLCJpc0Z1bmN0aW9uIiwiZ3JlcCIsImNhbGwiLCJub2RlVHlwZSIsImkiLCJEIiwidGVzdCIsImZpbHRlciIsIksiLCJNIiwiZWFjaCIsIm1hdGNoIiwiTCIsIk4iLCJPIiwiUCIsImUiLCJwcm9taXNlIiwiZG9uZSIsImZhaWwiLCJ0aGVuIiwiYXBwbHkiLCJzbGljZSIsIlMiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicmVhZHkiLCJWIiwiZXhwYW5kbyIsInVpZCIsIiQiLCJZIiwiSlNPTiIsInBhcnNlIiwiXyIsInJlcGxhY2UiLCJaIiwiZ2V0QXR0cmlidXRlIiwiWCIsInNldCIsImZhIiwiZiIsImciLCJoIiwiY3VyIiwiY3NzIiwiaiIsImNzc051bWJlciIsImsiLCJiYSIsImV4ZWMiLCJzdHlsZSIsInVuaXQiLCJzdGFydCIsImVuZCIsImhhIiwib3duZXJEb2N1bWVudCIsImdhIiwiYm9keSIsImlhIiwiZGlzcGxheSIsIlciLCJnZXQiLCJkYSIsIm5hIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJxdWVyeVNlbGVjdG9yQWxsIiwibWVyZ2UiLCJvYSIsInFhIiwibCIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJtIiwibiIsIm8iLCJwYSIsImthIiwibWEiLCJfZGVmYXVsdCIsImlubmVySFRNTCIsImh0bWxQcmVmaWx0ZXIiLCJsYXN0Q2hpbGQiLCJjaGlsZE5vZGVzIiwiZmlyc3RDaGlsZCIsInRleHRDb250ZW50IiwicHVzaCIsImNyZWF0ZVRleHROb2RlIiwiaW5BcnJheSIsImNvbnRhaW5zIiwibGEiLCJ2YSIsIndhIiwieGEiLCJhY3RpdmVFbGVtZW50IiwieWEiLCJvZmYiLCJhcmd1bWVudHMiLCJndWlkIiwiZXZlbnQiLCJhZGQiLCJFYSIsIkZhIiwiR2EiLCJDYSIsInJlbW92ZUF0dHJpYnV0ZSIsIkhhIiwiaGFzRGF0YSIsImFjY2VzcyIsImV2ZW50cyIsImhhbmRsZSIsImV4dGVuZCIsIklhIiwiamEiLCJjaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiSmEiLCJxIiwicyIsImNoZWNrQ2xvbmUiLCJCYSIsImVxIiwiaHRtbCIsIm1hcCIsImNsb25lIiwic3JjIiwiX2V2YWxVcmwiLCJEYSIsIkthIiwiY2xlYW5EYXRhIiwiT2EiLCJOYSIsImdldFByb3BlcnR5VmFsdWUiLCJwaXhlbE1hcmdpblJpZ2h0IiwiTWEiLCJMYSIsIndpZHRoIiwibWluV2lkdGgiLCJtYXhXaWR0aCIsIlBhIiwiV2EiLCJWYSIsInRvVXBwZXJDYXNlIiwiVWEiLCJYYSIsImNzc1Byb3BzIiwiWWEiLCJNYXRoIiwibWF4IiwiWmEiLCJjYSIsIiRhIiwiYm94U2l6aW5nUmVsaWFibGUiLCJwYXJzZUZsb2F0IiwiX2EiLCJwcm90b3R5cGUiLCJpbml0IiwiZWIiLCJiYiIsImhpZGRlbiIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsInNldFRpbWVvdXQiLCJmeCIsImludGVydmFsIiwidGljayIsImZiIiwiYWIiLCJub3ciLCJnYiIsImhlaWdodCIsIm9wYWNpdHkiLCJoYiIsImtiIiwidHdlZW5lcnMiLCJjb25jYXQiLCJpYiIsInF1ZXVlIiwiX3F1ZXVlSG9va3MiLCJ1bnF1ZXVlZCIsImVtcHR5IiwiZmlyZSIsImFsd2F5cyIsImNiIiwiaXNFbXB0eU9iamVjdCIsIm92ZXJmbG93Iiwib3ZlcmZsb3dYIiwib3ZlcmZsb3dZIiwicmVtb3ZlIiwiamIiLCJjYW1lbENhc2UiLCJBcnJheSIsImlzQXJyYXkiLCJjc3NIb29rcyIsImV4cGFuZCIsInByZWZpbHRlcnMiLCJEZWZlcnJlZCIsImVsZW0iLCJzdGFydFRpbWUiLCJkdXJhdGlvbiIsInR3ZWVucyIsInJ1biIsIm5vdGlmeVdpdGgiLCJyZXNvbHZlV2l0aCIsInByb3BzIiwib3B0cyIsInNwZWNpYWxFYXNpbmciLCJlYXNpbmciLCJvcmlnaW5hbFByb3BlcnRpZXMiLCJvcmlnaW5hbE9wdGlvbnMiLCJjcmVhdGVUd2VlbiIsIlR3ZWVuIiwic3RvcCIsInJlamVjdFdpdGgiLCJwcm94eSIsInByb2dyZXNzIiwiY29tcGxldGUiLCJ0aW1lciIsImFuaW0iLCJwYiIsImpvaW4iLCJxYiIsIkFiIiwid2IiLCJNYiIsInVuc2hpZnQiLCJOYiIsImRhdGFUeXBlcyIsIkpiIiwiT2IiLCJhamF4U2V0dGluZ3MiLCJmbGF0T3B0aW9ucyIsIlBiIiwiY29udGVudHMiLCJzaGlmdCIsIm1pbWVUeXBlIiwiZ2V0UmVzcG9uc2VIZWFkZXIiLCJjb252ZXJ0ZXJzIiwiUWIiLCJyZXNwb25zZUZpZWxkcyIsImRhdGFGaWx0ZXIiLCJkYXRhVHlwZSIsInNwbGl0Iiwic3RhdGUiLCJlcnJvciIsImRhdGEiLCJPYmplY3QiLCJnZXRQcm90b3R5cGVPZiIsImluZGV4T2YiLCJ0b1N0cmluZyIsImhhc093blByb3BlcnR5IiwiZm4iLCJ0IiwidSIsInYiLCJqcXVlcnkiLCJjb25zdHJ1Y3RvciIsInRvQXJyYXkiLCJwdXNoU3RhY2siLCJwcmV2T2JqZWN0IiwiZmlyc3QiLCJsYXN0Iiwic29ydCIsInNwbGljZSIsImlzUGxhaW5PYmplY3QiLCJyYW5kb20iLCJpc1JlYWR5Iiwibm9vcCIsImlzTnVtZXJpYyIsImlzTmFOIiwiZ2xvYmFsRXZhbCIsInRyaW0iLCJtYWtlQXJyYXkiLCJEYXRlIiwic3VwcG9ydCIsIlN5bWJvbCIsIml0ZXJhdG9yIiwieCIsImdldEVsZW1lbnRCeUlkIiwiaWQiLCJHIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsInFzYSIsIkEiLCJzZXRBdHRyaWJ1dGUiLCJzYSIsImNhY2hlTGVuZ3RoIiwiYXR0ckhhbmRsZSIsInNvdXJjZUluZGV4IiwibmV4dFNpYmxpbmciLCJkaXNhYmxlZCIsImlzRGlzYWJsZWQiLCJlYSIsInJhIiwidmFsdWUiLCJ0YSIsImRpciIsIm5leHQiLCJ1bmlxdWVJRCIsInVhIiwiSSIsInJlbGF0aXZlIiwibWF0Y2hlcyIsInphIiwiZmluZCIsIlRBRyIsInkiLCJ6IiwidW5pcXVlU29ydCIsIkMiLCJwb3AiLCJGIiwiSCIsIkoiLCJSZWdFeHAiLCJRIiwiUiIsIlQiLCJVIiwiSUQiLCJDTEFTUyIsIkFUVFIiLCJQU0VVRE8iLCJDSElMRCIsImJvb2wiLCJuZWVkc0NvbnRleHQiLCJhYSIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImNoYXJDb2RlQXQiLCJpc1hNTCIsImRvY3VtZW50RWxlbWVudCIsInNldERvY3VtZW50IiwiZGVmYXVsdFZpZXciLCJ0b3AiLCJhZGRFdmVudExpc3RlbmVyIiwiYXR0YWNoRXZlbnQiLCJhdHRyaWJ1dGVzIiwiY2xhc3NOYW1lIiwiY3JlYXRlQ29tbWVudCIsImdldEJ5SWQiLCJnZXRFbGVtZW50c0J5TmFtZSIsImdldEF0dHJpYnV0ZU5vZGUiLCJtYXRjaGVzU2VsZWN0b3IiLCJ3ZWJraXRNYXRjaGVzU2VsZWN0b3IiLCJtb3pNYXRjaGVzU2VsZWN0b3IiLCJvTWF0Y2hlc1NlbGVjdG9yIiwibXNNYXRjaGVzU2VsZWN0b3IiLCJkaXNjb25uZWN0ZWRNYXRjaCIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwic29ydERldGFjaGVkIiwiYXR0ciIsInNwZWNpZmllZCIsImVzY2FwZSIsImRldGVjdER1cGxpY2F0ZXMiLCJzb3J0U3RhYmxlIiwiZ2V0VGV4dCIsIm5vZGVWYWx1ZSIsInNlbGVjdG9ycyIsImNyZWF0ZVBzZXVkbyIsIj4iLCIgIiwiKyIsIn4iLCJwcmVGaWx0ZXIiLCJwc2V1ZG9zIiwic2V0RmlsdGVycyIsIm5vdCIsImhhcyIsImlubmVyVGV4dCIsImxhbmciLCJ0YXJnZXQiLCJsb2NhdGlvbiIsImhhc2giLCJyb290IiwiZm9jdXMiLCJoYXNGb2N1cyIsImhyZWYiLCJ0YWJJbmRleCIsImVuYWJsZWQiLCJzZWxlY3RlZCIsInNlbGVjdGVkSW5kZXgiLCJwYXJlbnQiLCJoZWFkZXIiLCJpbnB1dCIsImJ1dHRvbiIsImV2ZW4iLCJvZGQiLCJsdCIsImd0IiwibnRoIiwicmFkaW8iLCJjaGVja2JveCIsImZpbGUiLCJwYXNzd29yZCIsImltYWdlIiwic3VibWl0IiwicmVzZXQiLCJmaWx0ZXJzIiwidG9rZW5pemUiLCJjb21waWxlIiwic2VsZWN0b3IiLCJzZWxlY3QiLCJleHByIiwidW5pcXVlIiwiaXNYTUxEb2MiLCJlc2NhcGVTZWxlY3RvciIsImlzIiwicGFyc2VIVE1MIiwiY2hpbGRyZW4iLCJwcmV2IiwiY2xvc2VzdCIsImluZGV4IiwicHJldkFsbCIsImFkZEJhY2siLCJwYXJlbnRzIiwicGFyZW50c1VudGlsIiwibmV4dEFsbCIsIm5leHRVbnRpbCIsInByZXZVbnRpbCIsInNpYmxpbmdzIiwiY29udGVudERvY3VtZW50IiwiY29udGVudCIsInJldmVyc2UiLCJDYWxsYmFja3MiLCJvbmNlIiwic3RvcE9uRmFsc2UiLCJtZW1vcnkiLCJkaXNhYmxlIiwibG9jayIsImxvY2tlZCIsImZpcmVXaXRoIiwiZmlyZWQiLCJjYXRjaCIsInBpcGUiLCJub3RpZnkiLCJyZXNvbHZlIiwicmVqZWN0IiwiVHlwZUVycm9yIiwiZXhjZXB0aW9uSG9vayIsInN0YWNrVHJhY2UiLCJnZXRTdGFja0hvb2siLCJ3aGVuIiwiY29uc29sZSIsIndhcm4iLCJuYW1lIiwibWVzc2FnZSIsInN0YWNrIiwicmVhZHlFeGNlcHRpb24iLCJyZWFkeVdhaXQiLCJyZWFkeVN0YXRlIiwiZG9TY3JvbGwiLCJjYWNoZSIsImRlZmluZVByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwicmVtb3ZlRGF0YSIsIl9kYXRhIiwiX3JlbW92ZURhdGEiLCJkZXF1ZXVlIiwiY2xlYXJRdWV1ZSIsInNvdXJjZSIsInNob3ciLCJoaWRlIiwidG9nZ2xlIiwib3B0aW9uIiwidGhlYWQiLCJjb2wiLCJ0ciIsInRkIiwib3B0Z3JvdXAiLCJ0Ym9keSIsInRmb290IiwiY29sZ3JvdXAiLCJjYXB0aW9uIiwidGgiLCJjbG9uZU5vZGUiLCJub0Nsb25lQ2hlY2tlZCIsImdsb2JhbCIsImhhbmRsZXIiLCJ0cmlnZ2VyZWQiLCJkaXNwYXRjaCIsInNwZWNpYWwiLCJkZWxlZ2F0ZVR5cGUiLCJiaW5kVHlwZSIsIm9yaWdUeXBlIiwibmFtZXNwYWNlIiwiZGVsZWdhdGVDb3VudCIsInNldHVwIiwidGVhcmRvd24iLCJyZW1vdmVFdmVudCIsImZpeCIsImRlbGVnYXRlVGFyZ2V0IiwicHJlRGlzcGF0Y2giLCJoYW5kbGVycyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiY3VycmVudFRhcmdldCIsImlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkIiwicm5hbWVzcGFjZSIsImhhbmRsZU9iaiIsInJlc3VsdCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwicG9zdERpc3BhdGNoIiwiYWRkUHJvcCIsIkV2ZW50IiwiZW51bWVyYWJsZSIsIm9yaWdpbmFsRXZlbnQiLCJ3cml0YWJsZSIsImxvYWQiLCJub0J1YmJsZSIsInRyaWdnZXIiLCJibHVyIiwiY2xpY2siLCJiZWZvcmV1bmxvYWQiLCJyZXR1cm5WYWx1ZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZWxhdGVkVGFyZ2V0IiwidGltZVN0YW1wIiwiaXNTaW11bGF0ZWQiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJhbHRLZXkiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsImNoYW5nZWRUb3VjaGVzIiwiY3RybEtleSIsImRldGFpbCIsImV2ZW50UGhhc2UiLCJtZXRhS2V5IiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwidmlldyIsImNoYXIiLCJjaGFyQ29kZSIsImtleSIsImtleUNvZGUiLCJidXR0b25zIiwiY2xpZW50WCIsImNsaWVudFkiLCJvZmZzZXRYIiwib2Zmc2V0WSIsInBvaW50ZXJJZCIsInBvaW50ZXJUeXBlIiwic2NyZWVuWCIsInNjcmVlblkiLCJ0YXJnZXRUb3VjaGVzIiwidG9FbGVtZW50IiwidG91Y2hlcyIsIndoaWNoIiwibW91c2VlbnRlciIsIm1vdXNlbGVhdmUiLCJwb2ludGVyZW50ZXIiLCJwb2ludGVybGVhdmUiLCJvbiIsIm9uZSIsIkFhIiwiZGV0YWNoIiwiYXBwZW5kIiwicHJlcGVuZCIsImluc2VydEJlZm9yZSIsImJlZm9yZSIsImFmdGVyIiwicmVwbGFjZVdpdGgiLCJyZXBsYWNlQ2hpbGQiLCJhcHBlbmRUbyIsInByZXBlbmRUbyIsImluc2VydEFmdGVyIiwicmVwbGFjZUFsbCIsIm9wZW5lciIsImdldENvbXB1dGVkU3R5bGUiLCJjc3NUZXh0IiwibWFyZ2luTGVmdCIsIm1hcmdpblJpZ2h0IiwiYmFja2dyb3VuZENsaXAiLCJjbGVhckNsb25lU3R5bGUiLCJwaXhlbFBvc2l0aW9uIiwicmVsaWFibGVNYXJnaW5MZWZ0IiwiUWEiLCJSYSIsIlNhIiwicG9zaXRpb24iLCJ2aXNpYmlsaXR5IiwiVGEiLCJsZXR0ZXJTcGFjaW5nIiwiZm9udFdlaWdodCIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiY29sdW1uQ291bnQiLCJmaWxsT3BhY2l0eSIsImZsZXhHcm93IiwiZmxleFNocmluayIsImxpbmVIZWlnaHQiLCJvcmRlciIsIm9ycGhhbnMiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmxvYXQiLCJzZXRQcm9wZXJ0eSIsImlzRmluaXRlIiwiZ2V0Q2xpZW50UmVjdHMiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJsZWZ0IiwibWFyZ2luIiwicGFkZGluZyIsImJvcmRlciIsInByb3AiLCJvcHRpb25zIiwicHJvcEhvb2tzIiwicG9zIiwic3RlcCIsInNjcm9sbFRvcCIsInNjcm9sbExlZnQiLCJsaW5lYXIiLCJzd2luZyIsImNvcyIsIlBJIiwiZGIiLCJBbmltYXRpb24iLCIqIiwidHdlZW5lciIsInByZWZpbHRlciIsInNwZWVkIiwic3BlZWRzIiwib2xkIiwiZmFkZVRvIiwiYW5pbWF0ZSIsImZpbmlzaCIsInRpbWVycyIsInNsaWRlRG93biIsInNsaWRlVXAiLCJzbGlkZVRvZ2dsZSIsImZhZGVJbiIsImZhZGVPdXQiLCJmYWRlVG9nZ2xlIiwic2xvdyIsImZhc3QiLCJkZWxheSIsImNsZWFyVGltZW91dCIsImNoZWNrT24iLCJvcHRTZWxlY3RlZCIsInJhZGlvVmFsdWUiLCJsYiIsIm1iIiwicmVtb3ZlQXR0ciIsImF0dHJIb29rcyIsIm5iIiwib2IiLCJyZW1vdmVQcm9wIiwicHJvcEZpeCIsInBhcnNlSW50IiwiZm9yIiwiY2xhc3MiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwidG9nZ2xlQ2xhc3MiLCJoYXNDbGFzcyIsInJiIiwidmFsIiwidmFsSG9va3MiLCJzYiIsImlzVHJpZ2dlciIsInBhcmVudFdpbmRvdyIsInNpbXVsYXRlIiwidHJpZ2dlckhhbmRsZXIiLCJob3ZlciIsImZvY3VzaW4iLCJ0YiIsInViIiwidmIiLCJwYXJzZVhNTCIsIkRPTVBhcnNlciIsInBhcnNlRnJvbVN0cmluZyIsInhiIiwieWIiLCJ6YiIsInBhcmFtIiwiZW5jb2RlVVJJQ29tcG9uZW50Iiwic2VyaWFsaXplIiwic2VyaWFsaXplQXJyYXkiLCJCYiIsIkNiIiwiRGIiLCJFYiIsIkZiIiwiR2IiLCJIYiIsIkliIiwiS2IiLCJMYiIsImFjdGl2ZSIsImxhc3RNb2RpZmllZCIsImV0YWciLCJ1cmwiLCJpc0xvY2FsIiwicHJvdG9jb2wiLCJwcm9jZXNzRGF0YSIsImFzeW5jIiwiY29udGVudFR5cGUiLCJhY2NlcHRzIiwieG1sIiwianNvbiIsIiogdGV4dCIsInRleHQgaHRtbCIsInRleHQganNvbiIsInRleHQgeG1sIiwiY29udGV4dCIsImFqYXhTZXR1cCIsImFqYXhQcmVmaWx0ZXIiLCJhamF4VHJhbnNwb3J0IiwiYWpheCIsImlmTW9kaWZpZWQiLCJzdGF0dXMiLCJzdGF0dXNUZXh0Iiwic3RhdHVzQ29kZSIsImdldEFsbFJlc3BvbnNlSGVhZGVycyIsInNldFJlcXVlc3RIZWFkZXIiLCJvdmVycmlkZU1pbWVUeXBlIiwiYWJvcnQiLCJtZXRob2QiLCJjcm9zc0RvbWFpbiIsImhvc3QiLCJ0cmFkaXRpb25hbCIsImhhc0NvbnRlbnQiLCJoZWFkZXJzIiwiYmVmb3JlU2VuZCIsInN1Y2Nlc3MiLCJ0aW1lb3V0Iiwic2VuZCIsImdldEpTT04iLCJnZXRTY3JpcHQiLCJ0aHJvd3MiLCJ3cmFwQWxsIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJ3cmFwSW5uZXIiLCJ3cmFwIiwidW53cmFwIiwidmlzaWJsZSIsIm9mZnNldFdpZHRoIiwib2Zmc2V0SGVpZ2h0IiwieGhyIiwiWE1MSHR0cFJlcXVlc3QiLCJSYiIsIjAiLCIxMjIzIiwiU2IiLCJjb3JzIiwib3BlbiIsInVzZXJuYW1lIiwieGhyRmllbGRzIiwib25sb2FkIiwib25lcnJvciIsIm9uYWJvcnQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZXNwb25zZVR5cGUiLCJyZXNwb25zZVRleHQiLCJiaW5hcnkiLCJyZXNwb25zZSIsInNjcmlwdCIsInRleHQgc2NyaXB0IiwiY2hhcnNldCIsInNjcmlwdENoYXJzZXQiLCJUYiIsIlViIiwianNvbnAiLCJqc29ucENhbGxiYWNrIiwiY3JlYXRlSFRNTERvY3VtZW50IiwiaW1wbGVtZW50YXRpb24iLCJhbmltYXRlZCIsIm9mZnNldCIsInNldE9mZnNldCIsInVzaW5nIiwicGFnZVlPZmZzZXQiLCJjbGllbnRUb3AiLCJwYWdlWE9mZnNldCIsImNsaWVudExlZnQiLCJvZmZzZXRQYXJlbnQiLCJzY3JvbGxUbyIsIkhlaWdodCIsIldpZHRoIiwiIiwiYmluZCIsInVuYmluZCIsImRlbGVnYXRlIiwidW5kZWxlZ2F0ZSIsImhvbGRSZWFkeSIsInBhcnNlSlNPTiIsImRlZmluZSIsImFtZCIsIlZiIiwialF1ZXJ5IiwiV2IiLCJub0NvbmZsaWN0IiwiYlBvcHVwIiwiY29udGVudENvbnRhaW5lciIsImlmcmFtZUF0dHIiLCJvdXRlckhlaWdodCIsIm91dGVyV2lkdGgiLCJsb2FkVXJsIiwibG9hZENhbGxiYWNrIiwibG9hZERhdGEiLCJtb2RhbCIsImJhY2tncm91bmRDb2xvciIsIm1vZGFsQ29sb3IiLCJyaWdodCIsImJvdHRvbSIsInRyYW5zaXRpb24iLCJmb2xsb3ciLCJwb3NpdGlvblN0eWxlIiwiei1pbmRleCIsImFwcGVuZGluZyIsInNjcm9sbEJhciIsImNsb3NlQ2xhc3MiLCJmb2xsb3dTcGVlZCIsImZvbGxvd0Vhc2luZyIsIm1vZGFsQ2xvc2UiLCJlc2NDbG9zZSIsInRyYW5zaXRpb25DbG9zZSIsImF1dG9DbG9zZSIsIm9uQ2xvc2UiLCJhbXNsIiwiZGVmYXVsdHMiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJjbG9zZSIsInJlcG9zaXRpb24iLCJvbk9wZW4iLCJtb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiaW5zdGFsbGVkTW9kdWxlcyIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJvYmplY3QiLCJwcm9wZXJ0eSIsIl9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXyIsIl9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18iLCJfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyIsImZhY3RvcnkiLCJfdHlwZW9mIiwib2JqIiwidW5kZWZpbmVkIiwiSW5wdXRtYXNrIiwiYWxpYXMiLCJpbnRlcm5hbCIsImVsIiwibWFza3NldCIsInJlZnJlc2hWYWx1ZSIsIm5vTWFza3NDYWNoZSIsImRlZmluaXRpb25zIiwidXNlck9wdGlvbnMiLCJpc1JUTCIsIm51bWVyaWNJbnB1dCIsInJlc29sdmVBbGlhcyIsImFsaWFzU3RyIiwiYWxpYXNEZWZpbml0aW9uIiwiYWxpYXNlcyIsIm1hc2siLCJnZW5lcmF0ZU1hc2tTZXQiLCJub2NhY2hlIiwiZ2VuZXJhdGVNYXNrIiwibWV0YWRhdGEiLCJyZWdleE1hc2siLCJyZWdleCIsImdyZWVkeSIsInJlcGVhdCIsInBsYWNlaG9sZGVyIiwicmVwZWF0U3RhcnQiLCJncm91cG1hcmtlciIsInF1YW50aWZpZXJtYXJrZXIiLCJtYXNrc2V0RGVmaW5pdGlvbiIsIm1hc2tkZWZLZXkiLCJtYXNrc0NhY2hlIiwibWFza1Rva2VuIiwiYW5hbHlzZU1hc2siLCJ2YWxpZFBvc2l0aW9ucyIsIl9idWZmZXIiLCJidWZmZXIiLCJ0ZXN0cyIsIm1hc2tMZW5ndGgiLCJrZWVwU3RhdGljIiwiYWx0TWFzayIsIm5keCIsIm1zayIsImFsdGVybmF0b3JtYXJrZXIiLCJpc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJldmVudE5hbWUiLCJldk5hbWUiLCJpc1N1cHBvcnRlZCIsIm1hc2tTY29wZSIsImFjdGlvbk9iaiIsImdldE1hc2tUZW1wbGF0ZSIsImJhc2VPbklucHV0IiwibWluaW1hbFBvcyIsImluY2x1ZGVNb2RlIiwibmR4SW50bHpyIiwidGVzdFBvcyIsIm1hc2tUZW1wbGF0ZSIsImx2cCIsImdldExhc3RWYWxpZFBvc2l0aW9uIiwiZ2V0TWFza1NldCIsImxvY2F0b3IiLCJuYXRpdmVEZWYiLCJnZXRQbGFjZWhvbGRlciIsImdldFRlc3RUZW1wbGF0ZSIsImppdE1hc2tpbmciLCJtYXhMZW5ndGgiLCJkZWYiLCJyZXNldE1hc2tTZXQiLCJzb2Z0IiwiY2xvc2VzdFRvIiwic3RyaWN0IiwidmFsaWRzIiwicG9zTmR4IiwicHNOZHgiLCJnZW5lcmF0ZWRJbnB1dCIsInN0cmlwVmFsaWRQb3NpdGlvbnMiLCJub2NoZWNrIiwic3RhcnRQb3MiLCJwb3NpdGlvbnNDbG9uZSIsIm5lZWRzVmFsaWRhdGlvbiIsIm9wdGlvbmFsaXR5IiwicG9zTWF0Y2giLCJwcmV2TWF0Y2giLCJuZXh0TWF0Y2giLCJjYW5DbGVhclBvc2l0aW9uIiwiaXNNYXNrIiwicG9zaXRpb25DYW5NYXRjaERlZmluaXRpb24iLCJpc1ZhbGlkIiwiZGV0ZXJtaW5lVGVzdFRlbXBsYXRlIiwiZ3Vlc3NOZXh0QmVzdCIsImFsdFRlc3QiLCJnZXRUZXN0IiwiYWx0QXJyIiwiYWx0ZXJuYXRpb24iLCJvcHRpb25hbFF1YW50aWZpZXIiLCJuZXdCbG9ja01hcmtlciIsImNoZWNrQWx0ZXJuYXRpb25NYXRjaCIsInRzdFBzIiwiZ2V0VGVzdHMiLCJ2YWxpZCIsInRuZHgiLCJyZXNvbHZlVGVzdEZyb21Ub2tlbiIsIm5keEluaXRpYWxpemVyIiwibG9vcE5keCIsInF1YW50aWZpZXJSZWN1cnNlIiwiaGFuZGxlTWF0Y2giLCJpc0ZpcnN0TWF0Y2giLCJsYXRlc3RNYXRjaCIsInRva2VuR3JvdXAiLCJmaXJzdE1hdGNoIiwiaXNRdWFudGlmaWVyIiwicmVzb2x2ZU5keEluaXRpYWxpemVyIiwiYWx0ZXJuYXRlTmR4IiwidGFyZ2V0QWx0ZXJuYXRpb24iLCJiZXN0TWF0Y2giLCJpbmRleFBvcyIsImxtbnQiLCJtbG9jIiwibmR4UG9zIiwiYmVzdE1hdGNoQWx0SW5kZXgiLCJzZXRNZXJnZUxvY2F0b3JzIiwidGFyZ2V0TWF0Y2giLCJhbHRNYXRjaCIsImxvY05keCIsImtleXMiLCJjZCIsImNhY2hlRGVwZW5kZW5jeSIsImlzR3JvdXAiLCJpc09wdGlvbmFsIiwib3B0aW9uYWxUb2tlbiIsImluc2VydFN0b3AiLCJpc0FsdGVybmF0b3IiLCJtYWx0TWF0Y2hlcyIsImFsdGVybmF0ZVRva2VuIiwibWFsdGVybmF0ZU1hdGNoZXMiLCJjdXJyZW50TWF0Y2hlcyIsImxvb3BOZHhDbnQiLCJhbHRJbmRleCIsImFtbmR4IiwiY3VycmVudFBvcyIsIm5keEluaXRpYWxpemVyQ2xvbmUiLCJhbHRJbmRleEFyciIsIm5keDEiLCJkcm9wTWF0Y2giLCJuZHgyIiwiYWx0TWF0Y2gyIiwicXQiLCJxbmR4IiwicXVhbnRpZmllciIsIm1pbiIsImZpbHRlclRlc3RzIiwibWFza1Rva2VucyIsInByZXZpb3VzUG9zIiwidHN0IiwibXRuZHgiLCJjYXNpbmciLCJnZXRCdWZmZXJUZW1wbGF0ZSIsImdldEJ1ZmZlciIsIm5vQ2FjaGUiLCJyZWZyZXNoRnJvbUJ1ZmZlciIsInNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXIiLCJ2YWxSZXN1bHQiLCJjYXJldCIsInBvc0JlZm9yZSIsIlNQQUNFIiwiYXJncyIsImFsdEFycjEiLCJhbHRBcnIyIiwibmFOZHgiLCJhbHRBcnJDIiwiaXNNYXRjaCIsIm5hQXJyIiwiYWxuZHgiLCJmcm9tU2V0VmFsaWQiLCJmcm9tQWx0ZXJuYXRlIiwidmFsaWRhdGVPbmx5IiwiaXNTZWxlY3Rpb24iLCJwb3NPYmoiLCJzZWxlY3Rpb24iLCJiZWdpbiIsIl9pc1ZhbGlkIiwicnNsdCIsInZhbGlkYXRlZFBvcyIsInBvc3NpYmxlTW9kaWZpZWRCdWZmZXIiLCJpbnNlcnQiLCJyZWZyZXNoIiwic2V0VmFsaWRQb3NpdGlvbiIsInZhbGlkVGVzdCIsImluc2VydE1vZGUiLCJ2cHMiLCJpbml0aWFsTGVuZ3RoIiwiZmlsbE1pc3NpbmdOb25NYXNrIiwibWFza1BvcyIsInBuZHgiLCJ0ZXN0VGVtcGxhdGUiLCJ0ZXN0c0Zyb21Qb3MiLCJyYWRpeFBvaW50RGVmaW5pdGlvblN5bWJvbCIsInJhZGl4UG9pbnQiLCJwcmVWYWxpZGF0aW9uIiwiaGFuZGxlUmVtb3ZlIiwiREVMRVRFIiwiY3VycmVudFBvc1ZhbGlkIiwic2Vla05leHQiLCJuUG9zIiwic25Qb3MiLCJvcmlnaW5hbFBvcyIsIm5ld1BvcyIsInZwIiwidGFyZ2V0TG9jYXRvciIsInRsbCIsInBzIiwiZXF1YWxpdHkiLCJ0YXJnZXRBSSIsImJlc3RNYXRjaEFJIiwidHN0QUkiLCJhYnMiLCJsYXN0QWx0IiwiYWx0UG9zIiwicHJldkFsdFBvcyIsInZhbGlkUG9zIiwiYWx0TmR4cyIsImRlY2lzaW9uUG9zIiwidmFsaWRQc0Nsb25lIiwiaXNWYWxpZFJzbHQiLCJsQWx0UG9zIiwiZGVjaXNpb25UYWtlciIsInBvc3NpYmlsaXR5UG9zIiwicHJldlBvcyIsIm1uZHgiLCJ2YWxpZElucHV0cyIsInN0YXRpY0lucHV0c0JlZm9yZVBvcyIsInN0YXRpY0lucHV0c0JlZm9yZVBvc0FsdGVybmF0ZSIsInZlcmlmeVZhbGlkSW5wdXQiLCJwb3NzaWJpbGl0aWVzIiwidGFyZ2V0THZwIiwicG9zdFZhbGlkYXRpb24iLCJwb3N0UmVzdWx0IiwibmV3QmxvY2siLCJtYXNrTCIsImtlbmd0aCIsInNlZWtQcmV2aW91cyIsIndyaXRlQnVmZmVyIiwiY2FyZXRQb3MiLCJ0cmlnZ2VySW5wdXRFdmVudCIsIm9uQmVmb3JlV3JpdGUiLCJpbnB1dG1hc2siLCJfdmFsdWVTZXQiLCJyZW5kZXJDb2xvck1hc2siLCJza2lwSW5wdXRFdmVudCIsInJldHVyblBMIiwicHJldlRlc3QiLCJzdGF0aWNBbHRlcm5hdGlvbnMiLCJjaGFyQXQiLCJjaGVja1ZhbCIsIndyaXRlT3V0IiwibnB0dmwiLCJpbml0aWF0aW5nRXZlbnQiLCJpc1RlbXBsYXRlTWF0Y2giLCJjaGFyQ29kZXMiLCJpbnB1dFZhbHVlIiwiaW5pdGlhbE5keCIsImF1dG9Vbm1hc2siLCJzdGF0aWNJbnB1dCIsImVzY2FwZVJlZ2V4Iiwia2V5cHJlc3MiLCJuZXh0VGVzdCIsIkV2ZW50SGFuZGxlcnMiLCJrZXlwcmVzc0V2ZW50IiwiZm9yd2FyZFBvc2l0aW9uIiwidW5tYXNrZWR2YWx1ZSIsInNldFZhbHVlRXZlbnQiLCJ1bVZhbHVlIiwidW5tYXNrZWRWYWx1ZSIsIm9uVW5NYXNrIiwiYnVmZmVyVmFsdWUiLCJub3RyYW5zbGF0ZSIsInRyYW5zbGF0ZVBvc2l0aW9uIiwiX192YWx1ZUdldCIsInJhbmdlIiwic2V0U2VsZWN0aW9uUmFuZ2UiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImdldFNlbGVjdGlvbiIsImdldFJhbmdlQXQiLCJjb21tb25BbmNlc3RvckNvbnRhaW5lciIsInN0YXJ0T2Zmc2V0IiwiZW5kT2Zmc2V0IiwiY3JlYXRlUmFuZ2UiLCJkdXBsaWNhdGUiLCJtb3ZlU3RhcnQiLCJfdmFsdWVHZXQiLCJzY3JvbGxDYWxjIiwiY3VycmVudFN0eWxlIiwiZm9udFNpemUiLCJzY3JvbGxXaWR0aCIsInRleHROb2RlIiwic2V0U3RhcnQiLCJzZXRFbmQiLCJjb2xsYXBzZSIsInNlbCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwiY3JlYXRlVGV4dFJhbmdlIiwibW92ZUVuZCIsImRldGVybWluZUxhc3RSZXF1aXJlZFBvc2l0aW9uIiwicmV0dXJuRGVmaW5pdGlvbiIsImJsIiwicG9zaXRpb25zIiwibHZUZXN0IiwibHZUZXN0QWx0IiwiY2xlYXJPcHRpb25hbFRhaWwiLCJybCIsImx2IiwiaXNDb21wbGV0ZSIsImxycCIsImFtbCIsImZyb21Jc1ZhbGlkIiwiQkFDS1NQQUNFIiwicGVuZCIsImdyb3VwU2VwYXJhdG9yIiwiaW5pdGlhbGl6ZUNvbG9yTWFzayIsImZpbmRDYXJldFBvcyIsImNsaWVudHgiLCJjb21wdXRlZFN0eWxlIiwidGV4dFRyYW5zZm9ybSIsIndoaXRlU3BhY2UiLCJpdGwiLCJpbnB1dFRleHQiLCJwcmV2aW91c1dpZHRoIiwib2Zmc2V0MSIsIm9mZnNldDIiLCJ0ZW1wbGF0ZSIsInRleHRBbGlnbiIsImNvbG9yTWFzayIsIm9mZnNldExlZnQiLCJjbGlja0V2ZW50IiwiY2xlYXIiLCJzZXRFbnRyeSIsImVudHJ5IiwiaXNTdGF0aWMiLCJtdGwiLCJwb3NpdGlvbkNvbG9yTWFzayIsInVuZG9WYWx1ZSIsIiRlbCIsInNraXBLZXlQcmVzc0V2ZW50IiwiaWdub3JhYmxlIiwibW91c2VFbnRlciIsInRyYWNrQ2FyZXQiLCJFdmVudFJ1bGVyIiwiZXZlbnRIYW5kbGVyIiwiZXYiLCJ0aGF0IiwiaW1PcHRzIiwicmVhZE9ubHkiLCJ0YWJUaHJvdWdoIiwiVEFCIiwibW9iaWxlIiwiaWVtb2JpbGUiLCJpcGhvbmUiLCJyZXR1cm5WYWwiLCJmb3JtIiwiZXZBcnIiLCJrZXlkb3duRXZlbnQiLCIkaW5wdXQiLCJCQUNLU1BBQ0VfU0FGQVJJIiwiRU5EIiwiUEFHRV9ET1dOIiwiSE9NRSIsIlBBR0VfVVAiLCJ1bmRvT25Fc2NhcGUiLCJFU0NBUEUiLCJJTlNFUlQiLCJSSUdIVCIsIkxFRlQiLCJvbktleURvd24iLCJpZ25vcmFibGVzIiwiY2hlY2t2YWwiLCJFTlRFUiIsIndyaXRlT3V0QnVmZmVyIiwib25LZXlWYWxpZGF0aW9uIiwicGFzdGVFdmVudCIsInRlbXBWYWx1ZSIsInZhbHVlQmVmb3JlQ2FyZXQiLCJzdWJzdHIiLCJ2YWx1ZUFmdGVyQ2FyZXQiLCJjbGlwYm9hcmREYXRhIiwiZ2V0RGF0YSIsInBhc3RlVmFsdWUiLCJvbkJlZm9yZVBhc3RlIiwiaW5wdXRGYWxsQmFja0V2ZW50IiwiaW5wdXRDaGFyIiwiaXYiLCJmcm9udFBhcnQiLCJiYWNrUGFydCIsImZyb250QnVmZmVyUGFydCIsImJhY2tCdWZmZXJQYXJ0IiwiZW50cmllcyIsImlzRW50cnkiLCJmcGwiLCJrZXlkb3duIiwib25CZWZvcmVNYXNrIiwiY2xlYXJNYXNrT25Mb3N0Rm9jdXMiLCJjbGVhckluY29tcGxldGUiLCJmb2N1c0V2ZW50IiwibnB0VmFsdWUiLCJzaG93TWFza09uRm9jdXMiLCJzaG93TWFza09uSG92ZXIiLCJwb3NpdGlvbkNhcmV0T25UYWIiLCJtb3VzZWxlYXZlRXZlbnQiLCJ0YWJiZWQiLCJkb1JhZGl4Rm9jdXMiLCJjbGlja1BvcyIsInJhZGl4UG9zIiwic2VsZWN0ZWRDYXJldCIsInBvc2l0aW9uQ2FyZXRPbkNsaWNrIiwiY2xpY2tQb3NpdGlvbiIsImx2Y2xpY2tQb3NpdGlvbiIsImxhc3RQb3NpdGlvbiIsInR0IiwiZGJsY2xpY2tFdmVudCIsImN1dEV2ZW50IiwiY2xpcERhdGEiLCJzZXREYXRhIiwiZXhlY0NvbW1hbmQiLCJibHVyRXZlbnQiLCJtb3VzZWVudGVyRXZlbnQiLCJzdWJtaXRFdmVudCIsInJlbW92ZU1hc2tPblN1Ym1pdCIsInJlc2V0RXZlbnQiLCJ2YWx1ZUJ1ZmZlciIsImFjdGlvbiIsImVsZW1lbnRUeXBlIiwidGFnTmFtZSIsInN1cHBvcnRzSW5wdXRUeXBlIiwiaXNDb250ZW50RWRpdGFibGUiLCJucHQiLCJudWxsYWJsZSIsInZhbHVlR2V0Iiwic2V0dGVyIiwidmFsdWVTZXQiLCJub1ZhbHVlUGF0Y2hpbmciLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfX3Byb3RvX18iLCJ2YWx1ZVByb3BlcnR5IiwiX19sb29rdXBHZXR0ZXJfXyIsIl9fbG9va3VwU2V0dGVyX18iLCJfX2RlZmluZUdldHRlcl9fIiwiX19kZWZpbmVTZXR0ZXJfXyIsIl9fdmFsdWVTZXQiLCJvdmVycnVsZVJUTCIsImlucHV0bWFza3BhdGNoIiwidmFsaG9va0dldCIsInZhbGhvb2tTZXQiLCIkZWxlbSIsImlucHV0bW9kZSIsImRpc2FibGVQcmVkaWN0aXZlVGV4dCIsImF1dG9jb3JyZWN0Iiwib25jb21wbGV0ZSIsIm9uaW5jb21wbGV0ZSIsIm9uY2xlYXJlZCIsImlucHV0RXZlbnRPbmx5IiwiaW5pdGlhbFZhbHVlIiwibG1pYiIsIm1hc2tUYXJnZXQiLCJtdGR0IiwiZGF0YUF0dHJpYnV0ZSIsIm9wdGlvbmFsbWFya2VyIiwiZXNjYXBlQ2hhciIsInBhc3RlZFZhbHVlIiwicmlnaHRBbGlnbiIsInN0YXRpY0RlZmluaXRpb25TeW1ib2wiLCJpbXBvcnREYXRhQXR0cmlidXRlcyIsIjkiLCJ2YWxpZGF0b3IiLCJkZWZpbml0aW9uU3ltYm9sIiwiZWxlbXMiLCJpbXBvcnRBdHRyaWJ1dGVPcHRpb25zIiwiZGF0YW9wdGlvbnMiLCJvcHRpb25EYXRhIiwiaW1wb3J0T3B0aW9uIiwiYXR0ck9wdGlvbnMiLCJzY29wZWRPcHRzIiwibm9yZW1hc2siLCJnZXRlbXB0eW1hc2siLCJoYXNNYXNrZWRWYWx1ZSIsImdldG1ldGFkYXRhIiwiZm9ybWF0IiwiTWFza1Rva2VuIiwib3Blbkdyb3VwIiwiYWx0ZXJuYXRvckdyb3VwIiwiaW5zZXJ0VGVzdERlZmluaXRpb24iLCJtdG9rZW4iLCJlbGVtZW50IiwiZXNjYXBlZCIsIm1hc2tkZWYiLCJ2ZXJpZnlHcm91cE1hcmtlciIsInRva2VuIiwibmV4dFRva2VuIiwiZGVmYXVsdENhc2UiLCJvcGVuZW5pbmdzIiwiY3VycmVudE9wZW5pbmdUb2tlbiIsImFsdGVybmF0b3IiLCJjdXJyZW50VG9rZW4iLCJyZXZlcnNlVG9rZW5zIiwiaW50TWF0Y2giLCJzdCIsIm9wZW5pbmdUb2tlbiIsImxhc3RNYXRjaCIsImdyb3VwVG9rZW4iLCJ0b2tlbml6ZXIiLCJyZWdleFRva2VuaXplciIsIm1xIiwibXEwIiwibXExIiwic3ViVG9rZW4iLCJleHRlbmREZWZhdWx0cyIsImV4dGVuZERlZmluaXRpb25zIiwiZGVmaW5pdGlvbiIsImV4dGVuZEFsaWFzZXMiLCJ1bm1hc2siLCJzdHIiLCJzcGVjaWFscyIsIkRPV04iLCJVUCIsIkNPTlRST0wiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiZGVmYXVsdCIsIl9pbnB1dG1hc2syIiwiX2lucHV0bWFzazQiLCJfanF1ZXJ5MiIsImhtciIsInRyYW5zZm9ybSIsImxvY2FscyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJpdGVtIiwidXNlU291cmNlTWFwIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJzb3VyY2VNYXBwaW5nIiwidG9Db21tZW50Iiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2VSb290Iiwic291cmNlTWFwIiwidW5lc2NhcGUiLCJzdHJpbmdpZnkiLCJsaXN0IiwibWVkaWFRdWVyeSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJhZGRTdHlsZXNUb0RvbSIsInN0eWxlcyIsImRvbVN0eWxlIiwic3R5bGVzSW5Eb20iLCJyZWZzIiwicGFydHMiLCJhZGRTdHlsZSIsImxpc3RUb1N0eWxlcyIsIm5ld1N0eWxlcyIsImJhc2UiLCJwYXJ0IiwibWVkaWEiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJnZXRFbGVtZW50IiwiaW5zZXJ0SW50byIsImxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wIiwic3R5bGVzSW5zZXJ0ZWRBdFRvcCIsImluc2VydEF0IiwicmVtb3ZlU3R5bGVFbGVtZW50IiwiaWR4IiwiY3JlYXRlU3R5bGVFbGVtZW50IiwiYXR0cnMiLCJhZGRBdHRycyIsImNyZWF0ZUxpbmtFbGVtZW50IiwibGluayIsInJlbCIsImZvckVhY2giLCJ1cGRhdGUiLCJzaW5nbGV0b24iLCJzdHlsZUluZGV4Iiwic2luZ2xldG9uQ291bnRlciIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJyZXZva2VPYmplY3RVUkwiLCJCbG9iIiwidXBkYXRlTGluayIsImFwcGx5VG9UYWciLCJuZXdPYmoiLCJzdHlsZVNoZWV0IiwicmVwbGFjZVRleHQiLCJjc3NOb2RlIiwiYXV0b0ZpeFVybHMiLCJjb252ZXJ0VG9BYnNvbHV0ZVVybHMiLCJmaXhVcmxzIiwiYmxvYiIsIm9sZFNyYyIsImlzT2xkSUUiLCJtZW1vIiwiYWxsIiwiYXRvYiIsInN0eWxlVGFyZ2V0IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiREVCVUciLCJuZXdMaXN0IiwibWF5UmVtb3ZlIiwidGV4dFN0b3JlIiwicmVwbGFjZW1lbnQiLCJCb29sZWFuIiwiYmFzZVVybCIsImN1cnJlbnREaXIiLCJwYXRobmFtZSIsImZ1bGxNYXRjaCIsIm9yaWdVcmwiLCJ1bnF1b3RlZE9yaWdVcmwiLCIkMSIsIm5ld1VybCIsImdldFRva2VuaXplciIsInRva2VucyIsImZvcm1hdENvZGUiLCJpc1ZhbGlkRGF0ZSIsImRhdGVQYXJ0cyIsImN1cnJlbnRSZXN1bHQiLCJkYXkiLCJyYXd5ZWFyIiwiZGF0ZSIsImdldEZ1bGxZZWFyIiwibW9udGgiLCJnZXRNb250aCIsImdldERhdGUiLCJpc0RhdGVJblJhbmdlIiwibWFza0RhdGUiLCJnZXRUaW1lIiwiZGF0ZU9ialZhbHVlIiwicGFkIiwibGVuIiwibWFza1N0cmluZyIsImV4dGVuZFllYXIiLCJ5ZWFyIiwiY29ycmVjdGVkeWVhciIsInRhcmdldFByb3AiLCJkYXRlT3BlcmF0aW9uIiwiZGF0ZU9iaiIsInNldERhdGUiLCJkZCIsImRkZCIsImRkZGQiLCJzZXRNb250aCIsIm1tIiwibW1tIiwibW1tbSIsInl5Iiwic2V0RnVsbFllYXIiLCJ5eXl5Iiwic2V0SG91cnMiLCJnZXRIb3VycyIsImhoIiwiaGhoIiwiSEgiLCJISEgiLCJzZXRNaW51dGVzIiwiZ2V0TWludXRlcyIsIk1NIiwic2V0U2Vjb25kcyIsImdldFNlY29uZHMiLCJzcyIsInNldE1pbGxpc2Vjb25kcyIsImdldE1pbGxpc2Vjb25kcyIsIlRUIiwiZm9ybWF0QWxpYXMiLCJpc29EYXRlIiwiaXNvVGltZSIsImlzb0RhdGVUaW1lIiwiaXNvVXRjRGF0ZVRpbWUiLCJkYXRldGltZSIsImlucHV0Rm9ybWF0IiwiZGlzcGxheUZvcm1hdCIsIm91dHB1dEZvcm1hdCIsImkxOG4iLCJkYXlOYW1lcyIsIm1vbnRoTmFtZXMiLCJ0b2RheSIsImdldFllYXIiLCJtYXNrZWRWYWx1ZSIsIiYiLCIjIiwiaXAiLCJjaHJzIiwiZW1haWwiLCItIiwibWFjIiwidmluIiwiYXV0b0VzY2FwZSIsInR4dCIsImVzY2FwZWRUeHQiLCJudW1lcmljIiwiaW50ZWdlckRpZ2l0cyIsImRpZ2l0cyIsImF1dG9Hcm91cCIsImdyb3VwU2l6ZSIsInNlcHMiLCJmbG9vciIsIm1vZCIsImludGVnZXJPcHRpb25hbCIsImRpZ2l0c09wdGlvbmFsIiwiZGVjaW1hbFByb3RlY3QiLCJwcmVmaXgiLCJkcSIsInN1ZmZpeCIsImVuZm9yY2VEaWdpdHNPbkJsdXIiLCJhbGxvd01pbnVzIiwibmVnYXRpb25TeW1ib2wiLCJmcm9udCIsImJhY2siLCJ1bm1hc2tBc051bWJlciIsImlzTmVnYXRpdmUiLCJkb3Bvc3QiLCJjaGFyQXRQb3MiLCJwcm9jZXNzVmFsdWUiLCJyYWRpeFBvc2l0aW9uIiwicnBiIiwiYWRkUmFkaXgiLCJwb3N0TWFzayIsInJhZGl4U3BsaXQiLCJjYXJkaW5hbGl0eSIsIm5ld0NhcmV0UG9zIiwidW5tYXNrZWQiLCJwYXJzZU1pbk1heE9wdGlvbnMiLCJOYU4iLCJOdW1iZXIiLCJNSU5fVkFMVUUiLCJNQVhfVkFMVUUiLCJpbnRlZ2VyUGFydCIsImVtcHR5Q2hlY2siLCJpbnRlZ2VyTlBhcnQiLCJwdlJhZGl4U3BsaXQiLCJidWZmZXJUZW1wbGF0ZSIsIjoiLCJyYWRpeCIsInZzIiwia29tbWFNYXRjaGVzIiwiZG90TWF0Y2hlcyIsInN1YnN0cmluZyIsImRlY1BhcnQiLCJkaWdpdHNGYWN0b3IiLCJwb3ciLCJyb3VuZCIsImNhbkNsZWFyIiwiY3VycmVuY3kiLCJkZWNpbWFsIiwiaW50ZWdlciIsInBlcmNlbnRhZ2UiLCJtYXNrU29ydCIsIm1hc2thIiwibWFza2IiLCJtYXNrYXMiLCJtYXNrYnMiLCJsb2NhbGVDb21wYXJlIiwiYW5hbHlzZU1hc2tCYXNlIiwicmVkdWNlVmFyaWF0aW9ucyIsIm1hc2tzIiwicHJldmlvdXNWYXJpYXRpb24iLCJwcmV2aW91c21hc2tHcm91cCIsIm1hc2tHcm91cHMiLCJ2YXJpYXRpb24iLCJtYXNrR3JvdXAiLCJyZWJ1aWxkIiwic3VibWFza3MiLCJwaG9uZUNvZGVzIiwiYWJzdHJhY3RwaG9uZSIsImNvdW50cnljb2RlIiwicHJvY2Vzc2VkVmFsdWUiLCJucHRtYXNrIiwiRW1wdHlCbG9jayIsImNvbnRhaW5lciIsInVwZGF0ZUhlaWdodCIsIndpbmRvd0hlaWdodCIsIm9mZnNldFRvcCIsIkZvcm1GaWVsZHMiLCJpbml0TWFza3MiLCJ1cGxvYWRJbWFnZSIsInVwbG9hZEF2YXRhciIsImNoZWNrTGVuZ3RoIiwiJGxhYmVsIiwicmVhZGVyIiwiRmlsZVJlYWRlciIsIm9ubG9hZGVuZCIsInJlYWRBc0RhdGFVUkwiLCIkaW5mbyIsIiRpbWciLCIkaW5mb0xlbmd0aCIsImZpZWxkTGVuZ3RoIiwibGVuZ3RoUmVtYWluZWQiLCJQbHVnIiwic2hvd1BsdWdQb3B1cCIsIlBvcHVwcyIsImJQb3B1cE9wZW5lZCIsIm9wZW5Qb3B1cCIsInNlbGYiLCIkdGFyZ2V0IiwiY2xvc2VFbCIsIlRhYnMiLCJsaW5rcyIsImNoZWNrQWN0aXZlQ29udGVudCIsInN3aXRjaENvbnRlbnQiLCIkYWN0aXZlIiwiVG9vbHRpcCIsInN3aXRjaFRvb2x0aXAiLCJjbG9zZVRvb2x0aXBzIiwiJHRhcmdldENvbnRlbnQiLCJWYWNhbmNpZXMiLCJzaG93TGluayIsImhpZGVMaW5rIiwiYWRkVmFjYW5jeUxpbmsiLCJhZGRWYWNhbmN5Q29udGFpbmVyIiwidmFjYW5jaWVzSW5mbyIsInZhY2FuY3lNYXAiLCJib2R5T3ZlcmxheSIsInNob3dWYWNhbmN5IiwiaGlkZVZhY2FuY3kiLCJhZGRWYWNhbmN5IiwiJHRhcmdldFZhY2FuY3kiLCJpbml0TWFwIiwiZ2VvY29kZXIiLCJ5bWFwcyIsImdlb2NvZGUiLCJhZGRyZXNzIiwicmVzdWx0cyIsInJlcyIsImNvb3JkIiwiZ2VvT2JqZWN0cyIsImdlb21ldHJ5IiwiZ2V0Q29vcmRpbmF0ZXMiLCJNYXAiLCJtYXBJZCIsImNlbnRlciIsIiRtYXBDb250YWluZXIiLCJoYXNNYXAiLCJQcm9maWxlIiwibWFwQ29udGFpbmVyIiwiVmlld2VyIiwiaW5pdENsYXNzZXMiLCJpbml0RnVuY3Rpb25zIiwidXBkYXRlUmVzaXplciIsInZpZXdlciJdLCJtYXBwaW5ncyI6IkNBS0MsU0FBU0EsRUFBRUMsR0FBRyxZQUFhLGlCQUFpQkMsU0FBUSxnQkFBaUJBLFFBQU9DLFFBQVFELE9BQU9DLFFBQVFILEVBQUVJLFNBQVNILEVBQUVELEdBQUUsR0FBSSxTQUFTQSxHQUFHLElBQUlBLEVBQUVJLFNBQVMsS0FBTSxJQUFJQyxPQUFNLDJDQUE0QyxPQUFPSixHQUFFRCxJQUFJQyxFQUFFRCxJQUFJLG1CQUFvQk0sUUFBT0EsT0FBT0MsS0FBSyxTQUFTUCxFQUFFQyxHQUFHLFlBQTZLLFNBQVNPLEdBQUVSLEVBQUVDLEdBQUdBLEVBQUVBLEdBQUdRLEVBQUUsSUFBSUMsR0FBRVQsRUFBRVUsY0FBYyxTQUFVRCxHQUFFRSxLQUFLWixFQUFFQyxFQUFFWSxLQUFLQyxZQUFZSixHQUFHSyxXQUFXQyxZQUFZTixHQUE0dUcsUUFBU08sR0FBRWpCLEdBQUcsR0FBSUMsS0FBSUQsR0FBRyxVQUFXQSxJQUFHQSxFQUFFa0IsT0FBT1IsRUFBRVMsR0FBRUMsS0FBS3BCLEVBQUcsT0FBTSxhQUFhVSxJQUFJUyxHQUFFRSxTQUFTckIsS0FBSyxVQUFVVSxHQUFHLElB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bkQsRUFBRSxlQUFlckMsUUFDbkIsR0FBSXVtRCxNQUVGbGtELEVBQUUsc0JBQXNCckMsUUFDMUIsR0FBSW9uRCxTQUVOL2tELEVBQUUsbUJBQW1CbkIsS0FBSyxXQUN4QixHQUFJNmxELE1BQUsxbkQsUUFFWGdELEVBQUUsZ0JBQWdCbkIsS0FBSyxXQUNyQixHQUFJaWtELFlBQVc5bEQsUUFFakJnRCxFQUFFLFdBQVduQixLQUFLLFdBQ2hCLEdBQUlrb0QsU0FBUS9wRCxRQUVkLEdBQUltbUQsWUFDSixHQUFJaUIsUUFDSixHQUFJZSxZQUdOOEIsT0FBT3IvQyxVQUFVdS9DLGNBQWdCLGFBSWpDRixPQUFPci9DLFVBQVV3L0MsY0FBZ0IsYUFNakNwbkQsRUFBRW5ELFVBQVUrQyxNQUFNLFdBQ2hCN0MsT0FBT3NxRCxPQUFTLEdBQUlKIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBUaGlyZCBwYXJ0eVxuICovXG5cbi8qISBqUXVlcnkgdjMuMi4xIHwgKGMpIEpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycyB8IGpxdWVyeS5vcmcvbGljZW5zZSAqL1xuIWZ1bmN0aW9uKGEsYil7XCJ1c2Ugc3RyaWN0XCI7XCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZSYmXCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZS5leHBvcnRzP21vZHVsZS5leHBvcnRzPWEuZG9jdW1lbnQ/YihhLCEwKTpmdW5jdGlvbihhKXtpZighYS5kb2N1bWVudCl0aHJvdyBuZXcgRXJyb3IoXCJqUXVlcnkgcmVxdWlyZXMgYSB3aW5kb3cgd2l0aCBhIGRvY3VtZW50XCIpO3JldHVybiBiKGEpfTpiKGEpfShcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzp0aGlzLGZ1bmN0aW9uKGEsYil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGM9W10sZD1hLmRvY3VtZW50LGU9T2JqZWN0LmdldFByb3RvdHlwZU9mLGY9Yy5zbGljZSxnPWMuY29uY2F0LGg9Yy5wdXNoLGk9Yy5pbmRleE9mLGo9e30saz1qLnRvU3RyaW5nLGw9ai5oYXNPd25Qcm9wZXJ0eSxtPWwudG9TdHJpbmcsbj1tLmNhbGwoT2JqZWN0KSxvPXt9O2Z1bmN0aW9uIHAoYSxiKXtiPWJ8fGQ7dmFyIGM9Yi5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO2MudGV4dD1hLGIuaGVhZC5hcHBlbmRDaGlsZChjKS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGMpfXZhciBxPVwiMy4yLjFcIixyPWZ1bmN0aW9uKGEsYil7cmV0dXJuIG5ldyByLmZuLmluaXQoYSxiKX0scz0vXltcXHNcXHVGRUZGXFx4QTBdK3xbXFxzXFx1RkVGRlxceEEwXSskL2csdD0vXi1tcy0vLHU9Ly0oW2Etel0pL2csdj1mdW5jdGlvbihhLGIpe3JldHVybiBiLnRvVXBwZXJDYXNlKCl9O3IuZm49ci5wcm90b3R5cGU9e2pxdWVyeTpxLGNvbnN0cnVjdG9yOnIsbGVuZ3RoOjAsdG9BcnJheTpmdW5jdGlvbigpe3JldHVybiBmLmNhbGwodGhpcyl9LGdldDpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09YT9mLmNhbGwodGhpcyk6YTwwP3RoaXNbYSt0aGlzLmxlbmd0aF06dGhpc1thXX0scHVzaFN0YWNrOmZ1bmN0aW9uKGEpe3ZhciBiPXIubWVyZ2UodGhpcy5jb25zdHJ1Y3RvcigpLGEpO3JldHVybiBiLnByZXZPYmplY3Q9dGhpcyxifSxlYWNoOmZ1bmN0aW9uKGEpe3JldHVybiByLmVhY2godGhpcyxhKX0sbWFwOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLnB1c2hTdGFjayhyLm1hcCh0aGlzLGZ1bmN0aW9uKGIsYyl7cmV0dXJuIGEuY2FsbChiLGMsYil9KSl9LHNsaWNlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKGYuYXBwbHkodGhpcyxhcmd1bWVudHMpKX0sZmlyc3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lcSgwKX0sbGFzdDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVxKC0xKX0sZXE6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5sZW5ndGgsYz0rYSsoYTwwP2I6MCk7cmV0dXJuIHRoaXMucHVzaFN0YWNrKGM+PTAmJmM8Yj9bdGhpc1tjXV06W10pfSxlbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wcmV2T2JqZWN0fHx0aGlzLmNvbnN0cnVjdG9yKCl9LHB1c2g6aCxzb3J0OmMuc29ydCxzcGxpY2U6Yy5zcGxpY2V9LHIuZXh0ZW5kPXIuZm4uZXh0ZW5kPWZ1bmN0aW9uKCl7dmFyIGEsYixjLGQsZSxmLGc9YXJndW1lbnRzWzBdfHx7fSxoPTEsaT1hcmd1bWVudHMubGVuZ3RoLGo9ITE7Zm9yKFwiYm9vbGVhblwiPT10eXBlb2YgZyYmKGo9ZyxnPWFyZ3VtZW50c1toXXx8e30saCsrKSxcIm9iamVjdFwiPT10eXBlb2YgZ3x8ci5pc0Z1bmN0aW9uKGcpfHwoZz17fSksaD09PWkmJihnPXRoaXMsaC0tKTtoPGk7aCsrKWlmKG51bGwhPShhPWFyZ3VtZW50c1toXSkpZm9yKGIgaW4gYSljPWdbYl0sZD1hW2JdLGchPT1kJiYoaiYmZCYmKHIuaXNQbGFpbk9iamVjdChkKXx8KGU9QXJyYXkuaXNBcnJheShkKSkpPyhlPyhlPSExLGY9YyYmQXJyYXkuaXNBcnJheShjKT9jOltdKTpmPWMmJnIuaXNQbGFpbk9iamVjdChjKT9jOnt9LGdbYl09ci5leHRlbmQoaixmLGQpKTp2b2lkIDAhPT1kJiYoZ1tiXT1kKSk7cmV0dXJuIGd9LHIuZXh0ZW5kKHtleHBhbmRvOlwialF1ZXJ5XCIrKHErTWF0aC5yYW5kb20oKSkucmVwbGFjZSgvXFxEL2csXCJcIiksaXNSZWFkeTohMCxlcnJvcjpmdW5jdGlvbihhKXt0aHJvdyBuZXcgRXJyb3IoYSl9LG5vb3A6ZnVuY3Rpb24oKXt9LGlzRnVuY3Rpb246ZnVuY3Rpb24oYSl7cmV0dXJuXCJmdW5jdGlvblwiPT09ci50eXBlKGEpfSxpc1dpbmRvdzpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbCE9YSYmYT09PWEud2luZG93fSxpc051bWVyaWM6ZnVuY3Rpb24oYSl7dmFyIGI9ci50eXBlKGEpO3JldHVybihcIm51bWJlclwiPT09Ynx8XCJzdHJpbmdcIj09PWIpJiYhaXNOYU4oYS1wYXJzZUZsb2F0KGEpKX0saXNQbGFpbk9iamVjdDpmdW5jdGlvbihhKXt2YXIgYixjO3JldHVybiEoIWF8fFwiW29iamVjdCBPYmplY3RdXCIhPT1rLmNhbGwoYSkpJiYoIShiPWUoYSkpfHwoYz1sLmNhbGwoYixcImNvbnN0cnVjdG9yXCIpJiZiLmNvbnN0cnVjdG9yLFwiZnVuY3Rpb25cIj09dHlwZW9mIGMmJm0uY2FsbChjKT09PW4pKX0saXNFbXB0eU9iamVjdDpmdW5jdGlvbihhKXt2YXIgYjtmb3IoYiBpbiBhKXJldHVybiExO3JldHVybiEwfSx0eXBlOmZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT1hP2ErXCJcIjpcIm9iamVjdFwiPT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT10eXBlb2YgYT9qW2suY2FsbChhKV18fFwib2JqZWN0XCI6dHlwZW9mIGF9LGdsb2JhbEV2YWw6ZnVuY3Rpb24oYSl7cChhKX0sY2FtZWxDYXNlOmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlcGxhY2UodCxcIm1zLVwiKS5yZXBsYWNlKHUsdil9LGVhY2g6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPTA7aWYodyhhKSl7Zm9yKGM9YS5sZW5ndGg7ZDxjO2QrKylpZihiLmNhbGwoYVtkXSxkLGFbZF0pPT09ITEpYnJlYWt9ZWxzZSBmb3IoZCBpbiBhKWlmKGIuY2FsbChhW2RdLGQsYVtkXSk9PT0hMSlicmVhaztyZXR1cm4gYX0sdHJpbTpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09YT9cIlwiOihhK1wiXCIpLnJlcGxhY2UocyxcIlwiKX0sbWFrZUFycmF5OmZ1bmN0aW9uKGEsYil7dmFyIGM9Ynx8W107cmV0dXJuIG51bGwhPWEmJih3KE9iamVjdChhKSk/ci5tZXJnZShjLFwic3RyaW5nXCI9PXR5cGVvZiBhP1thXTphKTpoLmNhbGwoYyxhKSksY30saW5BcnJheTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIG51bGw9PWI/LTE6aS5jYWxsKGIsYSxjKX0sbWVyZ2U6ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9K2IubGVuZ3RoLGQ9MCxlPWEubGVuZ3RoO2Q8YztkKyspYVtlKytdPWJbZF07cmV0dXJuIGEubGVuZ3RoPWUsYX0sZ3JlcDpmdW5jdGlvbihhLGIsYyl7Zm9yKHZhciBkLGU9W10sZj0wLGc9YS5sZW5ndGgsaD0hYztmPGc7ZisrKWQ9IWIoYVtmXSxmKSxkIT09aCYmZS5wdXNoKGFbZl0pO3JldHVybiBlfSxtYXA6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZj0wLGg9W107aWYodyhhKSlmb3IoZD1hLmxlbmd0aDtmPGQ7ZisrKWU9YihhW2ZdLGYsYyksbnVsbCE9ZSYmaC5wdXNoKGUpO2Vsc2UgZm9yKGYgaW4gYSllPWIoYVtmXSxmLGMpLG51bGwhPWUmJmgucHVzaChlKTtyZXR1cm4gZy5hcHBseShbXSxoKX0sZ3VpZDoxLHByb3h5OmZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBiJiYoYz1hW2JdLGI9YSxhPWMpLHIuaXNGdW5jdGlvbihhKSlyZXR1cm4gZD1mLmNhbGwoYXJndW1lbnRzLDIpLGU9ZnVuY3Rpb24oKXtyZXR1cm4gYS5hcHBseShifHx0aGlzLGQuY29uY2F0KGYuY2FsbChhcmd1bWVudHMpKSl9LGUuZ3VpZD1hLmd1aWQ9YS5ndWlkfHxyLmd1aWQrKyxlfSxub3c6RGF0ZS5ub3csc3VwcG9ydDpvfSksXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiYoci5mbltTeW1ib2wuaXRlcmF0b3JdPWNbU3ltYm9sLml0ZXJhdG9yXSksci5lYWNoKFwiQm9vbGVhbiBOdW1iZXIgU3RyaW5nIEZ1bmN0aW9uIEFycmF5IERhdGUgUmVnRXhwIE9iamVjdCBFcnJvciBTeW1ib2xcIi5zcGxpdChcIiBcIiksZnVuY3Rpb24oYSxiKXtqW1wiW29iamVjdCBcIitiK1wiXVwiXT1iLnRvTG93ZXJDYXNlKCl9KTtmdW5jdGlvbiB3KGEpe3ZhciBiPSEhYSYmXCJsZW5ndGhcImluIGEmJmEubGVuZ3RoLGM9ci50eXBlKGEpO3JldHVyblwiZnVuY3Rpb25cIiE9PWMmJiFyLmlzV2luZG93KGEpJiYoXCJhcnJheVwiPT09Y3x8MD09PWJ8fFwibnVtYmVyXCI9PXR5cGVvZiBiJiZiPjAmJmItMSBpbiBhKX12YXIgeD1mdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGcsaCxpLGosayxsLG0sbixvLHAscSxyLHMsdCx1PVwic2l6emxlXCIrMSpuZXcgRGF0ZSx2PWEuZG9jdW1lbnQsdz0wLHg9MCx5PWhhKCksej1oYSgpLEE9aGEoKSxCPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9PT1iJiYobD0hMCksMH0sQz17fS5oYXNPd25Qcm9wZXJ0eSxEPVtdLEU9RC5wb3AsRj1ELnB1c2gsRz1ELnB1c2gsSD1ELnNsaWNlLEk9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9MCxkPWEubGVuZ3RoO2M8ZDtjKyspaWYoYVtjXT09PWIpcmV0dXJuIGM7cmV0dXJuLTF9LEo9XCJjaGVja2VkfHNlbGVjdGVkfGFzeW5jfGF1dG9mb2N1c3xhdXRvcGxheXxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58aXNtYXB8bG9vcHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZFwiLEs9XCJbXFxcXHgyMFxcXFx0XFxcXHJcXFxcblxcXFxmXVwiLEw9XCIoPzpcXFxcXFxcXC58W1xcXFx3LV18W15cXDAtXFxcXHhhMF0pK1wiLE09XCJcXFxcW1wiK0srXCIqKFwiK0wrXCIpKD86XCIrSytcIiooWypeJHwhfl0/PSlcIitLK1wiKig/OicoKD86XFxcXFxcXFwufFteXFxcXFxcXFwnXSkqKSd8XFxcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXFxcXCJdKSopXFxcInwoXCIrTCtcIikpfClcIitLK1wiKlxcXFxdXCIsTj1cIjooXCIrTCtcIikoPzpcXFxcKCgoJygoPzpcXFxcXFxcXC58W15cXFxcXFxcXCddKSopJ3xcXFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcXFxcIl0pKilcXFwiKXwoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKVtcXFxcXV18XCIrTStcIikqKXwuKilcXFxcKXwpXCIsTz1uZXcgUmVnRXhwKEsrXCIrXCIsXCJnXCIpLFA9bmV3IFJlZ0V4cChcIl5cIitLK1wiK3woKD86XnxbXlxcXFxcXFxcXSkoPzpcXFxcXFxcXC4pKilcIitLK1wiKyRcIixcImdcIiksUT1uZXcgUmVnRXhwKFwiXlwiK0srXCIqLFwiK0srXCIqXCIpLFI9bmV3IFJlZ0V4cChcIl5cIitLK1wiKihbPit+XXxcIitLK1wiKVwiK0srXCIqXCIpLFM9bmV3IFJlZ0V4cChcIj1cIitLK1wiKihbXlxcXFxdJ1xcXCJdKj8pXCIrSytcIipcXFxcXVwiLFwiZ1wiKSxUPW5ldyBSZWdFeHAoTiksVT1uZXcgUmVnRXhwKFwiXlwiK0wrXCIkXCIpLFY9e0lEOm5ldyBSZWdFeHAoXCJeIyhcIitMK1wiKVwiKSxDTEFTUzpuZXcgUmVnRXhwKFwiXlxcXFwuKFwiK0wrXCIpXCIpLFRBRzpuZXcgUmVnRXhwKFwiXihcIitMK1wifFsqXSlcIiksQVRUUjpuZXcgUmVnRXhwKFwiXlwiK00pLFBTRVVETzpuZXcgUmVnRXhwKFwiXlwiK04pLENISUxEOm5ldyBSZWdFeHAoXCJeOihvbmx5fGZpcnN0fGxhc3R8bnRofG50aC1sYXN0KS0oY2hpbGR8b2YtdHlwZSkoPzpcXFxcKFwiK0srXCIqKGV2ZW58b2RkfCgoWystXXwpKFxcXFxkKilufClcIitLK1wiKig/OihbKy1dfClcIitLK1wiKihcXFxcZCspfCkpXCIrSytcIipcXFxcKXwpXCIsXCJpXCIpLGJvb2w6bmV3IFJlZ0V4cChcIl4oPzpcIitKK1wiKSRcIixcImlcIiksbmVlZHNDb250ZXh0Om5ldyBSZWdFeHAoXCJeXCIrSytcIipbPit+XXw6KGV2ZW58b2RkfGVxfGd0fGx0fG50aHxmaXJzdHxsYXN0KSg/OlxcXFwoXCIrSytcIiooKD86LVxcXFxkKT9cXFxcZCopXCIrSytcIipcXFxcKXwpKD89W14tXXwkKVwiLFwiaVwiKX0sVz0vXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLFg9L15oXFxkJC9pLFk9L15bXntdK1xce1xccypcXFtuYXRpdmUgXFx3LyxaPS9eKD86IyhbXFx3LV0rKXwoXFx3Kyl8XFwuKFtcXHctXSspKSQvLCQ9L1srfl0vLF89bmV3IFJlZ0V4cChcIlxcXFxcXFxcKFtcXFxcZGEtZl17MSw2fVwiK0srXCI/fChcIitLK1wiKXwuKVwiLFwiaWdcIiksYWE9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPVwiMHhcIitiLTY1NTM2O3JldHVybiBkIT09ZHx8Yz9iOmQ8MD9TdHJpbmcuZnJvbUNoYXJDb2RlKGQrNjU1MzYpOlN0cmluZy5mcm9tQ2hhckNvZGUoZD4+MTB8NTUyOTYsMTAyMyZkfDU2MzIwKX0sYmE9LyhbXFwwLVxceDFmXFx4N2ZdfF4tP1xcZCl8Xi0kfFteXFwwLVxceDFmXFx4N2YtXFx1RkZGRlxcdy1dL2csY2E9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYj9cIlxcMFwiPT09YT9cIlxcdWZmZmRcIjphLnNsaWNlKDAsLTEpK1wiXFxcXFwiK2EuY2hhckNvZGVBdChhLmxlbmd0aC0xKS50b1N0cmluZygxNikrXCIgXCI6XCJcXFxcXCIrYX0sZGE9ZnVuY3Rpb24oKXttKCl9LGVhPXRhKGZ1bmN0aW9uKGEpe3JldHVybiBhLmRpc2FibGVkPT09ITAmJihcImZvcm1cImluIGF8fFwibGFiZWxcImluIGEpfSx7ZGlyOlwicGFyZW50Tm9kZVwiLG5leHQ6XCJsZWdlbmRcIn0pO3RyeXtHLmFwcGx5KEQ9SC5jYWxsKHYuY2hpbGROb2Rlcyksdi5jaGlsZE5vZGVzKSxEW3YuY2hpbGROb2Rlcy5sZW5ndGhdLm5vZGVUeXBlfWNhdGNoKGZhKXtHPXthcHBseTpELmxlbmd0aD9mdW5jdGlvbihhLGIpe0YuYXBwbHkoYSxILmNhbGwoYikpfTpmdW5jdGlvbihhLGIpe3ZhciBjPWEubGVuZ3RoLGQ9MDt3aGlsZShhW2MrK109YltkKytdKTthLmxlbmd0aD1jLTF9fX1mdW5jdGlvbiBnYShhLGIsZCxlKXt2YXIgZixoLGosayxsLG8scixzPWImJmIub3duZXJEb2N1bWVudCx3PWI/Yi5ub2RlVHlwZTo5O2lmKGQ9ZHx8W10sXCJzdHJpbmdcIiE9dHlwZW9mIGF8fCFhfHwxIT09dyYmOSE9PXcmJjExIT09dylyZXR1cm4gZDtpZighZSYmKChiP2Iub3duZXJEb2N1bWVudHx8Yjp2KSE9PW4mJm0oYiksYj1ifHxuLHApKXtpZigxMSE9PXcmJihsPVouZXhlYyhhKSkpaWYoZj1sWzFdKXtpZig5PT09dyl7aWYoIShqPWIuZ2V0RWxlbWVudEJ5SWQoZikpKXJldHVybiBkO2lmKGouaWQ9PT1mKXJldHVybiBkLnB1c2goaiksZH1lbHNlIGlmKHMmJihqPXMuZ2V0RWxlbWVudEJ5SWQoZikpJiZ0KGIsaikmJmouaWQ9PT1mKXJldHVybiBkLnB1c2goaiksZH1lbHNle2lmKGxbMl0pcmV0dXJuIEcuYXBwbHkoZCxiLmdldEVsZW1lbnRzQnlUYWdOYW1lKGEpKSxkO2lmKChmPWxbM10pJiZjLmdldEVsZW1lbnRzQnlDbGFzc05hbWUmJmIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSlyZXR1cm4gRy5hcHBseShkLGIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShmKSksZH1pZihjLnFzYSYmIUFbYStcIiBcIl0mJighcXx8IXEudGVzdChhKSkpe2lmKDEhPT13KXM9YixyPWE7ZWxzZSBpZihcIm9iamVjdFwiIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpKXsoaz1iLmdldEF0dHJpYnV0ZShcImlkXCIpKT9rPWsucmVwbGFjZShiYSxjYSk6Yi5zZXRBdHRyaWJ1dGUoXCJpZFwiLGs9dSksbz1nKGEpLGg9by5sZW5ndGg7d2hpbGUoaC0tKW9baF09XCIjXCIraytcIiBcIitzYShvW2hdKTtyPW8uam9pbihcIixcIikscz0kLnRlc3QoYSkmJnFhKGIucGFyZW50Tm9kZSl8fGJ9aWYocil0cnl7cmV0dXJuIEcuYXBwbHkoZCxzLnF1ZXJ5U2VsZWN0b3JBbGwocikpLGR9Y2F0Y2goeCl7fWZpbmFsbHl7az09PXUmJmIucmVtb3ZlQXR0cmlidXRlKFwiaWRcIil9fX1yZXR1cm4gaShhLnJlcGxhY2UoUCxcIiQxXCIpLGIsZCxlKX1mdW5jdGlvbiBoYSgpe3ZhciBhPVtdO2Z1bmN0aW9uIGIoYyxlKXtyZXR1cm4gYS5wdXNoKGMrXCIgXCIpPmQuY2FjaGVMZW5ndGgmJmRlbGV0ZSBiW2Euc2hpZnQoKV0sYltjK1wiIFwiXT1lfXJldHVybiBifWZ1bmN0aW9uIGlhKGEpe3JldHVybiBhW3VdPSEwLGF9ZnVuY3Rpb24gamEoYSl7dmFyIGI9bi5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIik7dHJ5e3JldHVybiEhYShiKX1jYXRjaChjKXtyZXR1cm4hMX1maW5hbGx5e2IucGFyZW50Tm9kZSYmYi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGIpLGI9bnVsbH19ZnVuY3Rpb24ga2EoYSxiKXt2YXIgYz1hLnNwbGl0KFwifFwiKSxlPWMubGVuZ3RoO3doaWxlKGUtLSlkLmF0dHJIYW5kbGVbY1tlXV09Yn1mdW5jdGlvbiBsYShhLGIpe3ZhciBjPWImJmEsZD1jJiYxPT09YS5ub2RlVHlwZSYmMT09PWIubm9kZVR5cGUmJmEuc291cmNlSW5kZXgtYi5zb3VyY2VJbmRleDtpZihkKXJldHVybiBkO2lmKGMpd2hpbGUoYz1jLm5leHRTaWJsaW5nKWlmKGM9PT1iKXJldHVybi0xO3JldHVybiBhPzE6LTF9ZnVuY3Rpb24gbWEoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3ZhciBjPWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1jJiZiLnR5cGU9PT1hfX1mdW5jdGlvbiBuYShhKXtyZXR1cm4gZnVuY3Rpb24oYil7dmFyIGM9Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybihcImlucHV0XCI9PT1jfHxcImJ1dHRvblwiPT09YykmJmIudHlwZT09PWF9fWZ1bmN0aW9uIG9hKGEpe3JldHVybiBmdW5jdGlvbihiKXtyZXR1cm5cImZvcm1cImluIGI/Yi5wYXJlbnROb2RlJiZiLmRpc2FibGVkPT09ITE/XCJsYWJlbFwiaW4gYj9cImxhYmVsXCJpbiBiLnBhcmVudE5vZGU/Yi5wYXJlbnROb2RlLmRpc2FibGVkPT09YTpiLmRpc2FibGVkPT09YTpiLmlzRGlzYWJsZWQ9PT1hfHxiLmlzRGlzYWJsZWQhPT0hYSYmZWEoYik9PT1hOmIuZGlzYWJsZWQ9PT1hOlwibGFiZWxcImluIGImJmIuZGlzYWJsZWQ9PT1hfX1mdW5jdGlvbiBwYShhKXtyZXR1cm4gaWEoZnVuY3Rpb24oYil7cmV0dXJuIGI9K2IsaWEoZnVuY3Rpb24oYyxkKXt2YXIgZSxmPWEoW10sYy5sZW5ndGgsYiksZz1mLmxlbmd0aDt3aGlsZShnLS0pY1tlPWZbZ11dJiYoY1tlXT0hKGRbZV09Y1tlXSkpfSl9KX1mdW5jdGlvbiBxYShhKXtyZXR1cm4gYSYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGEuZ2V0RWxlbWVudHNCeVRhZ05hbWUmJmF9Yz1nYS5zdXBwb3J0PXt9LGY9Z2EuaXNYTUw9ZnVuY3Rpb24oYSl7dmFyIGI9YSYmKGEub3duZXJEb2N1bWVudHx8YSkuZG9jdW1lbnRFbGVtZW50O3JldHVybiEhYiYmXCJIVE1MXCIhPT1iLm5vZGVOYW1lfSxtPWdhLnNldERvY3VtZW50PWZ1bmN0aW9uKGEpe3ZhciBiLGUsZz1hP2Eub3duZXJEb2N1bWVudHx8YTp2O3JldHVybiBnIT09biYmOT09PWcubm9kZVR5cGUmJmcuZG9jdW1lbnRFbGVtZW50PyhuPWcsbz1uLmRvY3VtZW50RWxlbWVudCxwPSFmKG4pLHYhPT1uJiYoZT1uLmRlZmF1bHRWaWV3KSYmZS50b3AhPT1lJiYoZS5hZGRFdmVudExpc3RlbmVyP2UuYWRkRXZlbnRMaXN0ZW5lcihcInVubG9hZFwiLGRhLCExKTplLmF0dGFjaEV2ZW50JiZlLmF0dGFjaEV2ZW50KFwib251bmxvYWRcIixkYSkpLGMuYXR0cmlidXRlcz1qYShmdW5jdGlvbihhKXtyZXR1cm4gYS5jbGFzc05hbWU9XCJpXCIsIWEuZ2V0QXR0cmlidXRlKFwiY2xhc3NOYW1lXCIpfSksYy5nZXRFbGVtZW50c0J5VGFnTmFtZT1qYShmdW5jdGlvbihhKXtyZXR1cm4gYS5hcHBlbmRDaGlsZChuLmNyZWF0ZUNvbW1lbnQoXCJcIikpLCFhLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiKlwiKS5sZW5ndGh9KSxjLmdldEVsZW1lbnRzQnlDbGFzc05hbWU9WS50ZXN0KG4uZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSksYy5nZXRCeUlkPWphKGZ1bmN0aW9uKGEpe3JldHVybiBvLmFwcGVuZENoaWxkKGEpLmlkPXUsIW4uZ2V0RWxlbWVudHNCeU5hbWV8fCFuLmdldEVsZW1lbnRzQnlOYW1lKHUpLmxlbmd0aH0pLGMuZ2V0QnlJZD8oZC5maWx0ZXIuSUQ9ZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKF8sYWEpO3JldHVybiBmdW5jdGlvbihhKXtyZXR1cm4gYS5nZXRBdHRyaWJ1dGUoXCJpZFwiKT09PWJ9fSxkLmZpbmQuSUQ9ZnVuY3Rpb24oYSxiKXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgYi5nZXRFbGVtZW50QnlJZCYmcCl7dmFyIGM9Yi5nZXRFbGVtZW50QnlJZChhKTtyZXR1cm4gYz9bY106W119fSk6KGQuZmlsdGVyLklEPWZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShfLGFhKTtyZXR1cm4gZnVuY3Rpb24oYSl7dmFyIGM9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGEuZ2V0QXR0cmlidXRlTm9kZSYmYS5nZXRBdHRyaWJ1dGVOb2RlKFwiaWRcIik7cmV0dXJuIGMmJmMudmFsdWU9PT1ifX0sZC5maW5kLklEPWZ1bmN0aW9uKGEsYil7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGIuZ2V0RWxlbWVudEJ5SWQmJnApe3ZhciBjLGQsZSxmPWIuZ2V0RWxlbWVudEJ5SWQoYSk7aWYoZil7aWYoYz1mLmdldEF0dHJpYnV0ZU5vZGUoXCJpZFwiKSxjJiZjLnZhbHVlPT09YSlyZXR1cm5bZl07ZT1iLmdldEVsZW1lbnRzQnlOYW1lKGEpLGQ9MDt3aGlsZShmPWVbZCsrXSlpZihjPWYuZ2V0QXR0cmlidXRlTm9kZShcImlkXCIpLGMmJmMudmFsdWU9PT1hKXJldHVybltmXX1yZXR1cm5bXX19KSxkLmZpbmQuVEFHPWMuZ2V0RWxlbWVudHNCeVRhZ05hbWU/ZnVuY3Rpb24oYSxiKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgYi5nZXRFbGVtZW50c0J5VGFnTmFtZT9iLmdldEVsZW1lbnRzQnlUYWdOYW1lKGEpOmMucXNhP2IucXVlcnlTZWxlY3RvckFsbChhKTp2b2lkIDB9OmZ1bmN0aW9uKGEsYil7dmFyIGMsZD1bXSxlPTAsZj1iLmdldEVsZW1lbnRzQnlUYWdOYW1lKGEpO2lmKFwiKlwiPT09YSl7d2hpbGUoYz1mW2UrK10pMT09PWMubm9kZVR5cGUmJmQucHVzaChjKTtyZXR1cm4gZH1yZXR1cm4gZn0sZC5maW5kLkNMQVNTPWMuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSYmZnVuY3Rpb24oYSxiKXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgYi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lJiZwKXJldHVybiBiLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoYSl9LHI9W10scT1bXSwoYy5xc2E9WS50ZXN0KG4ucXVlcnlTZWxlY3RvckFsbCkpJiYoamEoZnVuY3Rpb24oYSl7by5hcHBlbmRDaGlsZChhKS5pbm5lckhUTUw9XCI8YSBpZD0nXCIrdStcIic+PC9hPjxzZWxlY3QgaWQ9J1wiK3UrXCItXFxyXFxcXCcgbXNhbGxvd2NhcHR1cmU9Jyc+PG9wdGlvbiBzZWxlY3RlZD0nJz48L29wdGlvbj48L3NlbGVjdD5cIixhLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbbXNhbGxvd2NhcHR1cmVePScnXVwiKS5sZW5ndGgmJnEucHVzaChcIlsqXiRdPVwiK0srXCIqKD86Jyd8XFxcIlxcXCIpXCIpLGEucXVlcnlTZWxlY3RvckFsbChcIltzZWxlY3RlZF1cIikubGVuZ3RofHxxLnB1c2goXCJcXFxcW1wiK0srXCIqKD86dmFsdWV8XCIrSitcIilcIiksYS5xdWVyeVNlbGVjdG9yQWxsKFwiW2lkfj1cIit1K1wiLV1cIikubGVuZ3RofHxxLnB1c2goXCJ+PVwiKSxhLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6Y2hlY2tlZFwiKS5sZW5ndGh8fHEucHVzaChcIjpjaGVja2VkXCIpLGEucXVlcnlTZWxlY3RvckFsbChcImEjXCIrdStcIisqXCIpLmxlbmd0aHx8cS5wdXNoKFwiLiMuK1srfl1cIil9KSxqYShmdW5jdGlvbihhKXthLmlubmVySFRNTD1cIjxhIGhyZWY9JycgZGlzYWJsZWQ9J2Rpc2FibGVkJz48L2E+PHNlbGVjdCBkaXNhYmxlZD0nZGlzYWJsZWQnPjxvcHRpb24vPjwvc2VsZWN0PlwiO3ZhciBiPW4uY3JlYXRlRWxlbWVudChcImlucHV0XCIpO2Iuc2V0QXR0cmlidXRlKFwidHlwZVwiLFwiaGlkZGVuXCIpLGEuYXBwZW5kQ2hpbGQoYikuc2V0QXR0cmlidXRlKFwibmFtZVwiLFwiRFwiKSxhLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbbmFtZT1kXVwiKS5sZW5ndGgmJnEucHVzaChcIm5hbWVcIitLK1wiKlsqXiR8IX5dPz1cIiksMiE9PWEucXVlcnlTZWxlY3RvckFsbChcIjplbmFibGVkXCIpLmxlbmd0aCYmcS5wdXNoKFwiOmVuYWJsZWRcIixcIjpkaXNhYmxlZFwiKSxvLmFwcGVuZENoaWxkKGEpLmRpc2FibGVkPSEwLDIhPT1hLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6ZGlzYWJsZWRcIikubGVuZ3RoJiZxLnB1c2goXCI6ZW5hYmxlZFwiLFwiOmRpc2FibGVkXCIpLGEucXVlcnlTZWxlY3RvckFsbChcIiosOnhcIikscS5wdXNoKFwiLC4qOlwiKX0pKSwoYy5tYXRjaGVzU2VsZWN0b3I9WS50ZXN0KHM9by5tYXRjaGVzfHxvLndlYmtpdE1hdGNoZXNTZWxlY3Rvcnx8by5tb3pNYXRjaGVzU2VsZWN0b3J8fG8ub01hdGNoZXNTZWxlY3Rvcnx8by5tc01hdGNoZXNTZWxlY3RvcikpJiZqYShmdW5jdGlvbihhKXtjLmRpc2Nvbm5lY3RlZE1hdGNoPXMuY2FsbChhLFwiKlwiKSxzLmNhbGwoYSxcIltzIT0nJ106eFwiKSxyLnB1c2goXCIhPVwiLE4pfSkscT1xLmxlbmd0aCYmbmV3IFJlZ0V4cChxLmpvaW4oXCJ8XCIpKSxyPXIubGVuZ3RoJiZuZXcgUmVnRXhwKHIuam9pbihcInxcIikpLGI9WS50ZXN0KG8uY29tcGFyZURvY3VtZW50UG9zaXRpb24pLHQ9Ynx8WS50ZXN0KG8uY29udGFpbnMpP2Z1bmN0aW9uKGEsYil7dmFyIGM9OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YSxkPWImJmIucGFyZW50Tm9kZTtyZXR1cm4gYT09PWR8fCEoIWR8fDEhPT1kLm5vZGVUeXBlfHwhKGMuY29udGFpbnM/Yy5jb250YWlucyhkKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uJiYxNiZhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGQpKSl9OmZ1bmN0aW9uKGEsYil7aWYoYil3aGlsZShiPWIucGFyZW50Tm9kZSlpZihiPT09YSlyZXR1cm4hMDtyZXR1cm4hMX0sQj1iP2Z1bmN0aW9uKGEsYil7aWYoYT09PWIpcmV0dXJuIGw9ITAsMDt2YXIgZD0hYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbi0hYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbjtyZXR1cm4gZD9kOihkPShhLm93bmVyRG9jdW1lbnR8fGEpPT09KGIub3duZXJEb2N1bWVudHx8Yik/YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKToxLDEmZHx8IWMuc29ydERldGFjaGVkJiZiLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGEpPT09ZD9hPT09bnx8YS5vd25lckRvY3VtZW50PT09diYmdCh2LGEpPy0xOmI9PT1ufHxiLm93bmVyRG9jdW1lbnQ9PT12JiZ0KHYsYik/MTprP0koayxhKS1JKGssYik6MDo0JmQ/LTE6MSl9OmZ1bmN0aW9uKGEsYil7aWYoYT09PWIpcmV0dXJuIGw9ITAsMDt2YXIgYyxkPTAsZT1hLnBhcmVudE5vZGUsZj1iLnBhcmVudE5vZGUsZz1bYV0saD1bYl07aWYoIWV8fCFmKXJldHVybiBhPT09bj8tMTpiPT09bj8xOmU/LTE6Zj8xOms/SShrLGEpLUkoayxiKTowO2lmKGU9PT1mKXJldHVybiBsYShhLGIpO2M9YTt3aGlsZShjPWMucGFyZW50Tm9kZSlnLnVuc2hpZnQoYyk7Yz1iO3doaWxlKGM9Yy5wYXJlbnROb2RlKWgudW5zaGlmdChjKTt3aGlsZShnW2RdPT09aFtkXSlkKys7cmV0dXJuIGQ/bGEoZ1tkXSxoW2RdKTpnW2RdPT09dj8tMTpoW2RdPT09dj8xOjB9LG4pOm59LGdhLm1hdGNoZXM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZ2EoYSxudWxsLG51bGwsYil9LGdhLm1hdGNoZXNTZWxlY3Rvcj1mdW5jdGlvbihhLGIpe2lmKChhLm93bmVyRG9jdW1lbnR8fGEpIT09biYmbShhKSxiPWIucmVwbGFjZShTLFwiPSckMSddXCIpLGMubWF0Y2hlc1NlbGVjdG9yJiZwJiYhQVtiK1wiIFwiXSYmKCFyfHwhci50ZXN0KGIpKSYmKCFxfHwhcS50ZXN0KGIpKSl0cnl7dmFyIGQ9cy5jYWxsKGEsYik7aWYoZHx8Yy5kaXNjb25uZWN0ZWRNYXRjaHx8YS5kb2N1bWVudCYmMTEhPT1hLmRvY3VtZW50Lm5vZGVUeXBlKXJldHVybiBkfWNhdGNoKGUpe31yZXR1cm4gZ2EoYixuLG51bGwsW2FdKS5sZW5ndGg+MH0sZ2EuY29udGFpbnM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4oYS5vd25lckRvY3VtZW50fHxhKSE9PW4mJm0oYSksdChhLGIpfSxnYS5hdHRyPWZ1bmN0aW9uKGEsYil7KGEub3duZXJEb2N1bWVudHx8YSkhPT1uJiZtKGEpO3ZhciBlPWQuYXR0ckhhbmRsZVtiLnRvTG93ZXJDYXNlKCldLGY9ZSYmQy5jYWxsKGQuYXR0ckhhbmRsZSxiLnRvTG93ZXJDYXNlKCkpP2UoYSxiLCFwKTp2b2lkIDA7cmV0dXJuIHZvaWQgMCE9PWY/ZjpjLmF0dHJpYnV0ZXN8fCFwP2EuZ2V0QXR0cmlidXRlKGIpOihmPWEuZ2V0QXR0cmlidXRlTm9kZShiKSkmJmYuc3BlY2lmaWVkP2YudmFsdWU6bnVsbH0sZ2EuZXNjYXBlPWZ1bmN0aW9uKGEpe3JldHVybihhK1wiXCIpLnJlcGxhY2UoYmEsY2EpfSxnYS5lcnJvcj1mdW5jdGlvbihhKXt0aHJvdyBuZXcgRXJyb3IoXCJTeW50YXggZXJyb3IsIHVucmVjb2duaXplZCBleHByZXNzaW9uOiBcIithKX0sZ2EudW5pcXVlU29ydD1mdW5jdGlvbihhKXt2YXIgYixkPVtdLGU9MCxmPTA7aWYobD0hYy5kZXRlY3REdXBsaWNhdGVzLGs9IWMuc29ydFN0YWJsZSYmYS5zbGljZSgwKSxhLnNvcnQoQiksbCl7d2hpbGUoYj1hW2YrK10pYj09PWFbZl0mJihlPWQucHVzaChmKSk7d2hpbGUoZS0tKWEuc3BsaWNlKGRbZV0sMSl9cmV0dXJuIGs9bnVsbCxhfSxlPWdhLmdldFRleHQ9ZnVuY3Rpb24oYSl7dmFyIGIsYz1cIlwiLGQ9MCxmPWEubm9kZVR5cGU7aWYoZil7aWYoMT09PWZ8fDk9PT1mfHwxMT09PWYpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBhLnRleHRDb250ZW50KXJldHVybiBhLnRleHRDb250ZW50O2ZvcihhPWEuZmlyc3RDaGlsZDthO2E9YS5uZXh0U2libGluZyljKz1lKGEpfWVsc2UgaWYoMz09PWZ8fDQ9PT1mKXJldHVybiBhLm5vZGVWYWx1ZX1lbHNlIHdoaWxlKGI9YVtkKytdKWMrPWUoYik7cmV0dXJuIGN9LGQ9Z2Euc2VsZWN0b3JzPXtjYWNoZUxlbmd0aDo1MCxjcmVhdGVQc2V1ZG86aWEsbWF0Y2g6VixhdHRySGFuZGxlOnt9LGZpbmQ6e30scmVsYXRpdmU6e1wiPlwiOntkaXI6XCJwYXJlbnROb2RlXCIsZmlyc3Q6ITB9LFwiIFwiOntkaXI6XCJwYXJlbnROb2RlXCJ9LFwiK1wiOntkaXI6XCJwcmV2aW91c1NpYmxpbmdcIixmaXJzdDohMH0sXCJ+XCI6e2RpcjpcInByZXZpb3VzU2libGluZ1wifX0scHJlRmlsdGVyOntBVFRSOmZ1bmN0aW9uKGEpe3JldHVybiBhWzFdPWFbMV0ucmVwbGFjZShfLGFhKSxhWzNdPShhWzNdfHxhWzRdfHxhWzVdfHxcIlwiKS5yZXBsYWNlKF8sYWEpLFwifj1cIj09PWFbMl0mJihhWzNdPVwiIFwiK2FbM10rXCIgXCIpLGEuc2xpY2UoMCw0KX0sQ0hJTEQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGFbMV09YVsxXS50b0xvd2VyQ2FzZSgpLFwibnRoXCI9PT1hWzFdLnNsaWNlKDAsMyk/KGFbM118fGdhLmVycm9yKGFbMF0pLGFbNF09KyhhWzRdP2FbNV0rKGFbNl18fDEpOjIqKFwiZXZlblwiPT09YVszXXx8XCJvZGRcIj09PWFbM10pKSxhWzVdPSsoYVs3XSthWzhdfHxcIm9kZFwiPT09YVszXSkpOmFbM10mJmdhLmVycm9yKGFbMF0pLGF9LFBTRVVETzpmdW5jdGlvbihhKXt2YXIgYixjPSFhWzZdJiZhWzJdO3JldHVybiBWLkNISUxELnRlc3QoYVswXSk/bnVsbDooYVszXT9hWzJdPWFbNF18fGFbNV18fFwiXCI6YyYmVC50ZXN0KGMpJiYoYj1nKGMsITApKSYmKGI9Yy5pbmRleE9mKFwiKVwiLGMubGVuZ3RoLWIpLWMubGVuZ3RoKSYmKGFbMF09YVswXS5zbGljZSgwLGIpLGFbMl09Yy5zbGljZSgwLGIpKSxhLnNsaWNlKDAsMykpfX0sZmlsdGVyOntUQUc6ZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKF8sYWEpLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCIqXCI9PT1hP2Z1bmN0aW9uKCl7cmV0dXJuITB9OmZ1bmN0aW9uKGEpe3JldHVybiBhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1ifX0sQ0xBU1M6ZnVuY3Rpb24oYSl7dmFyIGI9eVthK1wiIFwiXTtyZXR1cm4gYnx8KGI9bmV3IFJlZ0V4cChcIihefFwiK0srXCIpXCIrYStcIihcIitLK1wifCQpXCIpKSYmeShhLGZ1bmN0aW9uKGEpe3JldHVybiBiLnRlc3QoXCJzdHJpbmdcIj09dHlwZW9mIGEuY2xhc3NOYW1lJiZhLmNsYXNzTmFtZXx8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGEuZ2V0QXR0cmlidXRlJiZhLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpfHxcIlwiKX0pfSxBVFRSOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gZnVuY3Rpb24oZCl7dmFyIGU9Z2EuYXR0cihkLGEpO3JldHVybiBudWxsPT1lP1wiIT1cIj09PWI6IWJ8fChlKz1cIlwiLFwiPVwiPT09Yj9lPT09YzpcIiE9XCI9PT1iP2UhPT1jOlwiXj1cIj09PWI/YyYmMD09PWUuaW5kZXhPZihjKTpcIio9XCI9PT1iP2MmJmUuaW5kZXhPZihjKT4tMTpcIiQ9XCI9PT1iP2MmJmUuc2xpY2UoLWMubGVuZ3RoKT09PWM6XCJ+PVwiPT09Yj8oXCIgXCIrZS5yZXBsYWNlKE8sXCIgXCIpK1wiIFwiKS5pbmRleE9mKGMpPi0xOlwifD1cIj09PWImJihlPT09Y3x8ZS5zbGljZSgwLGMubGVuZ3RoKzEpPT09YytcIi1cIikpfX0sQ0hJTEQ6ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1cIm50aFwiIT09YS5zbGljZSgwLDMpLGc9XCJsYXN0XCIhPT1hLnNsaWNlKC00KSxoPVwib2YtdHlwZVwiPT09YjtyZXR1cm4gMT09PWQmJjA9PT1lP2Z1bmN0aW9uKGEpe3JldHVybiEhYS5wYXJlbnROb2RlfTpmdW5jdGlvbihiLGMsaSl7dmFyIGosayxsLG0sbixvLHA9ZiE9PWc/XCJuZXh0U2libGluZ1wiOlwicHJldmlvdXNTaWJsaW5nXCIscT1iLnBhcmVudE5vZGUscj1oJiZiLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkscz0haSYmIWgsdD0hMTtpZihxKXtpZihmKXt3aGlsZShwKXttPWI7d2hpbGUobT1tW3BdKWlmKGg/bS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09cjoxPT09bS5ub2RlVHlwZSlyZXR1cm4hMTtvPXA9XCJvbmx5XCI9PT1hJiYhbyYmXCJuZXh0U2libGluZ1wifXJldHVybiEwfWlmKG89W2c/cS5maXJzdENoaWxkOnEubGFzdENoaWxkXSxnJiZzKXttPXEsbD1tW3VdfHwobVt1XT17fSksaz1sW20udW5pcXVlSURdfHwobFttLnVuaXF1ZUlEXT17fSksaj1rW2FdfHxbXSxuPWpbMF09PT13JiZqWzFdLHQ9biYmalsyXSxtPW4mJnEuY2hpbGROb2Rlc1tuXTt3aGlsZShtPSsrbiYmbSYmbVtwXXx8KHQ9bj0wKXx8by5wb3AoKSlpZigxPT09bS5ub2RlVHlwZSYmKyt0JiZtPT09Yil7a1thXT1bdyxuLHRdO2JyZWFrfX1lbHNlIGlmKHMmJihtPWIsbD1tW3VdfHwobVt1XT17fSksaz1sW20udW5pcXVlSURdfHwobFttLnVuaXF1ZUlEXT17fSksaj1rW2FdfHxbXSxuPWpbMF09PT13JiZqWzFdLHQ9biksdD09PSExKXdoaWxlKG09KytuJiZtJiZtW3BdfHwodD1uPTApfHxvLnBvcCgpKWlmKChoP20ubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PXI6MT09PW0ubm9kZVR5cGUpJiYrK3QmJihzJiYobD1tW3VdfHwobVt1XT17fSksaz1sW20udW5pcXVlSURdfHwobFttLnVuaXF1ZUlEXT17fSksa1thXT1bdyx0XSksbT09PWIpKWJyZWFrO3JldHVybiB0LT1lLHQ9PT1kfHx0JWQ9PT0wJiZ0L2Q+PTB9fX0sUFNFVURPOmZ1bmN0aW9uKGEsYil7dmFyIGMsZT1kLnBzZXVkb3NbYV18fGQuc2V0RmlsdGVyc1thLnRvTG93ZXJDYXNlKCldfHxnYS5lcnJvcihcInVuc3VwcG9ydGVkIHBzZXVkbzogXCIrYSk7cmV0dXJuIGVbdV0/ZShiKTplLmxlbmd0aD4xPyhjPVthLGEsXCJcIixiXSxkLnNldEZpbHRlcnMuaGFzT3duUHJvcGVydHkoYS50b0xvd2VyQ2FzZSgpKT9pYShmdW5jdGlvbihhLGMpe3ZhciBkLGY9ZShhLGIpLGc9Zi5sZW5ndGg7d2hpbGUoZy0tKWQ9SShhLGZbZ10pLGFbZF09IShjW2RdPWZbZ10pfSk6ZnVuY3Rpb24oYSl7cmV0dXJuIGUoYSwwLGMpfSk6ZX19LHBzZXVkb3M6e25vdDppYShmdW5jdGlvbihhKXt2YXIgYj1bXSxjPVtdLGQ9aChhLnJlcGxhY2UoUCxcIiQxXCIpKTtyZXR1cm4gZFt1XT9pYShmdW5jdGlvbihhLGIsYyxlKXt2YXIgZixnPWQoYSxudWxsLGUsW10pLGg9YS5sZW5ndGg7d2hpbGUoaC0tKShmPWdbaF0pJiYoYVtoXT0hKGJbaF09ZikpfSk6ZnVuY3Rpb24oYSxlLGYpe3JldHVybiBiWzBdPWEsZChiLG51bGwsZixjKSxiWzBdPW51bGwsIWMucG9wKCl9fSksaGFzOmlhKGZ1bmN0aW9uKGEpe3JldHVybiBmdW5jdGlvbihiKXtyZXR1cm4gZ2EoYSxiKS5sZW5ndGg+MH19KSxjb250YWluczppYShmdW5jdGlvbihhKXtyZXR1cm4gYT1hLnJlcGxhY2UoXyxhYSksZnVuY3Rpb24oYil7cmV0dXJuKGIudGV4dENvbnRlbnR8fGIuaW5uZXJUZXh0fHxlKGIpKS5pbmRleE9mKGEpPi0xfX0pLGxhbmc6aWEoZnVuY3Rpb24oYSl7cmV0dXJuIFUudGVzdChhfHxcIlwiKXx8Z2EuZXJyb3IoXCJ1bnN1cHBvcnRlZCBsYW5nOiBcIithKSxhPWEucmVwbGFjZShfLGFhKS50b0xvd2VyQ2FzZSgpLGZ1bmN0aW9uKGIpe3ZhciBjO2RvIGlmKGM9cD9iLmxhbmc6Yi5nZXRBdHRyaWJ1dGUoXCJ4bWw6bGFuZ1wiKXx8Yi5nZXRBdHRyaWJ1dGUoXCJsYW5nXCIpKXJldHVybiBjPWMudG9Mb3dlckNhc2UoKSxjPT09YXx8MD09PWMuaW5kZXhPZihhK1wiLVwiKTt3aGlsZSgoYj1iLnBhcmVudE5vZGUpJiYxPT09Yi5ub2RlVHlwZSk7cmV0dXJuITF9fSksdGFyZ2V0OmZ1bmN0aW9uKGIpe3ZhciBjPWEubG9jYXRpb24mJmEubG9jYXRpb24uaGFzaDtyZXR1cm4gYyYmYy5zbGljZSgxKT09PWIuaWR9LHJvb3Q6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9PT1vfSxmb2N1czpmdW5jdGlvbihhKXtyZXR1cm4gYT09PW4uYWN0aXZlRWxlbWVudCYmKCFuLmhhc0ZvY3VzfHxuLmhhc0ZvY3VzKCkpJiYhIShhLnR5cGV8fGEuaHJlZnx8fmEudGFiSW5kZXgpfSxlbmFibGVkOm9hKCExKSxkaXNhYmxlZDpvYSghMCksY2hlY2tlZDpmdW5jdGlvbihhKXt2YXIgYj1hLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09YiYmISFhLmNoZWNrZWR8fFwib3B0aW9uXCI9PT1iJiYhIWEuc2VsZWN0ZWR9LHNlbGVjdGVkOmZ1bmN0aW9uKGEpe3JldHVybiBhLnBhcmVudE5vZGUmJmEucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4LGEuc2VsZWN0ZWQ9PT0hMH0sZW1wdHk6ZnVuY3Rpb24oYSl7Zm9yKGE9YS5maXJzdENoaWxkO2E7YT1hLm5leHRTaWJsaW5nKWlmKGEubm9kZVR5cGU8NilyZXR1cm4hMTtyZXR1cm4hMH0scGFyZW50OmZ1bmN0aW9uKGEpe3JldHVybiFkLnBzZXVkb3MuZW1wdHkoYSl9LGhlYWRlcjpmdW5jdGlvbihhKXtyZXR1cm4gWC50ZXN0KGEubm9kZU5hbWUpfSxpbnB1dDpmdW5jdGlvbihhKXtyZXR1cm4gVy50ZXN0KGEubm9kZU5hbWUpfSxidXR0b246ZnVuY3Rpb24oYSl7dmFyIGI9YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWImJlwiYnV0dG9uXCI9PT1hLnR5cGV8fFwiYnV0dG9uXCI9PT1ifSx0ZXh0OmZ1bmN0aW9uKGEpe3ZhciBiO3JldHVyblwiaW5wdXRcIj09PWEubm9kZU5hbWUudG9Mb3dlckNhc2UoKSYmXCJ0ZXh0XCI9PT1hLnR5cGUmJihudWxsPT0oYj1hLmdldEF0dHJpYnV0ZShcInR5cGVcIikpfHxcInRleHRcIj09PWIudG9Mb3dlckNhc2UoKSl9LGZpcnN0OnBhKGZ1bmN0aW9uKCl7cmV0dXJuWzBdfSksbGFzdDpwYShmdW5jdGlvbihhLGIpe3JldHVybltiLTFdfSksZXE6cGEoZnVuY3Rpb24oYSxiLGMpe3JldHVybltjPDA/YytiOmNdfSksZXZlbjpwYShmdW5jdGlvbihhLGIpe2Zvcih2YXIgYz0wO2M8YjtjKz0yKWEucHVzaChjKTtyZXR1cm4gYX0pLG9kZDpwYShmdW5jdGlvbihhLGIpe2Zvcih2YXIgYz0xO2M8YjtjKz0yKWEucHVzaChjKTtyZXR1cm4gYX0pLGx0OnBhKGZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9YzwwP2MrYjpjOy0tZD49MDspYS5wdXNoKGQpO3JldHVybiBhfSksZ3Q6cGEoZnVuY3Rpb24oYSxiLGMpe2Zvcih2YXIgZD1jPDA/YytiOmM7KytkPGI7KWEucHVzaChkKTtyZXR1cm4gYX0pfX0sZC5wc2V1ZG9zLm50aD1kLnBzZXVkb3MuZXE7Zm9yKGIgaW57cmFkaW86ITAsY2hlY2tib3g6ITAsZmlsZTohMCxwYXNzd29yZDohMCxpbWFnZTohMH0pZC5wc2V1ZG9zW2JdPW1hKGIpO2ZvcihiIGlue3N1Ym1pdDohMCxyZXNldDohMH0pZC5wc2V1ZG9zW2JdPW5hKGIpO2Z1bmN0aW9uIHJhKCl7fXJhLnByb3RvdHlwZT1kLmZpbHRlcnM9ZC5wc2V1ZG9zLGQuc2V0RmlsdGVycz1uZXcgcmEsZz1nYS50b2tlbml6ZT1mdW5jdGlvbihhLGIpe3ZhciBjLGUsZixnLGgsaSxqLGs9elthK1wiIFwiXTtpZihrKXJldHVybiBiPzA6ay5zbGljZSgwKTtoPWEsaT1bXSxqPWQucHJlRmlsdGVyO3doaWxlKGgpe2MmJiEoZT1RLmV4ZWMoaCkpfHwoZSYmKGg9aC5zbGljZShlWzBdLmxlbmd0aCl8fGgpLGkucHVzaChmPVtdKSksYz0hMSwoZT1SLmV4ZWMoaCkpJiYoYz1lLnNoaWZ0KCksZi5wdXNoKHt2YWx1ZTpjLHR5cGU6ZVswXS5yZXBsYWNlKFAsXCIgXCIpfSksaD1oLnNsaWNlKGMubGVuZ3RoKSk7Zm9yKGcgaW4gZC5maWx0ZXIpIShlPVZbZ10uZXhlYyhoKSl8fGpbZ10mJiEoZT1qW2ddKGUpKXx8KGM9ZS5zaGlmdCgpLGYucHVzaCh7dmFsdWU6Yyx0eXBlOmcsbWF0Y2hlczplfSksaD1oLnNsaWNlKGMubGVuZ3RoKSk7aWYoIWMpYnJlYWt9cmV0dXJuIGI/aC5sZW5ndGg6aD9nYS5lcnJvcihhKTp6KGEsaSkuc2xpY2UoMCl9O2Z1bmN0aW9uIHNhKGEpe2Zvcih2YXIgYj0wLGM9YS5sZW5ndGgsZD1cIlwiO2I8YztiKyspZCs9YVtiXS52YWx1ZTtyZXR1cm4gZH1mdW5jdGlvbiB0YShhLGIsYyl7dmFyIGQ9Yi5kaXIsZT1iLm5leHQsZj1lfHxkLGc9YyYmXCJwYXJlbnROb2RlXCI9PT1mLGg9eCsrO3JldHVybiBiLmZpcnN0P2Z1bmN0aW9uKGIsYyxlKXt3aGlsZShiPWJbZF0paWYoMT09PWIubm9kZVR5cGV8fGcpcmV0dXJuIGEoYixjLGUpO3JldHVybiExfTpmdW5jdGlvbihiLGMsaSl7dmFyIGosayxsLG09W3csaF07aWYoaSl7d2hpbGUoYj1iW2RdKWlmKCgxPT09Yi5ub2RlVHlwZXx8ZykmJmEoYixjLGkpKXJldHVybiEwfWVsc2Ugd2hpbGUoYj1iW2RdKWlmKDE9PT1iLm5vZGVUeXBlfHxnKWlmKGw9Ylt1XXx8KGJbdV09e30pLGs9bFtiLnVuaXF1ZUlEXXx8KGxbYi51bmlxdWVJRF09e30pLGUmJmU9PT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkpYj1iW2RdfHxiO2Vsc2V7aWYoKGo9a1tmXSkmJmpbMF09PT13JiZqWzFdPT09aClyZXR1cm4gbVsyXT1qWzJdO2lmKGtbZl09bSxtWzJdPWEoYixjLGkpKXJldHVybiEwfXJldHVybiExfX1mdW5jdGlvbiB1YShhKXtyZXR1cm4gYS5sZW5ndGg+MT9mdW5jdGlvbihiLGMsZCl7dmFyIGU9YS5sZW5ndGg7d2hpbGUoZS0tKWlmKCFhW2VdKGIsYyxkKSlyZXR1cm4hMTtyZXR1cm4hMH06YVswXX1mdW5jdGlvbiB2YShhLGIsYyl7Zm9yKHZhciBkPTAsZT1iLmxlbmd0aDtkPGU7ZCsrKWdhKGEsYltkXSxjKTtyZXR1cm4gY31mdW5jdGlvbiB3YShhLGIsYyxkLGUpe2Zvcih2YXIgZixnPVtdLGg9MCxpPWEubGVuZ3RoLGo9bnVsbCE9YjtoPGk7aCsrKShmPWFbaF0pJiYoYyYmIWMoZixkLGUpfHwoZy5wdXNoKGYpLGomJmIucHVzaChoKSkpO3JldHVybiBnfWZ1bmN0aW9uIHhhKGEsYixjLGQsZSxmKXtyZXR1cm4gZCYmIWRbdV0mJihkPXhhKGQpKSxlJiYhZVt1XSYmKGU9eGEoZSxmKSksaWEoZnVuY3Rpb24oZixnLGgsaSl7dmFyIGosayxsLG09W10sbj1bXSxvPWcubGVuZ3RoLHA9Znx8dmEoYnx8XCIqXCIsaC5ub2RlVHlwZT9baF06aCxbXSkscT0hYXx8IWYmJmI/cDp3YShwLG0sYSxoLGkpLHI9Yz9lfHwoZj9hOm98fGQpP1tdOmc6cTtpZihjJiZjKHEscixoLGkpLGQpe2o9d2EocixuKSxkKGosW10saCxpKSxrPWoubGVuZ3RoO3doaWxlKGstLSkobD1qW2tdKSYmKHJbbltrXV09IShxW25ba11dPWwpKX1pZihmKXtpZihlfHxhKXtpZihlKXtqPVtdLGs9ci5sZW5ndGg7d2hpbGUoay0tKShsPXJba10pJiZqLnB1c2gocVtrXT1sKTtlKG51bGwscj1bXSxqLGkpfWs9ci5sZW5ndGg7d2hpbGUoay0tKShsPXJba10pJiYoaj1lP0koZixsKTptW2tdKT4tMSYmKGZbal09IShnW2pdPWwpKX19ZWxzZSByPXdhKHI9PT1nP3Iuc3BsaWNlKG8sci5sZW5ndGgpOnIpLGU/ZShudWxsLGcscixpKTpHLmFwcGx5KGcscil9KX1mdW5jdGlvbiB5YShhKXtmb3IodmFyIGIsYyxlLGY9YS5sZW5ndGgsZz1kLnJlbGF0aXZlW2FbMF0udHlwZV0saD1nfHxkLnJlbGF0aXZlW1wiIFwiXSxpPWc/MTowLGs9dGEoZnVuY3Rpb24oYSl7cmV0dXJuIGE9PT1ifSxoLCEwKSxsPXRhKGZ1bmN0aW9uKGEpe3JldHVybiBJKGIsYSk+LTF9LGgsITApLG09W2Z1bmN0aW9uKGEsYyxkKXt2YXIgZT0hZyYmKGR8fGMhPT1qKXx8KChiPWMpLm5vZGVUeXBlP2soYSxjLGQpOmwoYSxjLGQpKTtyZXR1cm4gYj1udWxsLGV9XTtpPGY7aSsrKWlmKGM9ZC5yZWxhdGl2ZVthW2ldLnR5cGVdKW09W3RhKHVhKG0pLGMpXTtlbHNle2lmKGM9ZC5maWx0ZXJbYVtpXS50eXBlXS5hcHBseShudWxsLGFbaV0ubWF0Y2hlcyksY1t1XSl7Zm9yKGU9KytpO2U8ZjtlKyspaWYoZC5yZWxhdGl2ZVthW2VdLnR5cGVdKWJyZWFrO3JldHVybiB4YShpPjEmJnVhKG0pLGk+MSYmc2EoYS5zbGljZSgwLGktMSkuY29uY2F0KHt2YWx1ZTpcIiBcIj09PWFbaS0yXS50eXBlP1wiKlwiOlwiXCJ9KSkucmVwbGFjZShQLFwiJDFcIiksYyxpPGUmJnlhKGEuc2xpY2UoaSxlKSksZTxmJiZ5YShhPWEuc2xpY2UoZSkpLGU8ZiYmc2EoYSkpfW0ucHVzaChjKX1yZXR1cm4gdWEobSl9ZnVuY3Rpb24gemEoYSxiKXt2YXIgYz1iLmxlbmd0aD4wLGU9YS5sZW5ndGg+MCxmPWZ1bmN0aW9uKGYsZyxoLGksayl7dmFyIGwsbyxxLHI9MCxzPVwiMFwiLHQ9ZiYmW10sdT1bXSx2PWoseD1mfHxlJiZkLmZpbmQuVEFHKFwiKlwiLGspLHk9dys9bnVsbD09dj8xOk1hdGgucmFuZG9tKCl8fC4xLHo9eC5sZW5ndGg7Zm9yKGsmJihqPWc9PT1ufHxnfHxrKTtzIT09eiYmbnVsbCE9KGw9eFtzXSk7cysrKXtpZihlJiZsKXtvPTAsZ3x8bC5vd25lckRvY3VtZW50PT09bnx8KG0obCksaD0hcCk7d2hpbGUocT1hW28rK10paWYocShsLGd8fG4saCkpe2kucHVzaChsKTticmVha31rJiYodz15KX1jJiYoKGw9IXEmJmwpJiZyLS0sZiYmdC5wdXNoKGwpKX1pZihyKz1zLGMmJnMhPT1yKXtvPTA7d2hpbGUocT1iW28rK10pcSh0LHUsZyxoKTtpZihmKXtpZihyPjApd2hpbGUocy0tKXRbc118fHVbc118fCh1W3NdPUUuY2FsbChpKSk7dT13YSh1KX1HLmFwcGx5KGksdSksayYmIWYmJnUubGVuZ3RoPjAmJnIrYi5sZW5ndGg+MSYmZ2EudW5pcXVlU29ydChpKX1yZXR1cm4gayYmKHc9eSxqPXYpLHR9O3JldHVybiBjP2lhKGYpOmZ9cmV0dXJuIGg9Z2EuY29tcGlsZT1mdW5jdGlvbihhLGIpe3ZhciBjLGQ9W10sZT1bXSxmPUFbYStcIiBcIl07aWYoIWYpe2J8fChiPWcoYSkpLGM9Yi5sZW5ndGg7d2hpbGUoYy0tKWY9eWEoYltjXSksZlt1XT9kLnB1c2goZik6ZS5wdXNoKGYpO2Y9QShhLHphKGUsZCkpLGYuc2VsZWN0b3I9YX1yZXR1cm4gZn0saT1nYS5zZWxlY3Q9ZnVuY3Rpb24oYSxiLGMsZSl7dmFyIGYsaSxqLGssbCxtPVwiZnVuY3Rpb25cIj09dHlwZW9mIGEmJmEsbj0hZSYmZyhhPW0uc2VsZWN0b3J8fGEpO2lmKGM9Y3x8W10sMT09PW4ubGVuZ3RoKXtpZihpPW5bMF09blswXS5zbGljZSgwKSxpLmxlbmd0aD4yJiZcIklEXCI9PT0oaj1pWzBdKS50eXBlJiY5PT09Yi5ub2RlVHlwZSYmcCYmZC5yZWxhdGl2ZVtpWzFdLnR5cGVdKXtpZihiPShkLmZpbmQuSUQoai5tYXRjaGVzWzBdLnJlcGxhY2UoXyxhYSksYil8fFtdKVswXSwhYilyZXR1cm4gYzttJiYoYj1iLnBhcmVudE5vZGUpLGE9YS5zbGljZShpLnNoaWZ0KCkudmFsdWUubGVuZ3RoKX1mPVYubmVlZHNDb250ZXh0LnRlc3QoYSk/MDppLmxlbmd0aDt3aGlsZShmLS0pe2lmKGo9aVtmXSxkLnJlbGF0aXZlW2s9ai50eXBlXSlicmVhaztpZigobD1kLmZpbmRba10pJiYoZT1sKGoubWF0Y2hlc1swXS5yZXBsYWNlKF8sYWEpLCQudGVzdChpWzBdLnR5cGUpJiZxYShiLnBhcmVudE5vZGUpfHxiKSkpe2lmKGkuc3BsaWNlKGYsMSksYT1lLmxlbmd0aCYmc2EoaSksIWEpcmV0dXJuIEcuYXBwbHkoYyxlKSxjO2JyZWFrfX19cmV0dXJuKG18fGgoYSxuKSkoZSxiLCFwLGMsIWJ8fCQudGVzdChhKSYmcWEoYi5wYXJlbnROb2RlKXx8YiksY30sYy5zb3J0U3RhYmxlPXUuc3BsaXQoXCJcIikuc29ydChCKS5qb2luKFwiXCIpPT09dSxjLmRldGVjdER1cGxpY2F0ZXM9ISFsLG0oKSxjLnNvcnREZXRhY2hlZD1qYShmdW5jdGlvbihhKXtyZXR1cm4gMSZhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKG4uY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpKX0pLGphKGZ1bmN0aW9uKGEpe3JldHVybiBhLmlubmVySFRNTD1cIjxhIGhyZWY9JyMnPjwvYT5cIixcIiNcIj09PWEuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpfSl8fGthKFwidHlwZXxocmVmfGhlaWdodHx3aWR0aFwiLGZ1bmN0aW9uKGEsYixjKXtpZighYylyZXR1cm4gYS5nZXRBdHRyaWJ1dGUoYixcInR5cGVcIj09PWIudG9Mb3dlckNhc2UoKT8xOjIpfSksYy5hdHRyaWJ1dGVzJiZqYShmdW5jdGlvbihhKXtyZXR1cm4gYS5pbm5lckhUTUw9XCI8aW5wdXQvPlwiLGEuZmlyc3RDaGlsZC5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIpLFwiXCI9PT1hLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKFwidmFsdWVcIil9KXx8a2EoXCJ2YWx1ZVwiLGZ1bmN0aW9uKGEsYixjKXtpZighYyYmXCJpbnB1dFwiPT09YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpKXJldHVybiBhLmRlZmF1bHRWYWx1ZX0pLGphKGZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT1hLmdldEF0dHJpYnV0ZShcImRpc2FibGVkXCIpfSl8fGthKEosZnVuY3Rpb24oYSxiLGMpe3ZhciBkO2lmKCFjKXJldHVybiBhW2JdPT09ITA/Yi50b0xvd2VyQ2FzZSgpOihkPWEuZ2V0QXR0cmlidXRlTm9kZShiKSkmJmQuc3BlY2lmaWVkP2QudmFsdWU6bnVsbH0pLGdhfShhKTtyLmZpbmQ9eCxyLmV4cHI9eC5zZWxlY3RvcnMsci5leHByW1wiOlwiXT1yLmV4cHIucHNldWRvcyxyLnVuaXF1ZVNvcnQ9ci51bmlxdWU9eC51bmlxdWVTb3J0LHIudGV4dD14LmdldFRleHQsci5pc1hNTERvYz14LmlzWE1MLHIuY29udGFpbnM9eC5jb250YWlucyxyLmVzY2FwZVNlbGVjdG9yPXguZXNjYXBlO3ZhciB5PWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1bXSxlPXZvaWQgMCE9PWM7d2hpbGUoKGE9YVtiXSkmJjkhPT1hLm5vZGVUeXBlKWlmKDE9PT1hLm5vZGVUeXBlKXtpZihlJiZyKGEpLmlzKGMpKWJyZWFrO2QucHVzaChhKX1yZXR1cm4gZH0sej1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1bXTthO2E9YS5uZXh0U2libGluZykxPT09YS5ub2RlVHlwZSYmYSE9PWImJmMucHVzaChhKTtyZXR1cm4gY30sQT1yLmV4cHIubWF0Y2gubmVlZHNDb250ZXh0O2Z1bmN0aW9uIEIoYSxiKXtyZXR1cm4gYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09Yi50b0xvd2VyQ2FzZSgpfXZhciBDPS9ePChbYS16XVteXFwvXFwwPjpcXHgyMFxcdFxcclxcblxcZl0qKVtcXHgyMFxcdFxcclxcblxcZl0qXFwvPz4oPzo8XFwvXFwxPnwpJC9pLEQ9L14uW146I1xcW1xcLixdKiQvO2Z1bmN0aW9uIEUoYSxiLGMpe3JldHVybiByLmlzRnVuY3Rpb24oYik/ci5ncmVwKGEsZnVuY3Rpb24oYSxkKXtyZXR1cm4hIWIuY2FsbChhLGQsYSkhPT1jfSk6Yi5ub2RlVHlwZT9yLmdyZXAoYSxmdW5jdGlvbihhKXtyZXR1cm4gYT09PWIhPT1jfSk6XCJzdHJpbmdcIiE9dHlwZW9mIGI/ci5ncmVwKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGkuY2FsbChiLGEpPi0xIT09Y30pOkQudGVzdChiKT9yLmZpbHRlcihiLGEsYyk6KGI9ci5maWx0ZXIoYixhKSxyLmdyZXAoYSxmdW5jdGlvbihhKXtyZXR1cm4gaS5jYWxsKGIsYSk+LTEhPT1jJiYxPT09YS5ub2RlVHlwZX0pKX1yLmZpbHRlcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9YlswXTtyZXR1cm4gYyYmKGE9XCI6bm90KFwiK2ErXCIpXCIpLDE9PT1iLmxlbmd0aCYmMT09PWQubm9kZVR5cGU/ci5maW5kLm1hdGNoZXNTZWxlY3RvcihkLGEpP1tkXTpbXTpyLmZpbmQubWF0Y2hlcyhhLHIuZ3JlcChiLGZ1bmN0aW9uKGEpe3JldHVybiAxPT09YS5ub2RlVHlwZX0pKX0sci5mbi5leHRlbmQoe2ZpbmQ6ZnVuY3Rpb24oYSl7dmFyIGIsYyxkPXRoaXMubGVuZ3RoLGU9dGhpcztpZihcInN0cmluZ1wiIT10eXBlb2YgYSlyZXR1cm4gdGhpcy5wdXNoU3RhY2socihhKS5maWx0ZXIoZnVuY3Rpb24oKXtmb3IoYj0wO2I8ZDtiKyspaWYoci5jb250YWlucyhlW2JdLHRoaXMpKXJldHVybiEwfSkpO2ZvcihjPXRoaXMucHVzaFN0YWNrKFtdKSxiPTA7YjxkO2IrKylyLmZpbmQoYSxlW2JdLGMpO3JldHVybiBkPjE/ci51bmlxdWVTb3J0KGMpOmN9LGZpbHRlcjpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soRSh0aGlzLGF8fFtdLCExKSl9LG5vdDpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soRSh0aGlzLGF8fFtdLCEwKSl9LGlzOmZ1bmN0aW9uKGEpe3JldHVybiEhRSh0aGlzLFwic3RyaW5nXCI9PXR5cGVvZiBhJiZBLnRlc3QoYSk/cihhKTphfHxbXSwhMSkubGVuZ3RofX0pO3ZhciBGLEc9L14oPzpcXHMqKDxbXFx3XFxXXSs+KVtePl0qfCMoW1xcdy1dKykpJC8sSD1yLmZuLmluaXQ9ZnVuY3Rpb24oYSxiLGMpe3ZhciBlLGY7aWYoIWEpcmV0dXJuIHRoaXM7aWYoYz1jfHxGLFwic3RyaW5nXCI9PXR5cGVvZiBhKXtpZihlPVwiPFwiPT09YVswXSYmXCI+XCI9PT1hW2EubGVuZ3RoLTFdJiZhLmxlbmd0aD49Mz9bbnVsbCxhLG51bGxdOkcuZXhlYyhhKSwhZXx8IWVbMV0mJmIpcmV0dXJuIWJ8fGIuanF1ZXJ5PyhifHxjKS5maW5kKGEpOnRoaXMuY29uc3RydWN0b3IoYikuZmluZChhKTtpZihlWzFdKXtpZihiPWIgaW5zdGFuY2VvZiByP2JbMF06YixyLm1lcmdlKHRoaXMsci5wYXJzZUhUTUwoZVsxXSxiJiZiLm5vZGVUeXBlP2Iub3duZXJEb2N1bWVudHx8YjpkLCEwKSksQy50ZXN0KGVbMV0pJiZyLmlzUGxhaW5PYmplY3QoYikpZm9yKGUgaW4gYilyLmlzRnVuY3Rpb24odGhpc1tlXSk/dGhpc1tlXShiW2VdKTp0aGlzLmF0dHIoZSxiW2VdKTtyZXR1cm4gdGhpc31yZXR1cm4gZj1kLmdldEVsZW1lbnRCeUlkKGVbMl0pLGYmJih0aGlzWzBdPWYsdGhpcy5sZW5ndGg9MSksdGhpc31yZXR1cm4gYS5ub2RlVHlwZT8odGhpc1swXT1hLHRoaXMubGVuZ3RoPTEsdGhpcyk6ci5pc0Z1bmN0aW9uKGEpP3ZvaWQgMCE9PWMucmVhZHk/Yy5yZWFkeShhKTphKHIpOnIubWFrZUFycmF5KGEsdGhpcyl9O0gucHJvdG90eXBlPXIuZm4sRj1yKGQpO3ZhciBJPS9eKD86cGFyZW50c3xwcmV2KD86VW50aWx8QWxsKSkvLEo9e2NoaWxkcmVuOiEwLGNvbnRlbnRzOiEwLG5leHQ6ITAscHJldjohMH07ci5mbi5leHRlbmQoe2hhczpmdW5jdGlvbihhKXt2YXIgYj1yKGEsdGhpcyksYz1iLmxlbmd0aDtyZXR1cm4gdGhpcy5maWx0ZXIoZnVuY3Rpb24oKXtmb3IodmFyIGE9MDthPGM7YSsrKWlmKHIuY29udGFpbnModGhpcyxiW2FdKSlyZXR1cm4hMH0pfSxjbG9zZXN0OmZ1bmN0aW9uKGEsYil7dmFyIGMsZD0wLGU9dGhpcy5sZW5ndGgsZj1bXSxnPVwic3RyaW5nXCIhPXR5cGVvZiBhJiZyKGEpO2lmKCFBLnRlc3QoYSkpZm9yKDtkPGU7ZCsrKWZvcihjPXRoaXNbZF07YyYmYyE9PWI7Yz1jLnBhcmVudE5vZGUpaWYoYy5ub2RlVHlwZTwxMSYmKGc/Zy5pbmRleChjKT4tMToxPT09Yy5ub2RlVHlwZSYmci5maW5kLm1hdGNoZXNTZWxlY3RvcihjLGEpKSl7Zi5wdXNoKGMpO2JyZWFrfXJldHVybiB0aGlzLnB1c2hTdGFjayhmLmxlbmd0aD4xP3IudW5pcXVlU29ydChmKTpmKX0saW5kZXg6ZnVuY3Rpb24oYSl7cmV0dXJuIGE/XCJzdHJpbmdcIj09dHlwZW9mIGE/aS5jYWxsKHIoYSksdGhpc1swXSk6aS5jYWxsKHRoaXMsYS5qcXVlcnk/YVswXTphKTp0aGlzWzBdJiZ0aGlzWzBdLnBhcmVudE5vZGU/dGhpcy5maXJzdCgpLnByZXZBbGwoKS5sZW5ndGg6LTF9LGFkZDpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLnB1c2hTdGFjayhyLnVuaXF1ZVNvcnQoci5tZXJnZSh0aGlzLmdldCgpLHIoYSxiKSkpKX0sYWRkQmFjazpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5hZGQobnVsbD09YT90aGlzLnByZXZPYmplY3Q6dGhpcy5wcmV2T2JqZWN0LmZpbHRlcihhKSl9fSk7ZnVuY3Rpb24gSyhhLGIpe3doaWxlKChhPWFbYl0pJiYxIT09YS5ub2RlVHlwZSk7cmV0dXJuIGF9ci5lYWNoKHtwYXJlbnQ6ZnVuY3Rpb24oYSl7dmFyIGI9YS5wYXJlbnROb2RlO3JldHVybiBiJiYxMSE9PWIubm9kZVR5cGU/YjpudWxsfSxwYXJlbnRzOmZ1bmN0aW9uKGEpe3JldHVybiB5KGEsXCJwYXJlbnROb2RlXCIpfSxwYXJlbnRzVW50aWw6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiB5KGEsXCJwYXJlbnROb2RlXCIsYyl9LG5leHQ6ZnVuY3Rpb24oYSl7cmV0dXJuIEsoYSxcIm5leHRTaWJsaW5nXCIpfSxwcmV2OmZ1bmN0aW9uKGEpe3JldHVybiBLKGEsXCJwcmV2aW91c1NpYmxpbmdcIil9LG5leHRBbGw6ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSxcIm5leHRTaWJsaW5nXCIpfSxwcmV2QWxsOmZ1bmN0aW9uKGEpe3JldHVybiB5KGEsXCJwcmV2aW91c1NpYmxpbmdcIil9LG5leHRVbnRpbDpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIHkoYSxcIm5leHRTaWJsaW5nXCIsYyl9LHByZXZVbnRpbDpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIHkoYSxcInByZXZpb3VzU2libGluZ1wiLGMpfSxzaWJsaW5nczpmdW5jdGlvbihhKXtyZXR1cm4geigoYS5wYXJlbnROb2RlfHx7fSkuZmlyc3RDaGlsZCxhKX0sY2hpbGRyZW46ZnVuY3Rpb24oYSl7cmV0dXJuIHooYS5maXJzdENoaWxkKX0sY29udGVudHM6ZnVuY3Rpb24oYSl7cmV0dXJuIEIoYSxcImlmcmFtZVwiKT9hLmNvbnRlbnREb2N1bWVudDooQihhLFwidGVtcGxhdGVcIikmJihhPWEuY29udGVudHx8YSksci5tZXJnZShbXSxhLmNoaWxkTm9kZXMpKX19LGZ1bmN0aW9uKGEsYil7ci5mblthXT1mdW5jdGlvbihjLGQpe3ZhciBlPXIubWFwKHRoaXMsYixjKTtyZXR1cm5cIlVudGlsXCIhPT1hLnNsaWNlKC01KSYmKGQ9YyksZCYmXCJzdHJpbmdcIj09dHlwZW9mIGQmJihlPXIuZmlsdGVyKGQsZSkpLHRoaXMubGVuZ3RoPjEmJihKW2FdfHxyLnVuaXF1ZVNvcnQoZSksSS50ZXN0KGEpJiZlLnJldmVyc2UoKSksdGhpcy5wdXNoU3RhY2soZSl9fSk7dmFyIEw9L1teXFx4MjBcXHRcXHJcXG5cXGZdKy9nO2Z1bmN0aW9uIE0oYSl7dmFyIGI9e307cmV0dXJuIHIuZWFjaChhLm1hdGNoKEwpfHxbXSxmdW5jdGlvbihhLGMpe2JbY109ITB9KSxifXIuQ2FsbGJhY2tzPWZ1bmN0aW9uKGEpe2E9XCJzdHJpbmdcIj09dHlwZW9mIGE/TShhKTpyLmV4dGVuZCh7fSxhKTt2YXIgYixjLGQsZSxmPVtdLGc9W10saD0tMSxpPWZ1bmN0aW9uKCl7Zm9yKGU9ZXx8YS5vbmNlLGQ9Yj0hMDtnLmxlbmd0aDtoPS0xKXtjPWcuc2hpZnQoKTt3aGlsZSgrK2g8Zi5sZW5ndGgpZltoXS5hcHBseShjWzBdLGNbMV0pPT09ITEmJmEuc3RvcE9uRmFsc2UmJihoPWYubGVuZ3RoLGM9ITEpfWEubWVtb3J5fHwoYz0hMSksYj0hMSxlJiYoZj1jP1tdOlwiXCIpfSxqPXthZGQ6ZnVuY3Rpb24oKXtyZXR1cm4gZiYmKGMmJiFiJiYoaD1mLmxlbmd0aC0xLGcucHVzaChjKSksZnVuY3Rpb24gZChiKXtyLmVhY2goYixmdW5jdGlvbihiLGMpe3IuaXNGdW5jdGlvbihjKT9hLnVuaXF1ZSYmai5oYXMoYyl8fGYucHVzaChjKTpjJiZjLmxlbmd0aCYmXCJzdHJpbmdcIiE9PXIudHlwZShjKSYmZChjKX0pfShhcmd1bWVudHMpLGMmJiFiJiZpKCkpLHRoaXN9LHJlbW92ZTpmdW5jdGlvbigpe3JldHVybiByLmVhY2goYXJndW1lbnRzLGZ1bmN0aW9uKGEsYil7dmFyIGM7d2hpbGUoKGM9ci5pbkFycmF5KGIsZixjKSk+LTEpZi5zcGxpY2UoYywxKSxjPD1oJiZoLS19KSx0aGlzfSxoYXM6ZnVuY3Rpb24oYSl7cmV0dXJuIGE/ci5pbkFycmF5KGEsZik+LTE6Zi5sZW5ndGg+MH0sZW1wdHk6ZnVuY3Rpb24oKXtyZXR1cm4gZiYmKGY9W10pLHRoaXN9LGRpc2FibGU6ZnVuY3Rpb24oKXtyZXR1cm4gZT1nPVtdLGY9Yz1cIlwiLHRoaXN9LGRpc2FibGVkOmZ1bmN0aW9uKCl7cmV0dXJuIWZ9LGxvY2s6ZnVuY3Rpb24oKXtyZXR1cm4gZT1nPVtdLGN8fGJ8fChmPWM9XCJcIiksdGhpc30sbG9ja2VkOmZ1bmN0aW9uKCl7cmV0dXJuISFlfSxmaXJlV2l0aDpmdW5jdGlvbihhLGMpe3JldHVybiBlfHwoYz1jfHxbXSxjPVthLGMuc2xpY2U/Yy5zbGljZSgpOmNdLGcucHVzaChjKSxifHxpKCkpLHRoaXN9LGZpcmU6ZnVuY3Rpb24oKXtyZXR1cm4gai5maXJlV2l0aCh0aGlzLGFyZ3VtZW50cyksdGhpc30sZmlyZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hIWR9fTtyZXR1cm4gan07ZnVuY3Rpb24gTihhKXtyZXR1cm4gYX1mdW5jdGlvbiBPKGEpe3Rocm93IGF9ZnVuY3Rpb24gUChhLGIsYyxkKXt2YXIgZTt0cnl7YSYmci5pc0Z1bmN0aW9uKGU9YS5wcm9taXNlKT9lLmNhbGwoYSkuZG9uZShiKS5mYWlsKGMpOmEmJnIuaXNGdW5jdGlvbihlPWEudGhlbik/ZS5jYWxsKGEsYixjKTpiLmFwcGx5KHZvaWQgMCxbYV0uc2xpY2UoZCkpfWNhdGNoKGEpe2MuYXBwbHkodm9pZCAwLFthXSl9fXIuZXh0ZW5kKHtEZWZlcnJlZDpmdW5jdGlvbihiKXt2YXIgYz1bW1wibm90aWZ5XCIsXCJwcm9ncmVzc1wiLHIuQ2FsbGJhY2tzKFwibWVtb3J5XCIpLHIuQ2FsbGJhY2tzKFwibWVtb3J5XCIpLDJdLFtcInJlc29sdmVcIixcImRvbmVcIixyLkNhbGxiYWNrcyhcIm9uY2UgbWVtb3J5XCIpLHIuQ2FsbGJhY2tzKFwib25jZSBtZW1vcnlcIiksMCxcInJlc29sdmVkXCJdLFtcInJlamVjdFwiLFwiZmFpbFwiLHIuQ2FsbGJhY2tzKFwib25jZSBtZW1vcnlcIiksci5DYWxsYmFja3MoXCJvbmNlIG1lbW9yeVwiKSwxLFwicmVqZWN0ZWRcIl1dLGQ9XCJwZW5kaW5nXCIsZT17c3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sYWx3YXlzOmZ1bmN0aW9uKCl7cmV0dXJuIGYuZG9uZShhcmd1bWVudHMpLmZhaWwoYXJndW1lbnRzKSx0aGlzfSxcImNhdGNoXCI6ZnVuY3Rpb24oYSl7cmV0dXJuIGUudGhlbihudWxsLGEpfSxwaXBlOmZ1bmN0aW9uKCl7dmFyIGE9YXJndW1lbnRzO3JldHVybiByLkRlZmVycmVkKGZ1bmN0aW9uKGIpe3IuZWFjaChjLGZ1bmN0aW9uKGMsZCl7dmFyIGU9ci5pc0Z1bmN0aW9uKGFbZFs0XV0pJiZhW2RbNF1dO2ZbZFsxXV0oZnVuY3Rpb24oKXt2YXIgYT1lJiZlLmFwcGx5KHRoaXMsYXJndW1lbnRzKTthJiZyLmlzRnVuY3Rpb24oYS5wcm9taXNlKT9hLnByb21pc2UoKS5wcm9ncmVzcyhiLm5vdGlmeSkuZG9uZShiLnJlc29sdmUpLmZhaWwoYi5yZWplY3QpOmJbZFswXStcIldpdGhcIl0odGhpcyxlP1thXTphcmd1bWVudHMpfSl9KSxhPW51bGx9KS5wcm9taXNlKCl9LHRoZW46ZnVuY3Rpb24oYixkLGUpe3ZhciBmPTA7ZnVuY3Rpb24gZyhiLGMsZCxlKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgaD10aGlzLGk9YXJndW1lbnRzLGo9ZnVuY3Rpb24oKXt2YXIgYSxqO2lmKCEoYjxmKSl7aWYoYT1kLmFwcGx5KGgsaSksYT09PWMucHJvbWlzZSgpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGVuYWJsZSBzZWxmLXJlc29sdXRpb25cIik7aj1hJiYoXCJvYmplY3RcIj09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09dHlwZW9mIGEpJiZhLnRoZW4sci5pc0Z1bmN0aW9uKGopP2U/ai5jYWxsKGEsZyhmLGMsTixlKSxnKGYsYyxPLGUpKTooZisrLGouY2FsbChhLGcoZixjLE4sZSksZyhmLGMsTyxlKSxnKGYsYyxOLGMubm90aWZ5V2l0aCkpKTooZCE9PU4mJihoPXZvaWQgMCxpPVthXSksKGV8fGMucmVzb2x2ZVdpdGgpKGgsaSkpfX0saz1lP2o6ZnVuY3Rpb24oKXt0cnl7aigpfWNhdGNoKGEpe3IuRGVmZXJyZWQuZXhjZXB0aW9uSG9vayYmci5EZWZlcnJlZC5leGNlcHRpb25Ib29rKGEsay5zdGFja1RyYWNlKSxiKzE+PWYmJihkIT09TyYmKGg9dm9pZCAwLGk9W2FdKSxjLnJlamVjdFdpdGgoaCxpKSl9fTtiP2soKTooci5EZWZlcnJlZC5nZXRTdGFja0hvb2smJihrLnN0YWNrVHJhY2U9ci5EZWZlcnJlZC5nZXRTdGFja0hvb2soKSksYS5zZXRUaW1lb3V0KGspKX19cmV0dXJuIHIuRGVmZXJyZWQoZnVuY3Rpb24oYSl7Y1swXVszXS5hZGQoZygwLGEsci5pc0Z1bmN0aW9uKGUpP2U6TixhLm5vdGlmeVdpdGgpKSxjWzFdWzNdLmFkZChnKDAsYSxyLmlzRnVuY3Rpb24oYik/YjpOKSksY1syXVszXS5hZGQoZygwLGEsci5pc0Z1bmN0aW9uKGQpP2Q6TykpfSkucHJvbWlzZSgpfSxwcm9taXNlOmZ1bmN0aW9uKGEpe3JldHVybiBudWxsIT1hP3IuZXh0ZW5kKGEsZSk6ZX19LGY9e307cmV0dXJuIHIuZWFjaChjLGZ1bmN0aW9uKGEsYil7dmFyIGc9YlsyXSxoPWJbNV07ZVtiWzFdXT1nLmFkZCxoJiZnLmFkZChmdW5jdGlvbigpe2Q9aH0sY1szLWFdWzJdLmRpc2FibGUsY1swXVsyXS5sb2NrKSxnLmFkZChiWzNdLmZpcmUpLGZbYlswXV09ZnVuY3Rpb24oKXtyZXR1cm4gZltiWzBdK1wiV2l0aFwiXSh0aGlzPT09Zj92b2lkIDA6dGhpcyxhcmd1bWVudHMpLHRoaXN9LGZbYlswXStcIldpdGhcIl09Zy5maXJlV2l0aH0pLGUucHJvbWlzZShmKSxiJiZiLmNhbGwoZixmKSxmfSx3aGVuOmZ1bmN0aW9uKGEpe3ZhciBiPWFyZ3VtZW50cy5sZW5ndGgsYz1iLGQ9QXJyYXkoYyksZT1mLmNhbGwoYXJndW1lbnRzKSxnPXIuRGVmZXJyZWQoKSxoPWZ1bmN0aW9uKGEpe3JldHVybiBmdW5jdGlvbihjKXtkW2FdPXRoaXMsZVthXT1hcmd1bWVudHMubGVuZ3RoPjE/Zi5jYWxsKGFyZ3VtZW50cyk6YywtLWJ8fGcucmVzb2x2ZVdpdGgoZCxlKX19O2lmKGI8PTEmJihQKGEsZy5kb25lKGgoYykpLnJlc29sdmUsZy5yZWplY3QsIWIpLFwicGVuZGluZ1wiPT09Zy5zdGF0ZSgpfHxyLmlzRnVuY3Rpb24oZVtjXSYmZVtjXS50aGVuKSkpcmV0dXJuIGcudGhlbigpO3doaWxlKGMtLSlQKGVbY10saChjKSxnLnJlamVjdCk7cmV0dXJuIGcucHJvbWlzZSgpfX0pO3ZhciBRPS9eKEV2YWx8SW50ZXJuYWx8UmFuZ2V8UmVmZXJlbmNlfFN5bnRheHxUeXBlfFVSSSlFcnJvciQvO3IuRGVmZXJyZWQuZXhjZXB0aW9uSG9vaz1mdW5jdGlvbihiLGMpe2EuY29uc29sZSYmYS5jb25zb2xlLndhcm4mJmImJlEudGVzdChiLm5hbWUpJiZhLmNvbnNvbGUud2FybihcImpRdWVyeS5EZWZlcnJlZCBleGNlcHRpb246IFwiK2IubWVzc2FnZSxiLnN0YWNrLGMpfSxyLnJlYWR5RXhjZXB0aW9uPWZ1bmN0aW9uKGIpe2Euc2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGJ9KX07dmFyIFI9ci5EZWZlcnJlZCgpO3IuZm4ucmVhZHk9ZnVuY3Rpb24oYSl7cmV0dXJuIFIudGhlbihhKVtcImNhdGNoXCJdKGZ1bmN0aW9uKGEpe3IucmVhZHlFeGNlcHRpb24oYSl9KSx0aGlzfSxyLmV4dGVuZCh7aXNSZWFkeTohMSxyZWFkeVdhaXQ6MSxyZWFkeTpmdW5jdGlvbihhKXsoYT09PSEwPy0tci5yZWFkeVdhaXQ6ci5pc1JlYWR5KXx8KHIuaXNSZWFkeT0hMCxhIT09ITAmJi0tci5yZWFkeVdhaXQ+MHx8Ui5yZXNvbHZlV2l0aChkLFtyXSkpfX0pLHIucmVhZHkudGhlbj1SLnRoZW47ZnVuY3Rpb24gUygpe2QucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIixTKSxcbmEucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImxvYWRcIixTKSxyLnJlYWR5KCl9XCJjb21wbGV0ZVwiPT09ZC5yZWFkeVN0YXRlfHxcImxvYWRpbmdcIiE9PWQucmVhZHlTdGF0ZSYmIWQuZG9jdW1lbnRFbGVtZW50LmRvU2Nyb2xsP2Euc2V0VGltZW91dChyLnJlYWR5KTooZC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLFMpLGEuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixTKSk7dmFyIFQ9ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyl7dmFyIGg9MCxpPWEubGVuZ3RoLGo9bnVsbD09YztpZihcIm9iamVjdFwiPT09ci50eXBlKGMpKXtlPSEwO2ZvcihoIGluIGMpVChhLGIsaCxjW2hdLCEwLGYsZyl9ZWxzZSBpZih2b2lkIDAhPT1kJiYoZT0hMCxyLmlzRnVuY3Rpb24oZCl8fChnPSEwKSxqJiYoZz8oYi5jYWxsKGEsZCksYj1udWxsKTooaj1iLGI9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBqLmNhbGwocihhKSxjKX0pKSxiKSlmb3IoO2g8aTtoKyspYihhW2hdLGMsZz9kOmQuY2FsbChhW2hdLGgsYihhW2hdLGMpKSk7cmV0dXJuIGU/YTpqP2IuY2FsbChhKTppP2IoYVswXSxjKTpmfSxVPWZ1bmN0aW9uKGEpe3JldHVybiAxPT09YS5ub2RlVHlwZXx8OT09PWEubm9kZVR5cGV8fCErYS5ub2RlVHlwZX07ZnVuY3Rpb24gVigpe3RoaXMuZXhwYW5kbz1yLmV4cGFuZG8rVi51aWQrK31WLnVpZD0xLFYucHJvdG90eXBlPXtjYWNoZTpmdW5jdGlvbihhKXt2YXIgYj1hW3RoaXMuZXhwYW5kb107cmV0dXJuIGJ8fChiPXt9LFUoYSkmJihhLm5vZGVUeXBlP2FbdGhpcy5leHBhbmRvXT1iOk9iamVjdC5kZWZpbmVQcm9wZXJ0eShhLHRoaXMuZXhwYW5kbyx7dmFsdWU6Yixjb25maWd1cmFibGU6ITB9KSkpLGJ9LHNldDpmdW5jdGlvbihhLGIsYyl7dmFyIGQsZT10aGlzLmNhY2hlKGEpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBiKWVbci5jYW1lbENhc2UoYildPWM7ZWxzZSBmb3IoZCBpbiBiKWVbci5jYW1lbENhc2UoZCldPWJbZF07cmV0dXJuIGV9LGdldDpmdW5jdGlvbihhLGIpe3JldHVybiB2b2lkIDA9PT1iP3RoaXMuY2FjaGUoYSk6YVt0aGlzLmV4cGFuZG9dJiZhW3RoaXMuZXhwYW5kb11bci5jYW1lbENhc2UoYildfSxhY2Nlc3M6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiB2b2lkIDA9PT1ifHxiJiZcInN0cmluZ1wiPT10eXBlb2YgYiYmdm9pZCAwPT09Yz90aGlzLmdldChhLGIpOih0aGlzLnNldChhLGIsYyksdm9pZCAwIT09Yz9jOmIpfSxyZW1vdmU6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPWFbdGhpcy5leHBhbmRvXTtpZih2b2lkIDAhPT1kKXtpZih2b2lkIDAhPT1iKXtBcnJheS5pc0FycmF5KGIpP2I9Yi5tYXAoci5jYW1lbENhc2UpOihiPXIuY2FtZWxDYXNlKGIpLGI9YiBpbiBkP1tiXTpiLm1hdGNoKEwpfHxbXSksYz1iLmxlbmd0aDt3aGlsZShjLS0pZGVsZXRlIGRbYltjXV19KHZvaWQgMD09PWJ8fHIuaXNFbXB0eU9iamVjdChkKSkmJihhLm5vZGVUeXBlP2FbdGhpcy5leHBhbmRvXT12b2lkIDA6ZGVsZXRlIGFbdGhpcy5leHBhbmRvXSl9fSxoYXNEYXRhOmZ1bmN0aW9uKGEpe3ZhciBiPWFbdGhpcy5leHBhbmRvXTtyZXR1cm4gdm9pZCAwIT09YiYmIXIuaXNFbXB0eU9iamVjdChiKX19O3ZhciBXPW5ldyBWLFg9bmV3IFYsWT0vXig/Olxce1tcXHdcXFddKlxcfXxcXFtbXFx3XFxXXSpcXF0pJC8sWj0vW0EtWl0vZztmdW5jdGlvbiAkKGEpe3JldHVyblwidHJ1ZVwiPT09YXx8XCJmYWxzZVwiIT09YSYmKFwibnVsbFwiPT09YT9udWxsOmE9PT0rYStcIlwiPythOlkudGVzdChhKT9KU09OLnBhcnNlKGEpOmEpfWZ1bmN0aW9uIF8oYSxiLGMpe3ZhciBkO2lmKHZvaWQgMD09PWMmJjE9PT1hLm5vZGVUeXBlKWlmKGQ9XCJkYXRhLVwiK2IucmVwbGFjZShaLFwiLSQmXCIpLnRvTG93ZXJDYXNlKCksYz1hLmdldEF0dHJpYnV0ZShkKSxcInN0cmluZ1wiPT10eXBlb2YgYyl7dHJ5e2M9JChjKX1jYXRjaChlKXt9WC5zZXQoYSxiLGMpfWVsc2UgYz12b2lkIDA7cmV0dXJuIGN9ci5leHRlbmQoe2hhc0RhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuIFguaGFzRGF0YShhKXx8Vy5oYXNEYXRhKGEpfSxkYXRhOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWC5hY2Nlc3MoYSxiLGMpfSxyZW1vdmVEYXRhOmZ1bmN0aW9uKGEsYil7WC5yZW1vdmUoYSxiKX0sX2RhdGE6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBXLmFjY2VzcyhhLGIsYyl9LF9yZW1vdmVEYXRhOmZ1bmN0aW9uKGEsYil7Vy5yZW1vdmUoYSxiKX19KSxyLmZuLmV4dGVuZCh7ZGF0YTpmdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmPXRoaXNbMF0sZz1mJiZmLmF0dHJpYnV0ZXM7aWYodm9pZCAwPT09YSl7aWYodGhpcy5sZW5ndGgmJihlPVguZ2V0KGYpLDE9PT1mLm5vZGVUeXBlJiYhVy5nZXQoZixcImhhc0RhdGFBdHRyc1wiKSkpe2M9Zy5sZW5ndGg7d2hpbGUoYy0tKWdbY10mJihkPWdbY10ubmFtZSwwPT09ZC5pbmRleE9mKFwiZGF0YS1cIikmJihkPXIuY2FtZWxDYXNlKGQuc2xpY2UoNSkpLF8oZixkLGVbZF0pKSk7Vy5zZXQoZixcImhhc0RhdGFBdHRyc1wiLCEwKX1yZXR1cm4gZX1yZXR1cm5cIm9iamVjdFwiPT10eXBlb2YgYT90aGlzLmVhY2goZnVuY3Rpb24oKXtYLnNldCh0aGlzLGEpfSk6VCh0aGlzLGZ1bmN0aW9uKGIpe3ZhciBjO2lmKGYmJnZvaWQgMD09PWIpe2lmKGM9WC5nZXQoZixhKSx2b2lkIDAhPT1jKXJldHVybiBjO2lmKGM9XyhmLGEpLHZvaWQgMCE9PWMpcmV0dXJuIGN9ZWxzZSB0aGlzLmVhY2goZnVuY3Rpb24oKXtYLnNldCh0aGlzLGEsYil9KX0sbnVsbCxiLGFyZ3VtZW50cy5sZW5ndGg+MSxudWxsLCEwKX0scmVtb3ZlRGF0YTpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7WC5yZW1vdmUodGhpcyxhKX0pfX0pLHIuZXh0ZW5kKHtxdWV1ZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ7aWYoYSlyZXR1cm4gYj0oYnx8XCJmeFwiKStcInF1ZXVlXCIsZD1XLmdldChhLGIpLGMmJighZHx8QXJyYXkuaXNBcnJheShjKT9kPVcuYWNjZXNzKGEsYixyLm1ha2VBcnJheShjKSk6ZC5wdXNoKGMpKSxkfHxbXX0sZGVxdWV1ZTpmdW5jdGlvbihhLGIpe2I9Ynx8XCJmeFwiO3ZhciBjPXIucXVldWUoYSxiKSxkPWMubGVuZ3RoLGU9Yy5zaGlmdCgpLGY9ci5fcXVldWVIb29rcyhhLGIpLGc9ZnVuY3Rpb24oKXtyLmRlcXVldWUoYSxiKX07XCJpbnByb2dyZXNzXCI9PT1lJiYoZT1jLnNoaWZ0KCksZC0tKSxlJiYoXCJmeFwiPT09YiYmYy51bnNoaWZ0KFwiaW5wcm9ncmVzc1wiKSxkZWxldGUgZi5zdG9wLGUuY2FsbChhLGcsZikpLCFkJiZmJiZmLmVtcHR5LmZpcmUoKX0sX3F1ZXVlSG9va3M6ZnVuY3Rpb24oYSxiKXt2YXIgYz1iK1wicXVldWVIb29rc1wiO3JldHVybiBXLmdldChhLGMpfHxXLmFjY2VzcyhhLGMse2VtcHR5OnIuQ2FsbGJhY2tzKFwib25jZSBtZW1vcnlcIikuYWRkKGZ1bmN0aW9uKCl7Vy5yZW1vdmUoYSxbYitcInF1ZXVlXCIsY10pfSl9KX19KSxyLmZuLmV4dGVuZCh7cXVldWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz0yO3JldHVyblwic3RyaW5nXCIhPXR5cGVvZiBhJiYoYj1hLGE9XCJmeFwiLGMtLSksYXJndW1lbnRzLmxlbmd0aDxjP3IucXVldWUodGhpc1swXSxhKTp2b2lkIDA9PT1iP3RoaXM6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGM9ci5xdWV1ZSh0aGlzLGEsYik7ci5fcXVldWVIb29rcyh0aGlzLGEpLFwiZnhcIj09PWEmJlwiaW5wcm9ncmVzc1wiIT09Y1swXSYmci5kZXF1ZXVlKHRoaXMsYSl9KX0sZGVxdWV1ZTpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7ci5kZXF1ZXVlKHRoaXMsYSl9KX0sY2xlYXJRdWV1ZTpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5xdWV1ZShhfHxcImZ4XCIsW10pfSxwcm9taXNlOmZ1bmN0aW9uKGEsYil7dmFyIGMsZD0xLGU9ci5EZWZlcnJlZCgpLGY9dGhpcyxnPXRoaXMubGVuZ3RoLGg9ZnVuY3Rpb24oKXstLWR8fGUucmVzb2x2ZVdpdGgoZixbZl0pfTtcInN0cmluZ1wiIT10eXBlb2YgYSYmKGI9YSxhPXZvaWQgMCksYT1hfHxcImZ4XCI7d2hpbGUoZy0tKWM9Vy5nZXQoZltnXSxhK1wicXVldWVIb29rc1wiKSxjJiZjLmVtcHR5JiYoZCsrLGMuZW1wdHkuYWRkKGgpKTtyZXR1cm4gaCgpLGUucHJvbWlzZShiKX19KTt2YXIgYWE9L1srLV0/KD86XFxkKlxcLnwpXFxkKyg/OltlRV1bKy1dP1xcZCt8KS8uc291cmNlLGJhPW5ldyBSZWdFeHAoXCJeKD86KFsrLV0pPXwpKFwiK2FhK1wiKShbYS16JV0qKSRcIixcImlcIiksY2E9W1wiVG9wXCIsXCJSaWdodFwiLFwiQm90dG9tXCIsXCJMZWZ0XCJdLGRhPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9Ynx8YSxcIm5vbmVcIj09PWEuc3R5bGUuZGlzcGxheXx8XCJcIj09PWEuc3R5bGUuZGlzcGxheSYmci5jb250YWlucyhhLm93bmVyRG9jdW1lbnQsYSkmJlwibm9uZVwiPT09ci5jc3MoYSxcImRpc3BsYXlcIil9LGVhPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlLGYsZz17fTtmb3IoZiBpbiBiKWdbZl09YS5zdHlsZVtmXSxhLnN0eWxlW2ZdPWJbZl07ZT1jLmFwcGx5KGEsZHx8W10pO2ZvcihmIGluIGIpYS5zdHlsZVtmXT1nW2ZdO3JldHVybiBlfTtmdW5jdGlvbiBmYShhLGIsYyxkKXt2YXIgZSxmPTEsZz0yMCxoPWQ/ZnVuY3Rpb24oKXtyZXR1cm4gZC5jdXIoKX06ZnVuY3Rpb24oKXtyZXR1cm4gci5jc3MoYSxiLFwiXCIpfSxpPWgoKSxqPWMmJmNbM118fChyLmNzc051bWJlcltiXT9cIlwiOlwicHhcIiksaz0oci5jc3NOdW1iZXJbYl18fFwicHhcIiE9PWomJitpKSYmYmEuZXhlYyhyLmNzcyhhLGIpKTtpZihrJiZrWzNdIT09ail7aj1qfHxrWzNdLGM9Y3x8W10saz0raXx8MTtkbyBmPWZ8fFwiLjVcIixrLz1mLHIuc3R5bGUoYSxiLGsraik7d2hpbGUoZiE9PShmPWgoKS9pKSYmMSE9PWYmJi0tZyl9cmV0dXJuIGMmJihrPStrfHwraXx8MCxlPWNbMV0/aysoY1sxXSsxKSpjWzJdOitjWzJdLGQmJihkLnVuaXQ9aixkLnN0YXJ0PWssZC5lbmQ9ZSkpLGV9dmFyIGdhPXt9O2Z1bmN0aW9uIGhhKGEpe3ZhciBiLGM9YS5vd25lckRvY3VtZW50LGQ9YS5ub2RlTmFtZSxlPWdhW2RdO3JldHVybiBlP2U6KGI9Yy5ib2R5LmFwcGVuZENoaWxkKGMuY3JlYXRlRWxlbWVudChkKSksZT1yLmNzcyhiLFwiZGlzcGxheVwiKSxiLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYiksXCJub25lXCI9PT1lJiYoZT1cImJsb2NrXCIpLGdhW2RdPWUsZSl9ZnVuY3Rpb24gaWEoYSxiKXtmb3IodmFyIGMsZCxlPVtdLGY9MCxnPWEubGVuZ3RoO2Y8ZztmKyspZD1hW2ZdLGQuc3R5bGUmJihjPWQuc3R5bGUuZGlzcGxheSxiPyhcIm5vbmVcIj09PWMmJihlW2ZdPVcuZ2V0KGQsXCJkaXNwbGF5XCIpfHxudWxsLGVbZl18fChkLnN0eWxlLmRpc3BsYXk9XCJcIikpLFwiXCI9PT1kLnN0eWxlLmRpc3BsYXkmJmRhKGQpJiYoZVtmXT1oYShkKSkpOlwibm9uZVwiIT09YyYmKGVbZl09XCJub25lXCIsVy5zZXQoZCxcImRpc3BsYXlcIixjKSkpO2ZvcihmPTA7ZjxnO2YrKyludWxsIT1lW2ZdJiYoYVtmXS5zdHlsZS5kaXNwbGF5PWVbZl0pO3JldHVybiBhfXIuZm4uZXh0ZW5kKHtzaG93OmZ1bmN0aW9uKCl7cmV0dXJuIGlhKHRoaXMsITApfSxoaWRlOmZ1bmN0aW9uKCl7cmV0dXJuIGlhKHRoaXMpfSx0b2dnbGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJib29sZWFuXCI9PXR5cGVvZiBhP2E/dGhpcy5zaG93KCk6dGhpcy5oaWRlKCk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7ZGEodGhpcyk/cih0aGlzKS5zaG93KCk6cih0aGlzKS5oaWRlKCl9KX19KTt2YXIgamE9L14oPzpjaGVja2JveHxyYWRpbykkL2ksa2E9LzwoW2Etel1bXlxcL1xcMD5cXHgyMFxcdFxcclxcblxcZl0rKS9pLGxhPS9eJHxcXC8oPzpqYXZhfGVjbWEpc2NyaXB0L2ksbWE9e29wdGlvbjpbMSxcIjxzZWxlY3QgbXVsdGlwbGU9J211bHRpcGxlJz5cIixcIjwvc2VsZWN0PlwiXSx0aGVhZDpbMSxcIjx0YWJsZT5cIixcIjwvdGFibGU+XCJdLGNvbDpbMixcIjx0YWJsZT48Y29sZ3JvdXA+XCIsXCI8L2NvbGdyb3VwPjwvdGFibGU+XCJdLHRyOlsyLFwiPHRhYmxlPjx0Ym9keT5cIixcIjwvdGJvZHk+PC90YWJsZT5cIl0sdGQ6WzMsXCI8dGFibGU+PHRib2R5Pjx0cj5cIixcIjwvdHI+PC90Ym9keT48L3RhYmxlPlwiXSxfZGVmYXVsdDpbMCxcIlwiLFwiXCJdfTttYS5vcHRncm91cD1tYS5vcHRpb24sbWEudGJvZHk9bWEudGZvb3Q9bWEuY29sZ3JvdXA9bWEuY2FwdGlvbj1tYS50aGVhZCxtYS50aD1tYS50ZDtmdW5jdGlvbiBuYShhLGIpe3ZhciBjO3JldHVybiBjPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBhLmdldEVsZW1lbnRzQnlUYWdOYW1lP2EuZ2V0RWxlbWVudHNCeVRhZ05hbWUoYnx8XCIqXCIpOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBhLnF1ZXJ5U2VsZWN0b3JBbGw/YS5xdWVyeVNlbGVjdG9yQWxsKGJ8fFwiKlwiKTpbXSx2b2lkIDA9PT1ifHxiJiZCKGEsYik/ci5tZXJnZShbYV0sYyk6Y31mdW5jdGlvbiBvYShhLGIpe2Zvcih2YXIgYz0wLGQ9YS5sZW5ndGg7YzxkO2MrKylXLnNldChhW2NdLFwiZ2xvYmFsRXZhbFwiLCFifHxXLmdldChiW2NdLFwiZ2xvYmFsRXZhbFwiKSl9dmFyIHBhPS88fCYjP1xcdys7LztmdW5jdGlvbiBxYShhLGIsYyxkLGUpe2Zvcih2YXIgZixnLGgsaSxqLGssbD1iLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxtPVtdLG49MCxvPWEubGVuZ3RoO248bztuKyspaWYoZj1hW25dLGZ8fDA9PT1mKWlmKFwib2JqZWN0XCI9PT1yLnR5cGUoZikpci5tZXJnZShtLGYubm9kZVR5cGU/W2ZdOmYpO2Vsc2UgaWYocGEudGVzdChmKSl7Zz1nfHxsLmFwcGVuZENoaWxkKGIuY3JlYXRlRWxlbWVudChcImRpdlwiKSksaD0oa2EuZXhlYyhmKXx8W1wiXCIsXCJcIl0pWzFdLnRvTG93ZXJDYXNlKCksaT1tYVtoXXx8bWEuX2RlZmF1bHQsZy5pbm5lckhUTUw9aVsxXStyLmh0bWxQcmVmaWx0ZXIoZikraVsyXSxrPWlbMF07d2hpbGUoay0tKWc9Zy5sYXN0Q2hpbGQ7ci5tZXJnZShtLGcuY2hpbGROb2RlcyksZz1sLmZpcnN0Q2hpbGQsZy50ZXh0Q29udGVudD1cIlwifWVsc2UgbS5wdXNoKGIuY3JlYXRlVGV4dE5vZGUoZikpO2wudGV4dENvbnRlbnQ9XCJcIixuPTA7d2hpbGUoZj1tW24rK10paWYoZCYmci5pbkFycmF5KGYsZCk+LTEpZSYmZS5wdXNoKGYpO2Vsc2UgaWYoaj1yLmNvbnRhaW5zKGYub3duZXJEb2N1bWVudCxmKSxnPW5hKGwuYXBwZW5kQ2hpbGQoZiksXCJzY3JpcHRcIiksaiYmb2EoZyksYyl7az0wO3doaWxlKGY9Z1trKytdKWxhLnRlc3QoZi50eXBlfHxcIlwiKSYmYy5wdXNoKGYpfXJldHVybiBsfSFmdW5jdGlvbigpe3ZhciBhPWQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLGI9YS5hcHBlbmRDaGlsZChkLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpLGM9ZC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7Yy5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsXCJyYWRpb1wiKSxjLnNldEF0dHJpYnV0ZShcImNoZWNrZWRcIixcImNoZWNrZWRcIiksYy5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsXCJ0XCIpLGIuYXBwZW5kQ2hpbGQoYyksby5jaGVja0Nsb25lPWIuY2xvbmVOb2RlKCEwKS5jbG9uZU5vZGUoITApLmxhc3RDaGlsZC5jaGVja2VkLGIuaW5uZXJIVE1MPVwiPHRleHRhcmVhPng8L3RleHRhcmVhPlwiLG8ubm9DbG9uZUNoZWNrZWQ9ISFiLmNsb25lTm9kZSghMCkubGFzdENoaWxkLmRlZmF1bHRWYWx1ZX0oKTt2YXIgcmE9ZC5kb2N1bWVudEVsZW1lbnQsc2E9L15rZXkvLHRhPS9eKD86bW91c2V8cG9pbnRlcnxjb250ZXh0bWVudXxkcmFnfGRyb3ApfGNsaWNrLyx1YT0vXihbXi5dKikoPzpcXC4oLispfCkvO2Z1bmN0aW9uIHZhKCl7cmV0dXJuITB9ZnVuY3Rpb24gd2EoKXtyZXR1cm4hMX1mdW5jdGlvbiB4YSgpe3RyeXtyZXR1cm4gZC5hY3RpdmVFbGVtZW50fWNhdGNoKGEpe319ZnVuY3Rpb24geWEoYSxiLGMsZCxlLGYpe3ZhciBnLGg7aWYoXCJvYmplY3RcIj09dHlwZW9mIGIpe1wic3RyaW5nXCIhPXR5cGVvZiBjJiYoZD1kfHxjLGM9dm9pZCAwKTtmb3IoaCBpbiBiKXlhKGEsaCxjLGQsYltoXSxmKTtyZXR1cm4gYX1pZihudWxsPT1kJiZudWxsPT1lPyhlPWMsZD1jPXZvaWQgMCk6bnVsbD09ZSYmKFwic3RyaW5nXCI9PXR5cGVvZiBjPyhlPWQsZD12b2lkIDApOihlPWQsZD1jLGM9dm9pZCAwKSksZT09PSExKWU9d2E7ZWxzZSBpZighZSlyZXR1cm4gYTtyZXR1cm4gMT09PWYmJihnPWUsZT1mdW5jdGlvbihhKXtyZXR1cm4gcigpLm9mZihhKSxnLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sZS5ndWlkPWcuZ3VpZHx8KGcuZ3VpZD1yLmd1aWQrKykpLGEuZWFjaChmdW5jdGlvbigpe3IuZXZlbnQuYWRkKHRoaXMsYixlLGQsYyl9KX1yLmV2ZW50PXtnbG9iYWw6e30sYWRkOmZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGYsZyxoLGksaixrLGwsbSxuLG8scCxxPVcuZ2V0KGEpO2lmKHEpe2MuaGFuZGxlciYmKGY9YyxjPWYuaGFuZGxlcixlPWYuc2VsZWN0b3IpLGUmJnIuZmluZC5tYXRjaGVzU2VsZWN0b3IocmEsZSksYy5ndWlkfHwoYy5ndWlkPXIuZ3VpZCsrKSwoaT1xLmV2ZW50cyl8fChpPXEuZXZlbnRzPXt9KSwoZz1xLmhhbmRsZSl8fChnPXEuaGFuZGxlPWZ1bmN0aW9uKGIpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiByJiZyLmV2ZW50LnRyaWdnZXJlZCE9PWIudHlwZT9yLmV2ZW50LmRpc3BhdGNoLmFwcGx5KGEsYXJndW1lbnRzKTp2b2lkIDB9KSxiPShifHxcIlwiKS5tYXRjaChMKXx8W1wiXCJdLGo9Yi5sZW5ndGg7d2hpbGUoai0tKWg9dWEuZXhlYyhiW2pdKXx8W10sbj1wPWhbMV0sbz0oaFsyXXx8XCJcIikuc3BsaXQoXCIuXCIpLnNvcnQoKSxuJiYobD1yLmV2ZW50LnNwZWNpYWxbbl18fHt9LG49KGU/bC5kZWxlZ2F0ZVR5cGU6bC5iaW5kVHlwZSl8fG4sbD1yLmV2ZW50LnNwZWNpYWxbbl18fHt9LGs9ci5leHRlbmQoe3R5cGU6bixvcmlnVHlwZTpwLGRhdGE6ZCxoYW5kbGVyOmMsZ3VpZDpjLmd1aWQsc2VsZWN0b3I6ZSxuZWVkc0NvbnRleHQ6ZSYmci5leHByLm1hdGNoLm5lZWRzQ29udGV4dC50ZXN0KGUpLG5hbWVzcGFjZTpvLmpvaW4oXCIuXCIpfSxmKSwobT1pW25dKXx8KG09aVtuXT1bXSxtLmRlbGVnYXRlQ291bnQ9MCxsLnNldHVwJiZsLnNldHVwLmNhbGwoYSxkLG8sZykhPT0hMXx8YS5hZGRFdmVudExpc3RlbmVyJiZhLmFkZEV2ZW50TGlzdGVuZXIobixnKSksbC5hZGQmJihsLmFkZC5jYWxsKGEsayksay5oYW5kbGVyLmd1aWR8fChrLmhhbmRsZXIuZ3VpZD1jLmd1aWQpKSxlP20uc3BsaWNlKG0uZGVsZWdhdGVDb3VudCsrLDAsayk6bS5wdXNoKGspLHIuZXZlbnQuZ2xvYmFsW25dPSEwKX19LHJlbW92ZTpmdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmLGcsaCxpLGosayxsLG0sbixvLHAscT1XLmhhc0RhdGEoYSkmJlcuZ2V0KGEpO2lmKHEmJihpPXEuZXZlbnRzKSl7Yj0oYnx8XCJcIikubWF0Y2goTCl8fFtcIlwiXSxqPWIubGVuZ3RoO3doaWxlKGotLSlpZihoPXVhLmV4ZWMoYltqXSl8fFtdLG49cD1oWzFdLG89KGhbMl18fFwiXCIpLnNwbGl0KFwiLlwiKS5zb3J0KCksbil7bD1yLmV2ZW50LnNwZWNpYWxbbl18fHt9LG49KGQ/bC5kZWxlZ2F0ZVR5cGU6bC5iaW5kVHlwZSl8fG4sbT1pW25dfHxbXSxoPWhbMl0mJm5ldyBSZWdFeHAoXCIoXnxcXFxcLilcIitvLmpvaW4oXCJcXFxcLig/Oi4qXFxcXC58KVwiKStcIihcXFxcLnwkKVwiKSxnPWY9bS5sZW5ndGg7d2hpbGUoZi0tKWs9bVtmXSwhZSYmcCE9PWsub3JpZ1R5cGV8fGMmJmMuZ3VpZCE9PWsuZ3VpZHx8aCYmIWgudGVzdChrLm5hbWVzcGFjZSl8fGQmJmQhPT1rLnNlbGVjdG9yJiYoXCIqKlwiIT09ZHx8IWsuc2VsZWN0b3IpfHwobS5zcGxpY2UoZiwxKSxrLnNlbGVjdG9yJiZtLmRlbGVnYXRlQ291bnQtLSxsLnJlbW92ZSYmbC5yZW1vdmUuY2FsbChhLGspKTtnJiYhbS5sZW5ndGgmJihsLnRlYXJkb3duJiZsLnRlYXJkb3duLmNhbGwoYSxvLHEuaGFuZGxlKSE9PSExfHxyLnJlbW92ZUV2ZW50KGEsbixxLmhhbmRsZSksZGVsZXRlIGlbbl0pfWVsc2UgZm9yKG4gaW4gaSlyLmV2ZW50LnJlbW92ZShhLG4rYltqXSxjLGQsITApO3IuaXNFbXB0eU9iamVjdChpKSYmVy5yZW1vdmUoYSxcImhhbmRsZSBldmVudHNcIil9fSxkaXNwYXRjaDpmdW5jdGlvbihhKXt2YXIgYj1yLmV2ZW50LmZpeChhKSxjLGQsZSxmLGcsaCxpPW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKSxqPShXLmdldCh0aGlzLFwiZXZlbnRzXCIpfHx7fSlbYi50eXBlXXx8W10saz1yLmV2ZW50LnNwZWNpYWxbYi50eXBlXXx8e307Zm9yKGlbMF09YixjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKylpW2NdPWFyZ3VtZW50c1tjXTtpZihiLmRlbGVnYXRlVGFyZ2V0PXRoaXMsIWsucHJlRGlzcGF0Y2h8fGsucHJlRGlzcGF0Y2guY2FsbCh0aGlzLGIpIT09ITEpe2g9ci5ldmVudC5oYW5kbGVycy5jYWxsKHRoaXMsYixqKSxjPTA7d2hpbGUoKGY9aFtjKytdKSYmIWIuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSl7Yi5jdXJyZW50VGFyZ2V0PWYuZWxlbSxkPTA7d2hpbGUoKGc9Zi5oYW5kbGVyc1tkKytdKSYmIWIuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQoKSliLnJuYW1lc3BhY2UmJiFiLnJuYW1lc3BhY2UudGVzdChnLm5hbWVzcGFjZSl8fChiLmhhbmRsZU9iaj1nLGIuZGF0YT1nLmRhdGEsZT0oKHIuZXZlbnQuc3BlY2lhbFtnLm9yaWdUeXBlXXx8e30pLmhhbmRsZXx8Zy5oYW5kbGVyKS5hcHBseShmLmVsZW0saSksdm9pZCAwIT09ZSYmKGIucmVzdWx0PWUpPT09ITEmJihiLnByZXZlbnREZWZhdWx0KCksYi5zdG9wUHJvcGFnYXRpb24oKSkpfXJldHVybiBrLnBvc3REaXNwYXRjaCYmay5wb3N0RGlzcGF0Y2guY2FsbCh0aGlzLGIpLGIucmVzdWx0fX0saGFuZGxlcnM6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGUsZixnLGg9W10saT1iLmRlbGVnYXRlQ291bnQsaj1hLnRhcmdldDtpZihpJiZqLm5vZGVUeXBlJiYhKFwiY2xpY2tcIj09PWEudHlwZSYmYS5idXR0b24+PTEpKWZvcig7aiE9PXRoaXM7aj1qLnBhcmVudE5vZGV8fHRoaXMpaWYoMT09PWoubm9kZVR5cGUmJihcImNsaWNrXCIhPT1hLnR5cGV8fGouZGlzYWJsZWQhPT0hMCkpe2ZvcihmPVtdLGc9e30sYz0wO2M8aTtjKyspZD1iW2NdLGU9ZC5zZWxlY3RvcitcIiBcIix2b2lkIDA9PT1nW2VdJiYoZ1tlXT1kLm5lZWRzQ29udGV4dD9yKGUsdGhpcykuaW5kZXgoaik+LTE6ci5maW5kKGUsdGhpcyxudWxsLFtqXSkubGVuZ3RoKSxnW2VdJiZmLnB1c2goZCk7Zi5sZW5ndGgmJmgucHVzaCh7ZWxlbTpqLGhhbmRsZXJzOmZ9KX1yZXR1cm4gaj10aGlzLGk8Yi5sZW5ndGgmJmgucHVzaCh7ZWxlbTpqLGhhbmRsZXJzOmIuc2xpY2UoaSl9KSxofSxhZGRQcm9wOmZ1bmN0aW9uKGEsYil7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIuRXZlbnQucHJvdG90eXBlLGEse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDpyLmlzRnVuY3Rpb24oYik/ZnVuY3Rpb24oKXtpZih0aGlzLm9yaWdpbmFsRXZlbnQpcmV0dXJuIGIodGhpcy5vcmlnaW5hbEV2ZW50KX06ZnVuY3Rpb24oKXtpZih0aGlzLm9yaWdpbmFsRXZlbnQpcmV0dXJuIHRoaXMub3JpZ2luYWxFdmVudFthXX0sc2V0OmZ1bmN0aW9uKGIpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLGEse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOmJ9KX19KX0sZml4OmZ1bmN0aW9uKGEpe3JldHVybiBhW3IuZXhwYW5kb10/YTpuZXcgci5FdmVudChhKX0sc3BlY2lhbDp7bG9hZDp7bm9CdWJibGU6ITB9LGZvY3VzOnt0cmlnZ2VyOmZ1bmN0aW9uKCl7aWYodGhpcyE9PXhhKCkmJnRoaXMuZm9jdXMpcmV0dXJuIHRoaXMuZm9jdXMoKSwhMX0sZGVsZWdhdGVUeXBlOlwiZm9jdXNpblwifSxibHVyOnt0cmlnZ2VyOmZ1bmN0aW9uKCl7aWYodGhpcz09PXhhKCkmJnRoaXMuYmx1cilyZXR1cm4gdGhpcy5ibHVyKCksITF9LGRlbGVnYXRlVHlwZTpcImZvY3Vzb3V0XCJ9LGNsaWNrOnt0cmlnZ2VyOmZ1bmN0aW9uKCl7aWYoXCJjaGVja2JveFwiPT09dGhpcy50eXBlJiZ0aGlzLmNsaWNrJiZCKHRoaXMsXCJpbnB1dFwiKSlyZXR1cm4gdGhpcy5jbGljaygpLCExfSxfZGVmYXVsdDpmdW5jdGlvbihhKXtyZXR1cm4gQihhLnRhcmdldCxcImFcIil9fSxiZWZvcmV1bmxvYWQ6e3Bvc3REaXNwYXRjaDpmdW5jdGlvbihhKXt2b2lkIDAhPT1hLnJlc3VsdCYmYS5vcmlnaW5hbEV2ZW50JiYoYS5vcmlnaW5hbEV2ZW50LnJldHVyblZhbHVlPWEucmVzdWx0KX19fX0sci5yZW1vdmVFdmVudD1mdW5jdGlvbihhLGIsYyl7YS5yZW1vdmVFdmVudExpc3RlbmVyJiZhLnJlbW92ZUV2ZW50TGlzdGVuZXIoYixjKX0sci5FdmVudD1mdW5jdGlvbihhLGIpe3JldHVybiB0aGlzIGluc3RhbmNlb2Ygci5FdmVudD8oYSYmYS50eXBlPyh0aGlzLm9yaWdpbmFsRXZlbnQ9YSx0aGlzLnR5cGU9YS50eXBlLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWEuZGVmYXVsdFByZXZlbnRlZHx8dm9pZCAwPT09YS5kZWZhdWx0UHJldmVudGVkJiZhLnJldHVyblZhbHVlPT09ITE/dmE6d2EsdGhpcy50YXJnZXQ9YS50YXJnZXQmJjM9PT1hLnRhcmdldC5ub2RlVHlwZT9hLnRhcmdldC5wYXJlbnROb2RlOmEudGFyZ2V0LHRoaXMuY3VycmVudFRhcmdldD1hLmN1cnJlbnRUYXJnZXQsdGhpcy5yZWxhdGVkVGFyZ2V0PWEucmVsYXRlZFRhcmdldCk6dGhpcy50eXBlPWEsYiYmci5leHRlbmQodGhpcyxiKSx0aGlzLnRpbWVTdGFtcD1hJiZhLnRpbWVTdGFtcHx8ci5ub3coKSx2b2lkKHRoaXNbci5leHBhbmRvXT0hMCkpOm5ldyByLkV2ZW50KGEsYil9LHIuRXZlbnQucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpyLkV2ZW50LGlzRGVmYXVsdFByZXZlbnRlZDp3YSxpc1Byb3BhZ2F0aW9uU3RvcHBlZDp3YSxpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZDp3YSxpc1NpbXVsYXRlZDohMSxwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3ZhciBhPXRoaXMub3JpZ2luYWxFdmVudDt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD12YSxhJiYhdGhpcy5pc1NpbXVsYXRlZCYmYS5wcmV2ZW50RGVmYXVsdCgpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm9yaWdpbmFsRXZlbnQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD12YSxhJiYhdGhpcy5pc1NpbXVsYXRlZCYmYS5zdG9wUHJvcGFnYXRpb24oKX0sc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5vcmlnaW5hbEV2ZW50O3RoaXMuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ9dmEsYSYmIXRoaXMuaXNTaW11bGF0ZWQmJmEuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksdGhpcy5zdG9wUHJvcGFnYXRpb24oKX19LHIuZWFjaCh7YWx0S2V5OiEwLGJ1YmJsZXM6ITAsY2FuY2VsYWJsZTohMCxjaGFuZ2VkVG91Y2hlczohMCxjdHJsS2V5OiEwLGRldGFpbDohMCxldmVudFBoYXNlOiEwLG1ldGFLZXk6ITAscGFnZVg6ITAscGFnZVk6ITAsc2hpZnRLZXk6ITAsdmlldzohMCxcImNoYXJcIjohMCxjaGFyQ29kZTohMCxrZXk6ITAsa2V5Q29kZTohMCxidXR0b246ITAsYnV0dG9uczohMCxjbGllbnRYOiEwLGNsaWVudFk6ITAsb2Zmc2V0WDohMCxvZmZzZXRZOiEwLHBvaW50ZXJJZDohMCxwb2ludGVyVHlwZTohMCxzY3JlZW5YOiEwLHNjcmVlblk6ITAsdGFyZ2V0VG91Y2hlczohMCx0b0VsZW1lbnQ6ITAsdG91Y2hlczohMCx3aGljaDpmdW5jdGlvbihhKXt2YXIgYj1hLmJ1dHRvbjtyZXR1cm4gbnVsbD09YS53aGljaCYmc2EudGVzdChhLnR5cGUpP251bGwhPWEuY2hhckNvZGU/YS5jaGFyQ29kZTphLmtleUNvZGU6IWEud2hpY2gmJnZvaWQgMCE9PWImJnRhLnRlc3QoYS50eXBlKT8xJmI/MToyJmI/Mzo0JmI/MjowOmEud2hpY2h9fSxyLmV2ZW50LmFkZFByb3ApLHIuZWFjaCh7bW91c2VlbnRlcjpcIm1vdXNlb3ZlclwiLG1vdXNlbGVhdmU6XCJtb3VzZW91dFwiLHBvaW50ZXJlbnRlcjpcInBvaW50ZXJvdmVyXCIscG9pbnRlcmxlYXZlOlwicG9pbnRlcm91dFwifSxmdW5jdGlvbihhLGIpe3IuZXZlbnQuc3BlY2lhbFthXT17ZGVsZWdhdGVUeXBlOmIsYmluZFR5cGU6YixoYW5kbGU6ZnVuY3Rpb24oYSl7dmFyIGMsZD10aGlzLGU9YS5yZWxhdGVkVGFyZ2V0LGY9YS5oYW5kbGVPYmo7cmV0dXJuIGUmJihlPT09ZHx8ci5jb250YWlucyhkLGUpKXx8KGEudHlwZT1mLm9yaWdUeXBlLGM9Zi5oYW5kbGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKSxhLnR5cGU9YiksY319fSksci5mbi5leHRlbmQoe29uOmZ1bmN0aW9uKGEsYixjLGQpe3JldHVybiB5YSh0aGlzLGEsYixjLGQpfSxvbmU6ZnVuY3Rpb24oYSxiLGMsZCl7cmV0dXJuIHlhKHRoaXMsYSxiLGMsZCwxKX0sb2ZmOmZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlO2lmKGEmJmEucHJldmVudERlZmF1bHQmJmEuaGFuZGxlT2JqKXJldHVybiBkPWEuaGFuZGxlT2JqLHIoYS5kZWxlZ2F0ZVRhcmdldCkub2ZmKGQubmFtZXNwYWNlP2Qub3JpZ1R5cGUrXCIuXCIrZC5uYW1lc3BhY2U6ZC5vcmlnVHlwZSxkLnNlbGVjdG9yLGQuaGFuZGxlciksdGhpcztpZihcIm9iamVjdFwiPT10eXBlb2YgYSl7Zm9yKGUgaW4gYSl0aGlzLm9mZihlLGIsYVtlXSk7cmV0dXJuIHRoaXN9cmV0dXJuIGIhPT0hMSYmXCJmdW5jdGlvblwiIT10eXBlb2YgYnx8KGM9YixiPXZvaWQgMCksYz09PSExJiYoYz13YSksdGhpcy5lYWNoKGZ1bmN0aW9uKCl7ci5ldmVudC5yZW1vdmUodGhpcyxhLGMsYil9KX19KTt2YXIgemE9LzwoPyFhcmVhfGJyfGNvbHxlbWJlZHxocnxpbWd8aW5wdXR8bGlua3xtZXRhfHBhcmFtKSgoW2Etel1bXlxcL1xcMD5cXHgyMFxcdFxcclxcblxcZl0qKVtePl0qKVxcLz4vZ2ksQWE9LzxzY3JpcHR8PHN0eWxlfDxsaW5rL2ksQmE9L2NoZWNrZWRcXHMqKD86W149XXw9XFxzKi5jaGVja2VkLikvaSxDYT0vXnRydWVcXC8oLiopLyxEYT0vXlxccyo8ISg/OlxcW0NEQVRBXFxbfC0tKXwoPzpcXF1cXF18LS0pPlxccyokL2c7ZnVuY3Rpb24gRWEoYSxiKXtyZXR1cm4gQihhLFwidGFibGVcIikmJkIoMTEhPT1iLm5vZGVUeXBlP2I6Yi5maXJzdENoaWxkLFwidHJcIik/cihcIj50Ym9keVwiLGEpWzBdfHxhOmF9ZnVuY3Rpb24gRmEoYSl7cmV0dXJuIGEudHlwZT0obnVsbCE9PWEuZ2V0QXR0cmlidXRlKFwidHlwZVwiKSkrXCIvXCIrYS50eXBlLGF9ZnVuY3Rpb24gR2EoYSl7dmFyIGI9Q2EuZXhlYyhhLnR5cGUpO3JldHVybiBiP2EudHlwZT1iWzFdOmEucmVtb3ZlQXR0cmlidXRlKFwidHlwZVwiKSxhfWZ1bmN0aW9uIEhhKGEsYil7dmFyIGMsZCxlLGYsZyxoLGksajtpZigxPT09Yi5ub2RlVHlwZSl7aWYoVy5oYXNEYXRhKGEpJiYoZj1XLmFjY2VzcyhhKSxnPVcuc2V0KGIsZiksaj1mLmV2ZW50cykpe2RlbGV0ZSBnLmhhbmRsZSxnLmV2ZW50cz17fTtmb3IoZSBpbiBqKWZvcihjPTAsZD1qW2VdLmxlbmd0aDtjPGQ7YysrKXIuZXZlbnQuYWRkKGIsZSxqW2VdW2NdKX1YLmhhc0RhdGEoYSkmJihoPVguYWNjZXNzKGEpLGk9ci5leHRlbmQoe30saCksWC5zZXQoYixpKSl9fWZ1bmN0aW9uIElhKGEsYil7dmFyIGM9Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1wiaW5wdXRcIj09PWMmJmphLnRlc3QoYS50eXBlKT9iLmNoZWNrZWQ9YS5jaGVja2VkOlwiaW5wdXRcIiE9PWMmJlwidGV4dGFyZWFcIiE9PWN8fChiLmRlZmF1bHRWYWx1ZT1hLmRlZmF1bHRWYWx1ZSl9ZnVuY3Rpb24gSmEoYSxiLGMsZCl7Yj1nLmFwcGx5KFtdLGIpO3ZhciBlLGYsaCxpLGosayxsPTAsbT1hLmxlbmd0aCxuPW0tMSxxPWJbMF0scz1yLmlzRnVuY3Rpb24ocSk7aWYoc3x8bT4xJiZcInN0cmluZ1wiPT10eXBlb2YgcSYmIW8uY2hlY2tDbG9uZSYmQmEudGVzdChxKSlyZXR1cm4gYS5lYWNoKGZ1bmN0aW9uKGUpe3ZhciBmPWEuZXEoZSk7cyYmKGJbMF09cS5jYWxsKHRoaXMsZSxmLmh0bWwoKSkpLEphKGYsYixjLGQpfSk7aWYobSYmKGU9cWEoYixhWzBdLm93bmVyRG9jdW1lbnQsITEsYSxkKSxmPWUuZmlyc3RDaGlsZCwxPT09ZS5jaGlsZE5vZGVzLmxlbmd0aCYmKGU9ZiksZnx8ZCkpe2ZvcihoPXIubWFwKG5hKGUsXCJzY3JpcHRcIiksRmEpLGk9aC5sZW5ndGg7bDxtO2wrKylqPWUsbCE9PW4mJihqPXIuY2xvbmUoaiwhMCwhMCksaSYmci5tZXJnZShoLG5hKGosXCJzY3JpcHRcIikpKSxjLmNhbGwoYVtsXSxqLGwpO2lmKGkpZm9yKGs9aFtoLmxlbmd0aC0xXS5vd25lckRvY3VtZW50LHIubWFwKGgsR2EpLGw9MDtsPGk7bCsrKWo9aFtsXSxsYS50ZXN0KGoudHlwZXx8XCJcIikmJiFXLmFjY2VzcyhqLFwiZ2xvYmFsRXZhbFwiKSYmci5jb250YWlucyhrLGopJiYoai5zcmM/ci5fZXZhbFVybCYmci5fZXZhbFVybChqLnNyYyk6cChqLnRleHRDb250ZW50LnJlcGxhY2UoRGEsXCJcIiksaykpfXJldHVybiBhfWZ1bmN0aW9uIEthKGEsYixjKXtmb3IodmFyIGQsZT1iP3IuZmlsdGVyKGIsYSk6YSxmPTA7bnVsbCE9KGQ9ZVtmXSk7ZisrKWN8fDEhPT1kLm5vZGVUeXBlfHxyLmNsZWFuRGF0YShuYShkKSksZC5wYXJlbnROb2RlJiYoYyYmci5jb250YWlucyhkLm93bmVyRG9jdW1lbnQsZCkmJm9hKG5hKGQsXCJzY3JpcHRcIikpLGQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChkKSk7cmV0dXJuIGF9ci5leHRlbmQoe2h0bWxQcmVmaWx0ZXI6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVwbGFjZSh6YSxcIjwkMT48LyQyPlwiKX0sY2xvbmU6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZixnLGg9YS5jbG9uZU5vZGUoITApLGk9ci5jb250YWlucyhhLm93bmVyRG9jdW1lbnQsYSk7aWYoIShvLm5vQ2xvbmVDaGVja2VkfHwxIT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlfHxyLmlzWE1MRG9jKGEpKSlmb3IoZz1uYShoKSxmPW5hKGEpLGQ9MCxlPWYubGVuZ3RoO2Q8ZTtkKyspSWEoZltkXSxnW2RdKTtpZihiKWlmKGMpZm9yKGY9Znx8bmEoYSksZz1nfHxuYShoKSxkPTAsZT1mLmxlbmd0aDtkPGU7ZCsrKUhhKGZbZF0sZ1tkXSk7ZWxzZSBIYShhLGgpO3JldHVybiBnPW5hKGgsXCJzY3JpcHRcIiksZy5sZW5ndGg+MCYmb2EoZywhaSYmbmEoYSxcInNjcmlwdFwiKSksaH0sY2xlYW5EYXRhOmZ1bmN0aW9uKGEpe2Zvcih2YXIgYixjLGQsZT1yLmV2ZW50LnNwZWNpYWwsZj0wO3ZvaWQgMCE9PShjPWFbZl0pO2YrKylpZihVKGMpKXtpZihiPWNbVy5leHBhbmRvXSl7aWYoYi5ldmVudHMpZm9yKGQgaW4gYi5ldmVudHMpZVtkXT9yLmV2ZW50LnJlbW92ZShjLGQpOnIucmVtb3ZlRXZlbnQoYyxkLGIuaGFuZGxlKTtjW1cuZXhwYW5kb109dm9pZCAwfWNbWC5leHBhbmRvXSYmKGNbWC5leHBhbmRvXT12b2lkIDApfX19KSxyLmZuLmV4dGVuZCh7ZGV0YWNoOmZ1bmN0aW9uKGEpe3JldHVybiBLYSh0aGlzLGEsITApfSxyZW1vdmU6ZnVuY3Rpb24oYSl7cmV0dXJuIEthKHRoaXMsYSl9LHRleHQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFQodGhpcyxmdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT09YT9yLnRleHQodGhpcyk6dGhpcy5lbXB0eSgpLmVhY2goZnVuY3Rpb24oKXsxIT09dGhpcy5ub2RlVHlwZSYmMTEhPT10aGlzLm5vZGVUeXBlJiY5IT09dGhpcy5ub2RlVHlwZXx8KHRoaXMudGV4dENvbnRlbnQ9YSl9KX0sbnVsbCxhLGFyZ3VtZW50cy5sZW5ndGgpfSxhcHBlbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gSmEodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24oYSl7aWYoMT09PXRoaXMubm9kZVR5cGV8fDExPT09dGhpcy5ub2RlVHlwZXx8OT09PXRoaXMubm9kZVR5cGUpe3ZhciBiPUVhKHRoaXMsYSk7Yi5hcHBlbmRDaGlsZChhKX19KX0scHJlcGVuZDpmdW5jdGlvbigpe3JldHVybiBKYSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbihhKXtpZigxPT09dGhpcy5ub2RlVHlwZXx8MTE9PT10aGlzLm5vZGVUeXBlfHw5PT09dGhpcy5ub2RlVHlwZSl7dmFyIGI9RWEodGhpcyxhKTtiLmluc2VydEJlZm9yZShhLGIuZmlyc3RDaGlsZCl9fSl9LGJlZm9yZTpmdW5jdGlvbigpe3JldHVybiBKYSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbihhKXt0aGlzLnBhcmVudE5vZGUmJnRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSx0aGlzKX0pfSxhZnRlcjpmdW5jdGlvbigpe3JldHVybiBKYSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbihhKXt0aGlzLnBhcmVudE5vZGUmJnRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSx0aGlzLm5leHRTaWJsaW5nKX0pfSxlbXB0eTpmdW5jdGlvbigpe2Zvcih2YXIgYSxiPTA7bnVsbCE9KGE9dGhpc1tiXSk7YisrKTE9PT1hLm5vZGVUeXBlJiYoci5jbGVhbkRhdGEobmEoYSwhMSkpLGEudGV4dENvbnRlbnQ9XCJcIik7cmV0dXJuIHRoaXN9LGNsb25lOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9bnVsbCE9YSYmYSxiPW51bGw9PWI/YTpiLHRoaXMubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIHIuY2xvbmUodGhpcyxhLGIpfSl9LGh0bWw6ZnVuY3Rpb24oYSl7cmV0dXJuIFQodGhpcyxmdW5jdGlvbihhKXt2YXIgYj10aGlzWzBdfHx7fSxjPTAsZD10aGlzLmxlbmd0aDtpZih2b2lkIDA9PT1hJiYxPT09Yi5ub2RlVHlwZSlyZXR1cm4gYi5pbm5lckhUTUw7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGEmJiFBYS50ZXN0KGEpJiYhbWFbKGthLmV4ZWMoYSl8fFtcIlwiLFwiXCJdKVsxXS50b0xvd2VyQ2FzZSgpXSl7YT1yLmh0bWxQcmVmaWx0ZXIoYSk7dHJ5e2Zvcig7YzxkO2MrKyliPXRoaXNbY118fHt9LDE9PT1iLm5vZGVUeXBlJiYoci5jbGVhbkRhdGEobmEoYiwhMSkpLGIuaW5uZXJIVE1MPWEpO2I9MH1jYXRjaChlKXt9fWImJnRoaXMuZW1wdHkoKS5hcHBlbmQoYSl9LG51bGwsYSxhcmd1bWVudHMubGVuZ3RoKX0scmVwbGFjZVdpdGg6ZnVuY3Rpb24oKXt2YXIgYT1bXTtyZXR1cm4gSmEodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24oYil7dmFyIGM9dGhpcy5wYXJlbnROb2RlO3IuaW5BcnJheSh0aGlzLGEpPDAmJihyLmNsZWFuRGF0YShuYSh0aGlzKSksYyYmYy5yZXBsYWNlQ2hpbGQoYix0aGlzKSl9LGEpfX0pLHIuZWFjaCh7YXBwZW5kVG86XCJhcHBlbmRcIixwcmVwZW5kVG86XCJwcmVwZW5kXCIsaW5zZXJ0QmVmb3JlOlwiYmVmb3JlXCIsaW5zZXJ0QWZ0ZXI6XCJhZnRlclwiLHJlcGxhY2VBbGw6XCJyZXBsYWNlV2l0aFwifSxmdW5jdGlvbihhLGIpe3IuZm5bYV09ZnVuY3Rpb24oYSl7Zm9yKHZhciBjLGQ9W10sZT1yKGEpLGY9ZS5sZW5ndGgtMSxnPTA7Zzw9ZjtnKyspYz1nPT09Zj90aGlzOnRoaXMuY2xvbmUoITApLHIoZVtnXSlbYl0oYyksaC5hcHBseShkLGMuZ2V0KCkpO3JldHVybiB0aGlzLnB1c2hTdGFjayhkKX19KTt2YXIgTGE9L15tYXJnaW4vLE1hPW5ldyBSZWdFeHAoXCJeKFwiK2FhK1wiKSg/IXB4KVthLXolXSskXCIsXCJpXCIpLE5hPWZ1bmN0aW9uKGIpe3ZhciBjPWIub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldztyZXR1cm4gYyYmYy5vcGVuZXJ8fChjPWEpLGMuZ2V0Q29tcHV0ZWRTdHlsZShiKX07IWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYigpe2lmKGkpe2kuc3R5bGUuY3NzVGV4dD1cImJveC1zaXppbmc6Ym9yZGVyLWJveDtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmJsb2NrO21hcmdpbjphdXRvO2JvcmRlcjoxcHg7cGFkZGluZzoxcHg7dG9wOjElO3dpZHRoOjUwJVwiLGkuaW5uZXJIVE1MPVwiXCIscmEuYXBwZW5kQ2hpbGQoaCk7dmFyIGI9YS5nZXRDb21wdXRlZFN0eWxlKGkpO2M9XCIxJVwiIT09Yi50b3AsZz1cIjJweFwiPT09Yi5tYXJnaW5MZWZ0LGU9XCI0cHhcIj09PWIud2lkdGgsaS5zdHlsZS5tYXJnaW5SaWdodD1cIjUwJVwiLGY9XCI0cHhcIj09PWIubWFyZ2luUmlnaHQscmEucmVtb3ZlQ2hpbGQoaCksaT1udWxsfX12YXIgYyxlLGYsZyxoPWQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxpPWQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtpLnN0eWxlJiYoaS5zdHlsZS5iYWNrZ3JvdW5kQ2xpcD1cImNvbnRlbnQtYm94XCIsaS5jbG9uZU5vZGUoITApLnN0eWxlLmJhY2tncm91bmRDbGlwPVwiXCIsby5jbGVhckNsb25lU3R5bGU9XCJjb250ZW50LWJveFwiPT09aS5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCxoLnN0eWxlLmNzc1RleHQ9XCJib3JkZXI6MDt3aWR0aDo4cHg7aGVpZ2h0OjA7dG9wOjA7bGVmdDotOTk5OXB4O3BhZGRpbmc6MDttYXJnaW4tdG9wOjFweDtwb3NpdGlvbjphYnNvbHV0ZVwiLGguYXBwZW5kQ2hpbGQoaSksci5leHRlbmQobyx7cGl4ZWxQb3NpdGlvbjpmdW5jdGlvbigpe3JldHVybiBiKCksY30sYm94U2l6aW5nUmVsaWFibGU6ZnVuY3Rpb24oKXtyZXR1cm4gYigpLGV9LHBpeGVsTWFyZ2luUmlnaHQ6ZnVuY3Rpb24oKXtyZXR1cm4gYigpLGZ9LHJlbGlhYmxlTWFyZ2luTGVmdDpmdW5jdGlvbigpe3JldHVybiBiKCksZ319KSl9KCk7ZnVuY3Rpb24gT2EoYSxiLGMpe3ZhciBkLGUsZixnLGg9YS5zdHlsZTtyZXR1cm4gYz1jfHxOYShhKSxjJiYoZz1jLmdldFByb3BlcnR5VmFsdWUoYil8fGNbYl0sXCJcIiE9PWd8fHIuY29udGFpbnMoYS5vd25lckRvY3VtZW50LGEpfHwoZz1yLnN0eWxlKGEsYikpLCFvLnBpeGVsTWFyZ2luUmlnaHQoKSYmTWEudGVzdChnKSYmTGEudGVzdChiKSYmKGQ9aC53aWR0aCxlPWgubWluV2lkdGgsZj1oLm1heFdpZHRoLGgubWluV2lkdGg9aC5tYXhXaWR0aD1oLndpZHRoPWcsZz1jLndpZHRoLGgud2lkdGg9ZCxoLm1pbldpZHRoPWUsaC5tYXhXaWR0aD1mKSksdm9pZCAwIT09Zz9nK1wiXCI6Z31mdW5jdGlvbiBQYShhLGIpe3JldHVybntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYSgpP3ZvaWQgZGVsZXRlIHRoaXMuZ2V0Oih0aGlzLmdldD1iKS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fX12YXIgUWE9L14obm9uZXx0YWJsZSg/IS1jW2VhXSkuKykvLFJhPS9eLS0vLFNhPXtwb3NpdGlvbjpcImFic29sdXRlXCIsdmlzaWJpbGl0eTpcImhpZGRlblwiLGRpc3BsYXk6XCJibG9ja1wifSxUYT17bGV0dGVyU3BhY2luZzpcIjBcIixmb250V2VpZ2h0OlwiNDAwXCJ9LFVhPVtcIldlYmtpdFwiLFwiTW96XCIsXCJtc1wiXSxWYT1kLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGU7ZnVuY3Rpb24gV2EoYSl7aWYoYSBpbiBWYSlyZXR1cm4gYTt2YXIgYj1hWzBdLnRvVXBwZXJDYXNlKCkrYS5zbGljZSgxKSxjPVVhLmxlbmd0aDt3aGlsZShjLS0paWYoYT1VYVtjXStiLGEgaW4gVmEpcmV0dXJuIGF9ZnVuY3Rpb24gWGEoYSl7dmFyIGI9ci5jc3NQcm9wc1thXTtyZXR1cm4gYnx8KGI9ci5jc3NQcm9wc1thXT1XYShhKXx8YSksYn1mdW5jdGlvbiBZYShhLGIsYyl7dmFyIGQ9YmEuZXhlYyhiKTtyZXR1cm4gZD9NYXRoLm1heCgwLGRbMl0tKGN8fDApKSsoZFszXXx8XCJweFwiKTpifWZ1bmN0aW9uIFphKGEsYixjLGQsZSl7dmFyIGYsZz0wO2ZvcihmPWM9PT0oZD9cImJvcmRlclwiOlwiY29udGVudFwiKT80Olwid2lkdGhcIj09PWI/MTowO2Y8NDtmKz0yKVwibWFyZ2luXCI9PT1jJiYoZys9ci5jc3MoYSxjK2NhW2ZdLCEwLGUpKSxkPyhcImNvbnRlbnRcIj09PWMmJihnLT1yLmNzcyhhLFwicGFkZGluZ1wiK2NhW2ZdLCEwLGUpKSxcIm1hcmdpblwiIT09YyYmKGctPXIuY3NzKGEsXCJib3JkZXJcIitjYVtmXStcIldpZHRoXCIsITAsZSkpKTooZys9ci5jc3MoYSxcInBhZGRpbmdcIitjYVtmXSwhMCxlKSxcInBhZGRpbmdcIiE9PWMmJihnKz1yLmNzcyhhLFwiYm9yZGVyXCIrY2FbZl0rXCJXaWR0aFwiLCEwLGUpKSk7cmV0dXJuIGd9ZnVuY3Rpb24gJGEoYSxiLGMpe3ZhciBkLGU9TmEoYSksZj1PYShhLGIsZSksZz1cImJvcmRlci1ib3hcIj09PXIuY3NzKGEsXCJib3hTaXppbmdcIiwhMSxlKTtyZXR1cm4gTWEudGVzdChmKT9mOihkPWcmJihvLmJveFNpemluZ1JlbGlhYmxlKCl8fGY9PT1hLnN0eWxlW2JdKSxcImF1dG9cIj09PWYmJihmPWFbXCJvZmZzZXRcIitiWzBdLnRvVXBwZXJDYXNlKCkrYi5zbGljZSgxKV0pLGY9cGFyc2VGbG9hdChmKXx8MCxmK1phKGEsYixjfHwoZz9cImJvcmRlclwiOlwiY29udGVudFwiKSxkLGUpK1wicHhcIil9ci5leHRlbmQoe2Nzc0hvb2tzOntvcGFjaXR5OntnZXQ6ZnVuY3Rpb24oYSxiKXtpZihiKXt2YXIgYz1PYShhLFwib3BhY2l0eVwiKTtyZXR1cm5cIlwiPT09Yz9cIjFcIjpjfX19fSxjc3NOdW1iZXI6e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGNvbHVtbkNvdW50OiEwLGZpbGxPcGFjaXR5OiEwLGZsZXhHcm93OiEwLGZsZXhTaHJpbms6ITAsZm9udFdlaWdodDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITB9LGNzc1Byb3BzOntcImZsb2F0XCI6XCJjc3NGbG9hdFwifSxzdHlsZTpmdW5jdGlvbihhLGIsYyxkKXtpZihhJiYzIT09YS5ub2RlVHlwZSYmOCE9PWEubm9kZVR5cGUmJmEuc3R5bGUpe3ZhciBlLGYsZyxoPXIuY2FtZWxDYXNlKGIpLGk9UmEudGVzdChiKSxqPWEuc3R5bGU7cmV0dXJuIGl8fChiPVhhKGgpKSxnPXIuY3NzSG9va3NbYl18fHIuY3NzSG9va3NbaF0sdm9pZCAwPT09Yz9nJiZcImdldFwiaW4gZyYmdm9pZCAwIT09KGU9Zy5nZXQoYSwhMSxkKSk/ZTpqW2JdOihmPXR5cGVvZiBjLFwic3RyaW5nXCI9PT1mJiYoZT1iYS5leGVjKGMpKSYmZVsxXSYmKGM9ZmEoYSxiLGUpLGY9XCJudW1iZXJcIiksbnVsbCE9YyYmYz09PWMmJihcIm51bWJlclwiPT09ZiYmKGMrPWUmJmVbM118fChyLmNzc051bWJlcltoXT9cIlwiOlwicHhcIikpLG8uY2xlYXJDbG9uZVN0eWxlfHxcIlwiIT09Y3x8MCE9PWIuaW5kZXhPZihcImJhY2tncm91bmRcIil8fChqW2JdPVwiaW5oZXJpdFwiKSxnJiZcInNldFwiaW4gZyYmdm9pZCAwPT09KGM9Zy5zZXQoYSxjLGQpKXx8KGk/ai5zZXRQcm9wZXJ0eShiLGMpOmpbYl09YykpLHZvaWQgMCl9fSxjc3M6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGUsZixnLGg9ci5jYW1lbENhc2UoYiksaT1SYS50ZXN0KGIpO3JldHVybiBpfHwoYj1YYShoKSksZz1yLmNzc0hvb2tzW2JdfHxyLmNzc0hvb2tzW2hdLGcmJlwiZ2V0XCJpbiBnJiYoZT1nLmdldChhLCEwLGMpKSx2b2lkIDA9PT1lJiYoZT1PYShhLGIsZCkpLFwibm9ybWFsXCI9PT1lJiZiIGluIFRhJiYoZT1UYVtiXSksXCJcIj09PWN8fGM/KGY9cGFyc2VGbG9hdChlKSxjPT09ITB8fGlzRmluaXRlKGYpP2Z8fDA6ZSk6ZX19KSxyLmVhY2goW1wiaGVpZ2h0XCIsXCJ3aWR0aFwiXSxmdW5jdGlvbihhLGIpe3IuY3NzSG9va3NbYl09e2dldDpmdW5jdGlvbihhLGMsZCl7aWYoYylyZXR1cm4hUWEudGVzdChyLmNzcyhhLFwiZGlzcGxheVwiKSl8fGEuZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGgmJmEuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGg/JGEoYSxiLGQpOmVhKGEsU2EsZnVuY3Rpb24oKXtyZXR1cm4gJGEoYSxiLGQpfSl9LHNldDpmdW5jdGlvbihhLGMsZCl7dmFyIGUsZj1kJiZOYShhKSxnPWQmJlphKGEsYixkLFwiYm9yZGVyLWJveFwiPT09ci5jc3MoYSxcImJveFNpemluZ1wiLCExLGYpLGYpO3JldHVybiBnJiYoZT1iYS5leGVjKGMpKSYmXCJweFwiIT09KGVbM118fFwicHhcIikmJihhLnN0eWxlW2JdPWMsYz1yLmNzcyhhLGIpKSxZYShhLGMsZyl9fX0pLHIuY3NzSG9va3MubWFyZ2luTGVmdD1QYShvLnJlbGlhYmxlTWFyZ2luTGVmdCxmdW5jdGlvbihhLGIpe2lmKGIpcmV0dXJuKHBhcnNlRmxvYXQoT2EoYSxcIm1hcmdpbkxlZnRcIikpfHxhLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQtZWEoYSx7bWFyZ2luTGVmdDowfSxmdW5jdGlvbigpe3JldHVybiBhLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnR9KSkrXCJweFwifSksci5lYWNoKHttYXJnaW46XCJcIixwYWRkaW5nOlwiXCIsYm9yZGVyOlwiV2lkdGhcIn0sZnVuY3Rpb24oYSxiKXtyLmNzc0hvb2tzW2ErYl09e2V4cGFuZDpmdW5jdGlvbihjKXtmb3IodmFyIGQ9MCxlPXt9LGY9XCJzdHJpbmdcIj09dHlwZW9mIGM/Yy5zcGxpdChcIiBcIik6W2NdO2Q8NDtkKyspZVthK2NhW2RdK2JdPWZbZF18fGZbZC0yXXx8ZlswXTtyZXR1cm4gZX19LExhLnRlc3QoYSl8fChyLmNzc0hvb2tzW2ErYl0uc2V0PVlhKX0pLHIuZm4uZXh0ZW5kKHtjc3M6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVCh0aGlzLGZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlLGY9e30sZz0wO2lmKEFycmF5LmlzQXJyYXkoYikpe2ZvcihkPU5hKGEpLGU9Yi5sZW5ndGg7ZzxlO2crKylmW2JbZ11dPXIuY3NzKGEsYltnXSwhMSxkKTtyZXR1cm4gZn1yZXR1cm4gdm9pZCAwIT09Yz9yLnN0eWxlKGEsYixjKTpyLmNzcyhhLGIpfSxhLGIsYXJndW1lbnRzLmxlbmd0aD4xKX19KTtmdW5jdGlvbiBfYShhLGIsYyxkLGUpe3JldHVybiBuZXcgX2EucHJvdG90eXBlLmluaXQoYSxiLGMsZCxlKX1yLlR3ZWVuPV9hLF9hLnByb3RvdHlwZT17Y29uc3RydWN0b3I6X2EsaW5pdDpmdW5jdGlvbihhLGIsYyxkLGUsZil7dGhpcy5lbGVtPWEsdGhpcy5wcm9wPWMsdGhpcy5lYXNpbmc9ZXx8ci5lYXNpbmcuX2RlZmF1bHQsdGhpcy5vcHRpb25zPWIsdGhpcy5zdGFydD10aGlzLm5vdz10aGlzLmN1cigpLHRoaXMuZW5kPWQsdGhpcy51bml0PWZ8fChyLmNzc051bWJlcltjXT9cIlwiOlwicHhcIil9LGN1cjpmdW5jdGlvbigpe3ZhciBhPV9hLnByb3BIb29rc1t0aGlzLnByb3BdO3JldHVybiBhJiZhLmdldD9hLmdldCh0aGlzKTpfYS5wcm9wSG9va3MuX2RlZmF1bHQuZ2V0KHRoaXMpfSxydW46ZnVuY3Rpb24oYSl7dmFyIGIsYz1fYS5wcm9wSG9va3NbdGhpcy5wcm9wXTtyZXR1cm4gdGhpcy5vcHRpb25zLmR1cmF0aW9uP3RoaXMucG9zPWI9ci5lYXNpbmdbdGhpcy5lYXNpbmddKGEsdGhpcy5vcHRpb25zLmR1cmF0aW9uKmEsMCwxLHRoaXMub3B0aW9ucy5kdXJhdGlvbik6dGhpcy5wb3M9Yj1hLHRoaXMubm93PSh0aGlzLmVuZC10aGlzLnN0YXJ0KSpiK3RoaXMuc3RhcnQsdGhpcy5vcHRpb25zLnN0ZXAmJnRoaXMub3B0aW9ucy5zdGVwLmNhbGwodGhpcy5lbGVtLHRoaXMubm93LHRoaXMpLGMmJmMuc2V0P2Muc2V0KHRoaXMpOl9hLnByb3BIb29rcy5fZGVmYXVsdC5zZXQodGhpcyksdGhpc319LF9hLnByb3RvdHlwZS5pbml0LnByb3RvdHlwZT1fYS5wcm90b3R5cGUsX2EucHJvcEhvb2tzPXtfZGVmYXVsdDp7Z2V0OmZ1bmN0aW9uKGEpe3ZhciBiO3JldHVybiAxIT09YS5lbGVtLm5vZGVUeXBlfHxudWxsIT1hLmVsZW1bYS5wcm9wXSYmbnVsbD09YS5lbGVtLnN0eWxlW2EucHJvcF0/YS5lbGVtW2EucHJvcF06KGI9ci5jc3MoYS5lbGVtLGEucHJvcCxcIlwiKSxiJiZcImF1dG9cIiE9PWI/YjowKX0sc2V0OmZ1bmN0aW9uKGEpe3IuZnguc3RlcFthLnByb3BdP3IuZnguc3RlcFthLnByb3BdKGEpOjEhPT1hLmVsZW0ubm9kZVR5cGV8fG51bGw9PWEuZWxlbS5zdHlsZVtyLmNzc1Byb3BzW2EucHJvcF1dJiYhci5jc3NIb29rc1thLnByb3BdP2EuZWxlbVthLnByb3BdPWEubm93OnIuc3R5bGUoYS5lbGVtLGEucHJvcCxhLm5vdythLnVuaXQpfX19LF9hLnByb3BIb29rcy5zY3JvbGxUb3A9X2EucHJvcEhvb2tzLnNjcm9sbExlZnQ9e3NldDpmdW5jdGlvbihhKXthLmVsZW0ubm9kZVR5cGUmJmEuZWxlbS5wYXJlbnROb2RlJiYoYS5lbGVtW2EucHJvcF09YS5ub3cpfX0sci5lYXNpbmc9e2xpbmVhcjpmdW5jdGlvbihhKXtyZXR1cm4gYX0sc3dpbmc6ZnVuY3Rpb24oYSl7cmV0dXJuLjUtTWF0aC5jb3MoYSpNYXRoLlBJKS8yfSxfZGVmYXVsdDpcInN3aW5nXCJ9LHIuZng9X2EucHJvdG90eXBlLmluaXQsci5meC5zdGVwPXt9O3ZhciBhYixiYixjYj0vXig/OnRvZ2dsZXxzaG93fGhpZGUpJC8sZGI9L3F1ZXVlSG9va3MkLztmdW5jdGlvbiBlYigpe2JiJiYoZC5oaWRkZW49PT0hMSYmYS5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU/YS5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZWIpOmEuc2V0VGltZW91dChlYixyLmZ4LmludGVydmFsKSxyLmZ4LnRpY2soKSl9ZnVuY3Rpb24gZmIoKXtyZXR1cm4gYS5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YWI9dm9pZCAwfSksYWI9ci5ub3coKX1mdW5jdGlvbiBnYihhLGIpe3ZhciBjLGQ9MCxlPXtoZWlnaHQ6YX07Zm9yKGI9Yj8xOjA7ZDw0O2QrPTItYiljPWNhW2RdLGVbXCJtYXJnaW5cIitjXT1lW1wicGFkZGluZ1wiK2NdPWE7cmV0dXJuIGImJihlLm9wYWNpdHk9ZS53aWR0aD1hKSxlfWZ1bmN0aW9uIGhiKGEsYixjKXtmb3IodmFyIGQsZT0oa2IudHdlZW5lcnNbYl18fFtdKS5jb25jYXQoa2IudHdlZW5lcnNbXCIqXCJdKSxmPTAsZz1lLmxlbmd0aDtmPGc7ZisrKWlmKGQ9ZVtmXS5jYWxsKGMsYixhKSlyZXR1cm4gZH1mdW5jdGlvbiBpYihhLGIsYyl7dmFyIGQsZSxmLGcsaCxpLGosayxsPVwid2lkdGhcImluIGJ8fFwiaGVpZ2h0XCJpbiBiLG09dGhpcyxuPXt9LG89YS5zdHlsZSxwPWEubm9kZVR5cGUmJmRhKGEpLHE9Vy5nZXQoYSxcImZ4c2hvd1wiKTtjLnF1ZXVlfHwoZz1yLl9xdWV1ZUhvb2tzKGEsXCJmeFwiKSxudWxsPT1nLnVucXVldWVkJiYoZy51bnF1ZXVlZD0wLGg9Zy5lbXB0eS5maXJlLGcuZW1wdHkuZmlyZT1mdW5jdGlvbigpe2cudW5xdWV1ZWR8fGgoKX0pLGcudW5xdWV1ZWQrKyxtLmFsd2F5cyhmdW5jdGlvbigpe20uYWx3YXlzKGZ1bmN0aW9uKCl7Zy51bnF1ZXVlZC0tLHIucXVldWUoYSxcImZ4XCIpLmxlbmd0aHx8Zy5lbXB0eS5maXJlKCl9KX0pKTtmb3IoZCBpbiBiKWlmKGU9YltkXSxjYi50ZXN0KGUpKXtpZihkZWxldGUgYltkXSxmPWZ8fFwidG9nZ2xlXCI9PT1lLGU9PT0ocD9cImhpZGVcIjpcInNob3dcIikpe2lmKFwic2hvd1wiIT09ZXx8IXF8fHZvaWQgMD09PXFbZF0pY29udGludWU7cD0hMH1uW2RdPXEmJnFbZF18fHIuc3R5bGUoYSxkKX1pZihpPSFyLmlzRW1wdHlPYmplY3QoYiksaXx8IXIuaXNFbXB0eU9iamVjdChuKSl7bCYmMT09PWEubm9kZVR5cGUmJihjLm92ZXJmbG93PVtvLm92ZXJmbG93LG8ub3ZlcmZsb3dYLG8ub3ZlcmZsb3dZXSxqPXEmJnEuZGlzcGxheSxudWxsPT1qJiYoaj1XLmdldChhLFwiZGlzcGxheVwiKSksaz1yLmNzcyhhLFwiZGlzcGxheVwiKSxcIm5vbmVcIj09PWsmJihqP2s9ajooaWEoW2FdLCEwKSxqPWEuc3R5bGUuZGlzcGxheXx8aixrPXIuY3NzKGEsXCJkaXNwbGF5XCIpLGlhKFthXSkpKSwoXCJpbmxpbmVcIj09PWt8fFwiaW5saW5lLWJsb2NrXCI9PT1rJiZudWxsIT1qKSYmXCJub25lXCI9PT1yLmNzcyhhLFwiZmxvYXRcIikmJihpfHwobS5kb25lKGZ1bmN0aW9uKCl7by5kaXNwbGF5PWp9KSxudWxsPT1qJiYoaz1vLmRpc3BsYXksaj1cIm5vbmVcIj09PWs/XCJcIjprKSksby5kaXNwbGF5PVwiaW5saW5lLWJsb2NrXCIpKSxjLm92ZXJmbG93JiYoby5vdmVyZmxvdz1cImhpZGRlblwiLG0uYWx3YXlzKGZ1bmN0aW9uKCl7by5vdmVyZmxvdz1jLm92ZXJmbG93WzBdLG8ub3ZlcmZsb3dYPWMub3ZlcmZsb3dbMV0sby5vdmVyZmxvd1k9Yy5vdmVyZmxvd1syXX0pKSxpPSExO2ZvcihkIGluIG4paXx8KHE/XCJoaWRkZW5cImluIHEmJihwPXEuaGlkZGVuKTpxPVcuYWNjZXNzKGEsXCJmeHNob3dcIix7ZGlzcGxheTpqfSksZiYmKHEuaGlkZGVuPSFwKSxwJiZpYShbYV0sITApLG0uZG9uZShmdW5jdGlvbigpe3B8fGlhKFthXSksVy5yZW1vdmUoYSxcImZ4c2hvd1wiKTtmb3IoZCBpbiBuKXIuc3R5bGUoYSxkLG5bZF0pfSkpLGk9aGIocD9xW2RdOjAsZCxtKSxkIGluIHF8fChxW2RdPWkuc3RhcnQscCYmKGkuZW5kPWkuc3RhcnQsaS5zdGFydD0wKSl9fWZ1bmN0aW9uIGpiKGEsYil7dmFyIGMsZCxlLGYsZztmb3IoYyBpbiBhKWlmKGQ9ci5jYW1lbENhc2UoYyksZT1iW2RdLGY9YVtjXSxBcnJheS5pc0FycmF5KGYpJiYoZT1mWzFdLGY9YVtjXT1mWzBdKSxjIT09ZCYmKGFbZF09ZixkZWxldGUgYVtjXSksZz1yLmNzc0hvb2tzW2RdLGcmJlwiZXhwYW5kXCJpbiBnKXtmPWcuZXhwYW5kKGYpLGRlbGV0ZSBhW2RdO2ZvcihjIGluIGYpYyBpbiBhfHwoYVtjXT1mW2NdLGJbY109ZSl9ZWxzZSBiW2RdPWV9ZnVuY3Rpb24ga2IoYSxiLGMpe3ZhciBkLGUsZj0wLGc9a2IucHJlZmlsdGVycy5sZW5ndGgsaD1yLkRlZmVycmVkKCkuYWx3YXlzKGZ1bmN0aW9uKCl7ZGVsZXRlIGkuZWxlbX0pLGk9ZnVuY3Rpb24oKXtpZihlKXJldHVybiExO2Zvcih2YXIgYj1hYnx8ZmIoKSxjPU1hdGgubWF4KDAsai5zdGFydFRpbWUrai5kdXJhdGlvbi1iKSxkPWMvai5kdXJhdGlvbnx8MCxmPTEtZCxnPTAsaT1qLnR3ZWVucy5sZW5ndGg7ZzxpO2crKylqLnR3ZWVuc1tnXS5ydW4oZik7cmV0dXJuIGgubm90aWZ5V2l0aChhLFtqLGYsY10pLGY8MSYmaT9jOihpfHxoLm5vdGlmeVdpdGgoYSxbaiwxLDBdKSxoLnJlc29sdmVXaXRoKGEsW2pdKSwhMSl9LGo9aC5wcm9taXNlKHtlbGVtOmEscHJvcHM6ci5leHRlbmQoe30sYiksb3B0czpyLmV4dGVuZCghMCx7c3BlY2lhbEVhc2luZzp7fSxlYXNpbmc6ci5lYXNpbmcuX2RlZmF1bHR9LGMpLG9yaWdpbmFsUHJvcGVydGllczpiLG9yaWdpbmFsT3B0aW9uczpjLHN0YXJ0VGltZTphYnx8ZmIoKSxkdXJhdGlvbjpjLmR1cmF0aW9uLHR3ZWVuczpbXSxjcmVhdGVUd2VlbjpmdW5jdGlvbihiLGMpe3ZhciBkPXIuVHdlZW4oYSxqLm9wdHMsYixjLGoub3B0cy5zcGVjaWFsRWFzaW5nW2JdfHxqLm9wdHMuZWFzaW5nKTtyZXR1cm4gai50d2VlbnMucHVzaChkKSxkfSxzdG9wOmZ1bmN0aW9uKGIpe3ZhciBjPTAsZD1iP2oudHdlZW5zLmxlbmd0aDowO2lmKGUpcmV0dXJuIHRoaXM7Zm9yKGU9ITA7YzxkO2MrKylqLnR3ZWVuc1tjXS5ydW4oMSk7cmV0dXJuIGI/KGgubm90aWZ5V2l0aChhLFtqLDEsMF0pLGgucmVzb2x2ZVdpdGgoYSxbaixiXSkpOmgucmVqZWN0V2l0aChhLFtqLGJdKSx0aGlzfX0pLGs9ai5wcm9wcztmb3IoamIoayxqLm9wdHMuc3BlY2lhbEVhc2luZyk7ZjxnO2YrKylpZihkPWtiLnByZWZpbHRlcnNbZl0uY2FsbChqLGEsayxqLm9wdHMpKXJldHVybiByLmlzRnVuY3Rpb24oZC5zdG9wKSYmKHIuX3F1ZXVlSG9va3Moai5lbGVtLGoub3B0cy5xdWV1ZSkuc3RvcD1yLnByb3h5KGQuc3RvcCxkKSksZDtyZXR1cm4gci5tYXAoayxoYixqKSxyLmlzRnVuY3Rpb24oai5vcHRzLnN0YXJ0KSYmai5vcHRzLnN0YXJ0LmNhbGwoYSxqKSxqLnByb2dyZXNzKGoub3B0cy5wcm9ncmVzcykuZG9uZShqLm9wdHMuZG9uZSxqLm9wdHMuY29tcGxldGUpLmZhaWwoai5vcHRzLmZhaWwpLmFsd2F5cyhqLm9wdHMuYWx3YXlzKSxyLmZ4LnRpbWVyKHIuZXh0ZW5kKGkse2VsZW06YSxhbmltOmoscXVldWU6ai5vcHRzLnF1ZXVlfSkpLGp9ci5BbmltYXRpb249ci5leHRlbmQoa2Ise3R3ZWVuZXJzOntcIipcIjpbZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLmNyZWF0ZVR3ZWVuKGEsYik7cmV0dXJuIGZhKGMuZWxlbSxhLGJhLmV4ZWMoYiksYyksY31dfSx0d2VlbmVyOmZ1bmN0aW9uKGEsYil7ci5pc0Z1bmN0aW9uKGEpPyhiPWEsYT1bXCIqXCJdKTphPWEubWF0Y2goTCk7Zm9yKHZhciBjLGQ9MCxlPWEubGVuZ3RoO2Q8ZTtkKyspYz1hW2RdLGtiLnR3ZWVuZXJzW2NdPWtiLnR3ZWVuZXJzW2NdfHxbXSxrYi50d2VlbmVyc1tjXS51bnNoaWZ0KGIpfSxwcmVmaWx0ZXJzOltpYl0scHJlZmlsdGVyOmZ1bmN0aW9uKGEsYil7Yj9rYi5wcmVmaWx0ZXJzLnVuc2hpZnQoYSk6a2IucHJlZmlsdGVycy5wdXNoKGEpfX0pLHIuc3BlZWQ9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWEmJlwib2JqZWN0XCI9PXR5cGVvZiBhP3IuZXh0ZW5kKHt9LGEpOntjb21wbGV0ZTpjfHwhYyYmYnx8ci5pc0Z1bmN0aW9uKGEpJiZhLGR1cmF0aW9uOmEsZWFzaW5nOmMmJmJ8fGImJiFyLmlzRnVuY3Rpb24oYikmJmJ9O3JldHVybiByLmZ4Lm9mZj9kLmR1cmF0aW9uPTA6XCJudW1iZXJcIiE9dHlwZW9mIGQuZHVyYXRpb24mJihkLmR1cmF0aW9uIGluIHIuZnguc3BlZWRzP2QuZHVyYXRpb249ci5meC5zcGVlZHNbZC5kdXJhdGlvbl06ZC5kdXJhdGlvbj1yLmZ4LnNwZWVkcy5fZGVmYXVsdCksbnVsbCE9ZC5xdWV1ZSYmZC5xdWV1ZSE9PSEwfHwoZC5xdWV1ZT1cImZ4XCIpLGQub2xkPWQuY29tcGxldGUsZC5jb21wbGV0ZT1mdW5jdGlvbigpe3IuaXNGdW5jdGlvbihkLm9sZCkmJmQub2xkLmNhbGwodGhpcyksZC5xdWV1ZSYmci5kZXF1ZXVlKHRoaXMsZC5xdWV1ZSl9LGR9LHIuZm4uZXh0ZW5kKHtmYWRlVG86ZnVuY3Rpb24oYSxiLGMsZCl7cmV0dXJuIHRoaXMuZmlsdGVyKGRhKS5jc3MoXCJvcGFjaXR5XCIsMCkuc2hvdygpLmVuZCgpLmFuaW1hdGUoe29wYWNpdHk6Yn0sYSxjLGQpfSxhbmltYXRlOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXIuaXNFbXB0eU9iamVjdChhKSxmPXIuc3BlZWQoYixjLGQpLGc9ZnVuY3Rpb24oKXt2YXIgYj1rYih0aGlzLHIuZXh0ZW5kKHt9LGEpLGYpOyhlfHxXLmdldCh0aGlzLFwiZmluaXNoXCIpKSYmYi5zdG9wKCEwKX07cmV0dXJuIGcuZmluaXNoPWcsZXx8Zi5xdWV1ZT09PSExP3RoaXMuZWFjaChnKTp0aGlzLnF1ZXVlKGYucXVldWUsZyl9LHN0b3A6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWZ1bmN0aW9uKGEpe3ZhciBiPWEuc3RvcDtkZWxldGUgYS5zdG9wLGIoYyl9O3JldHVyblwic3RyaW5nXCIhPXR5cGVvZiBhJiYoYz1iLGI9YSxhPXZvaWQgMCksYiYmYSE9PSExJiZ0aGlzLnF1ZXVlKGF8fFwiZnhcIixbXSksdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGI9ITAsZT1udWxsIT1hJiZhK1wicXVldWVIb29rc1wiLGY9ci50aW1lcnMsZz1XLmdldCh0aGlzKTtpZihlKWdbZV0mJmdbZV0uc3RvcCYmZChnW2VdKTtlbHNlIGZvcihlIGluIGcpZ1tlXSYmZ1tlXS5zdG9wJiZkYi50ZXN0KGUpJiZkKGdbZV0pO2ZvcihlPWYubGVuZ3RoO2UtLTspZltlXS5lbGVtIT09dGhpc3x8bnVsbCE9YSYmZltlXS5xdWV1ZSE9PWF8fChmW2VdLmFuaW0uc3RvcChjKSxiPSExLGYuc3BsaWNlKGUsMSkpOyFiJiZjfHxyLmRlcXVldWUodGhpcyxhKX0pfSxmaW5pc2g6ZnVuY3Rpb24oYSl7cmV0dXJuIGEhPT0hMSYmKGE9YXx8XCJmeFwiKSx0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYixjPVcuZ2V0KHRoaXMpLGQ9Y1thK1wicXVldWVcIl0sZT1jW2ErXCJxdWV1ZUhvb2tzXCJdLGY9ci50aW1lcnMsZz1kP2QubGVuZ3RoOjA7Zm9yKGMuZmluaXNoPSEwLHIucXVldWUodGhpcyxhLFtdKSxlJiZlLnN0b3AmJmUuc3RvcC5jYWxsKHRoaXMsITApLGI9Zi5sZW5ndGg7Yi0tOylmW2JdLmVsZW09PT10aGlzJiZmW2JdLnF1ZXVlPT09YSYmKGZbYl0uYW5pbS5zdG9wKCEwKSxmLnNwbGljZShiLDEpKTtmb3IoYj0wO2I8ZztiKyspZFtiXSYmZFtiXS5maW5pc2gmJmRbYl0uZmluaXNoLmNhbGwodGhpcyk7ZGVsZXRlIGMuZmluaXNofSl9fSksci5lYWNoKFtcInRvZ2dsZVwiLFwic2hvd1wiLFwiaGlkZVwiXSxmdW5jdGlvbihhLGIpe3ZhciBjPXIuZm5bYl07ci5mbltiXT1mdW5jdGlvbihhLGQsZSl7cmV0dXJuIG51bGw9PWF8fFwiYm9vbGVhblwiPT10eXBlb2YgYT9jLmFwcGx5KHRoaXMsYXJndW1lbnRzKTp0aGlzLmFuaW1hdGUoZ2IoYiwhMCksYSxkLGUpfX0pLHIuZWFjaCh7c2xpZGVEb3duOmdiKFwic2hvd1wiKSxzbGlkZVVwOmdiKFwiaGlkZVwiKSxzbGlkZVRvZ2dsZTpnYihcInRvZ2dsZVwiKSxmYWRlSW46e29wYWNpdHk6XCJzaG93XCJ9LGZhZGVPdXQ6e29wYWNpdHk6XCJoaWRlXCJ9LGZhZGVUb2dnbGU6e29wYWNpdHk6XCJ0b2dnbGVcIn19LGZ1bmN0aW9uKGEsYil7ci5mblthXT1mdW5jdGlvbihhLGMsZCl7cmV0dXJuIHRoaXMuYW5pbWF0ZShiLGEsYyxkKX19KSxyLnRpbWVycz1bXSxyLmZ4LnRpY2s9ZnVuY3Rpb24oKXt2YXIgYSxiPTAsYz1yLnRpbWVycztmb3IoYWI9ci5ub3coKTtiPGMubGVuZ3RoO2IrKylhPWNbYl0sYSgpfHxjW2JdIT09YXx8Yy5zcGxpY2UoYi0tLDEpO2MubGVuZ3RofHxyLmZ4LnN0b3AoKSxhYj12b2lkIDB9LHIuZngudGltZXI9ZnVuY3Rpb24oYSl7ci50aW1lcnMucHVzaChhKSxyLmZ4LnN0YXJ0KCl9LHIuZnguaW50ZXJ2YWw9MTMsci5meC5zdGFydD1mdW5jdGlvbigpe2JifHwoYmI9ITAsZWIoKSl9LHIuZnguc3RvcD1mdW5jdGlvbigpe2JiPW51bGx9LHIuZnguc3BlZWRzPXtzbG93OjYwMCxmYXN0OjIwMCxfZGVmYXVsdDo0MDB9LHIuZm4uZGVsYXk9ZnVuY3Rpb24oYixjKXtyZXR1cm4gYj1yLmZ4P3IuZnguc3BlZWRzW2JdfHxiOmIsYz1jfHxcImZ4XCIsdGhpcy5xdWV1ZShjLGZ1bmN0aW9uKGMsZCl7dmFyIGU9YS5zZXRUaW1lb3V0KGMsYik7ZC5zdG9wPWZ1bmN0aW9uKCl7YS5jbGVhclRpbWVvdXQoZSl9fSl9LGZ1bmN0aW9uKCl7dmFyIGE9ZC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiksYj1kLmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIiksYz1iLmFwcGVuZENoaWxkKGQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKSk7YS50eXBlPVwiY2hlY2tib3hcIixvLmNoZWNrT249XCJcIiE9PWEudmFsdWUsby5vcHRTZWxlY3RlZD1jLnNlbGVjdGVkLGE9ZC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiksYS52YWx1ZT1cInRcIixhLnR5cGU9XCJyYWRpb1wiLG8ucmFkaW9WYWx1ZT1cInRcIj09PWEudmFsdWV9KCk7dmFyIGxiLG1iPXIuZXhwci5hdHRySGFuZGxlO3IuZm4uZXh0ZW5kKHthdHRyOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFQodGhpcyxyLmF0dHIsYSxiLGFyZ3VtZW50cy5sZW5ndGg+MSl9LHJlbW92ZUF0dHI6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3IucmVtb3ZlQXR0cih0aGlzLGEpfSl9fSksci5leHRlbmQoe2F0dHI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZj1hLm5vZGVUeXBlO2lmKDMhPT1mJiY4IT09ZiYmMiE9PWYpcmV0dXJuXCJ1bmRlZmluZWRcIj09dHlwZW9mIGEuZ2V0QXR0cmlidXRlP3IucHJvcChhLGIsYyk6KDE9PT1mJiZyLmlzWE1MRG9jKGEpfHwoZT1yLmF0dHJIb29rc1tiLnRvTG93ZXJDYXNlKCldfHwoci5leHByLm1hdGNoLmJvb2wudGVzdChiKT9sYjp2b2lkIDApKSx2b2lkIDAhPT1jP251bGw9PT1jP3ZvaWQgci5yZW1vdmVBdHRyKGEsYik6ZSYmXCJzZXRcImluIGUmJnZvaWQgMCE9PShkPWUuc2V0KGEsYyxiKSk/ZDooYS5zZXRBdHRyaWJ1dGUoYixjK1wiXCIpLGMpOmUmJlwiZ2V0XCJpbiBlJiZudWxsIT09KGQ9ZS5nZXQoYSxiKSk/ZDooZD1yLmZpbmQuYXR0cihhLGIpLFxubnVsbD09ZD92b2lkIDA6ZCkpfSxhdHRySG9va3M6e3R5cGU6e3NldDpmdW5jdGlvbihhLGIpe2lmKCFvLnJhZGlvVmFsdWUmJlwicmFkaW9cIj09PWImJkIoYSxcImlucHV0XCIpKXt2YXIgYz1hLnZhbHVlO3JldHVybiBhLnNldEF0dHJpYnV0ZShcInR5cGVcIixiKSxjJiYoYS52YWx1ZT1jKSxifX19fSxyZW1vdmVBdHRyOmZ1bmN0aW9uKGEsYil7dmFyIGMsZD0wLGU9YiYmYi5tYXRjaChMKTtpZihlJiYxPT09YS5ub2RlVHlwZSl3aGlsZShjPWVbZCsrXSlhLnJlbW92ZUF0dHJpYnV0ZShjKX19KSxsYj17c2V0OmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gYj09PSExP3IucmVtb3ZlQXR0cihhLGMpOmEuc2V0QXR0cmlidXRlKGMsYyksY319LHIuZWFjaChyLmV4cHIubWF0Y2guYm9vbC5zb3VyY2UubWF0Y2goL1xcdysvZyksZnVuY3Rpb24oYSxiKXt2YXIgYz1tYltiXXx8ci5maW5kLmF0dHI7bWJbYl09ZnVuY3Rpb24oYSxiLGQpe3ZhciBlLGYsZz1iLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGR8fChmPW1iW2ddLG1iW2ddPWUsZT1udWxsIT1jKGEsYixkKT9nOm51bGwsbWJbZ109ZiksZX19KTt2YXIgbmI9L14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaSxvYj0vXig/OmF8YXJlYSkkL2k7ci5mbi5leHRlbmQoe3Byb3A6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVCh0aGlzLHIucHJvcCxhLGIsYXJndW1lbnRzLmxlbmd0aD4xKX0scmVtb3ZlUHJvcDpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7ZGVsZXRlIHRoaXNbci5wcm9wRml4W2FdfHxhXX0pfX0pLHIuZXh0ZW5kKHtwcm9wOmZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlLGY9YS5ub2RlVHlwZTtpZigzIT09ZiYmOCE9PWYmJjIhPT1mKXJldHVybiAxPT09ZiYmci5pc1hNTERvYyhhKXx8KGI9ci5wcm9wRml4W2JdfHxiLGU9ci5wcm9wSG9va3NbYl0pLHZvaWQgMCE9PWM/ZSYmXCJzZXRcImluIGUmJnZvaWQgMCE9PShkPWUuc2V0KGEsYyxiKSk/ZDphW2JdPWM6ZSYmXCJnZXRcImluIGUmJm51bGwhPT0oZD1lLmdldChhLGIpKT9kOmFbYl19LHByb3BIb29rczp7dGFiSW5kZXg6e2dldDpmdW5jdGlvbihhKXt2YXIgYj1yLmZpbmQuYXR0cihhLFwidGFiaW5kZXhcIik7cmV0dXJuIGI/cGFyc2VJbnQoYiwxMCk6bmIudGVzdChhLm5vZGVOYW1lKXx8b2IudGVzdChhLm5vZGVOYW1lKSYmYS5ocmVmPzA6LTF9fX0scHJvcEZpeDp7XCJmb3JcIjpcImh0bWxGb3JcIixcImNsYXNzXCI6XCJjbGFzc05hbWVcIn19KSxvLm9wdFNlbGVjdGVkfHwoci5wcm9wSG9va3Muc2VsZWN0ZWQ9e2dldDpmdW5jdGlvbihhKXt2YXIgYj1hLnBhcmVudE5vZGU7cmV0dXJuIGImJmIucGFyZW50Tm9kZSYmYi5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXgsbnVsbH0sc2V0OmZ1bmN0aW9uKGEpe3ZhciBiPWEucGFyZW50Tm9kZTtiJiYoYi5zZWxlY3RlZEluZGV4LGIucGFyZW50Tm9kZSYmYi5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXgpfX0pLHIuZWFjaChbXCJ0YWJJbmRleFwiLFwicmVhZE9ubHlcIixcIm1heExlbmd0aFwiLFwiY2VsbFNwYWNpbmdcIixcImNlbGxQYWRkaW5nXCIsXCJyb3dTcGFuXCIsXCJjb2xTcGFuXCIsXCJ1c2VNYXBcIixcImZyYW1lQm9yZGVyXCIsXCJjb250ZW50RWRpdGFibGVcIl0sZnVuY3Rpb24oKXtyLnByb3BGaXhbdGhpcy50b0xvd2VyQ2FzZSgpXT10aGlzfSk7ZnVuY3Rpb24gcGIoYSl7dmFyIGI9YS5tYXRjaChMKXx8W107cmV0dXJuIGIuam9pbihcIiBcIil9ZnVuY3Rpb24gcWIoYSl7cmV0dXJuIGEuZ2V0QXR0cmlidXRlJiZhLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpfHxcIlwifXIuZm4uZXh0ZW5kKHthZGRDbGFzczpmdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGcsaCxpPTA7aWYoci5pc0Z1bmN0aW9uKGEpKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oYil7cih0aGlzKS5hZGRDbGFzcyhhLmNhbGwodGhpcyxiLHFiKHRoaXMpKSl9KTtpZihcInN0cmluZ1wiPT10eXBlb2YgYSYmYSl7Yj1hLm1hdGNoKEwpfHxbXTt3aGlsZShjPXRoaXNbaSsrXSlpZihlPXFiKGMpLGQ9MT09PWMubm9kZVR5cGUmJlwiIFwiK3BiKGUpK1wiIFwiKXtnPTA7d2hpbGUoZj1iW2crK10pZC5pbmRleE9mKFwiIFwiK2YrXCIgXCIpPDAmJihkKz1mK1wiIFwiKTtoPXBiKGQpLGUhPT1oJiZjLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsaCl9fXJldHVybiB0aGlzfSxyZW1vdmVDbGFzczpmdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGcsaCxpPTA7aWYoci5pc0Z1bmN0aW9uKGEpKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oYil7cih0aGlzKS5yZW1vdmVDbGFzcyhhLmNhbGwodGhpcyxiLHFiKHRoaXMpKSl9KTtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdGhpcy5hdHRyKFwiY2xhc3NcIixcIlwiKTtpZihcInN0cmluZ1wiPT10eXBlb2YgYSYmYSl7Yj1hLm1hdGNoKEwpfHxbXTt3aGlsZShjPXRoaXNbaSsrXSlpZihlPXFiKGMpLGQ9MT09PWMubm9kZVR5cGUmJlwiIFwiK3BiKGUpK1wiIFwiKXtnPTA7d2hpbGUoZj1iW2crK10pd2hpbGUoZC5pbmRleE9mKFwiIFwiK2YrXCIgXCIpPi0xKWQ9ZC5yZXBsYWNlKFwiIFwiK2YrXCIgXCIsXCIgXCIpO2g9cGIoZCksZSE9PWgmJmMuc2V0QXR0cmlidXRlKFwiY2xhc3NcIixoKX19cmV0dXJuIHRoaXN9LHRvZ2dsZUNsYXNzOmZ1bmN0aW9uKGEsYil7dmFyIGM9dHlwZW9mIGE7cmV0dXJuXCJib29sZWFuXCI9PXR5cGVvZiBiJiZcInN0cmluZ1wiPT09Yz9iP3RoaXMuYWRkQ2xhc3MoYSk6dGhpcy5yZW1vdmVDbGFzcyhhKTpyLmlzRnVuY3Rpb24oYSk/dGhpcy5lYWNoKGZ1bmN0aW9uKGMpe3IodGhpcykudG9nZ2xlQ2xhc3MoYS5jYWxsKHRoaXMsYyxxYih0aGlzKSxiKSxiKX0pOnRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBiLGQsZSxmO2lmKFwic3RyaW5nXCI9PT1jKXtkPTAsZT1yKHRoaXMpLGY9YS5tYXRjaChMKXx8W107d2hpbGUoYj1mW2QrK10pZS5oYXNDbGFzcyhiKT9lLnJlbW92ZUNsYXNzKGIpOmUuYWRkQ2xhc3MoYil9ZWxzZSB2b2lkIDAhPT1hJiZcImJvb2xlYW5cIiE9PWN8fChiPXFiKHRoaXMpLGImJlcuc2V0KHRoaXMsXCJfX2NsYXNzTmFtZV9fXCIsYiksdGhpcy5zZXRBdHRyaWJ1dGUmJnRoaXMuc2V0QXR0cmlidXRlKFwiY2xhc3NcIixifHxhPT09ITE/XCJcIjpXLmdldCh0aGlzLFwiX19jbGFzc05hbWVfX1wiKXx8XCJcIikpfSl9LGhhc0NsYXNzOmZ1bmN0aW9uKGEpe3ZhciBiLGMsZD0wO2I9XCIgXCIrYStcIiBcIjt3aGlsZShjPXRoaXNbZCsrXSlpZigxPT09Yy5ub2RlVHlwZSYmKFwiIFwiK3BiKHFiKGMpKStcIiBcIikuaW5kZXhPZihiKT4tMSlyZXR1cm4hMDtyZXR1cm4hMX19KTt2YXIgcmI9L1xcci9nO3IuZm4uZXh0ZW5kKHt2YWw6ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU9dGhpc1swXTt7aWYoYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZD1yLmlzRnVuY3Rpb24oYSksdGhpcy5lYWNoKGZ1bmN0aW9uKGMpe3ZhciBlOzE9PT10aGlzLm5vZGVUeXBlJiYoZT1kP2EuY2FsbCh0aGlzLGMscih0aGlzKS52YWwoKSk6YSxudWxsPT1lP2U9XCJcIjpcIm51bWJlclwiPT10eXBlb2YgZT9lKz1cIlwiOkFycmF5LmlzQXJyYXkoZSkmJihlPXIubWFwKGUsZnVuY3Rpb24oYSl7cmV0dXJuIG51bGw9PWE/XCJcIjphK1wiXCJ9KSksYj1yLnZhbEhvb2tzW3RoaXMudHlwZV18fHIudmFsSG9va3NbdGhpcy5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpXSxiJiZcInNldFwiaW4gYiYmdm9pZCAwIT09Yi5zZXQodGhpcyxlLFwidmFsdWVcIil8fCh0aGlzLnZhbHVlPWUpKX0pO2lmKGUpcmV0dXJuIGI9ci52YWxIb29rc1tlLnR5cGVdfHxyLnZhbEhvb2tzW2Uubm9kZU5hbWUudG9Mb3dlckNhc2UoKV0sYiYmXCJnZXRcImluIGImJnZvaWQgMCE9PShjPWIuZ2V0KGUsXCJ2YWx1ZVwiKSk/YzooYz1lLnZhbHVlLFwic3RyaW5nXCI9PXR5cGVvZiBjP2MucmVwbGFjZShyYixcIlwiKTpudWxsPT1jP1wiXCI6Yyl9fX0pLHIuZXh0ZW5kKHt2YWxIb29rczp7b3B0aW9uOntnZXQ6ZnVuY3Rpb24oYSl7dmFyIGI9ci5maW5kLmF0dHIoYSxcInZhbHVlXCIpO3JldHVybiBudWxsIT1iP2I6cGIoci50ZXh0KGEpKX19LHNlbGVjdDp7Z2V0OmZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlPWEub3B0aW9ucyxmPWEuc2VsZWN0ZWRJbmRleCxnPVwic2VsZWN0LW9uZVwiPT09YS50eXBlLGg9Zz9udWxsOltdLGk9Zz9mKzE6ZS5sZW5ndGg7Zm9yKGQ9ZjwwP2k6Zz9mOjA7ZDxpO2QrKylpZihjPWVbZF0sKGMuc2VsZWN0ZWR8fGQ9PT1mKSYmIWMuZGlzYWJsZWQmJighYy5wYXJlbnROb2RlLmRpc2FibGVkfHwhQihjLnBhcmVudE5vZGUsXCJvcHRncm91cFwiKSkpe2lmKGI9cihjKS52YWwoKSxnKXJldHVybiBiO2gucHVzaChiKX1yZXR1cm4gaH0sc2V0OmZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlPWEub3B0aW9ucyxmPXIubWFrZUFycmF5KGIpLGc9ZS5sZW5ndGg7d2hpbGUoZy0tKWQ9ZVtnXSwoZC5zZWxlY3RlZD1yLmluQXJyYXkoci52YWxIb29rcy5vcHRpb24uZ2V0KGQpLGYpPi0xKSYmKGM9ITApO3JldHVybiBjfHwoYS5zZWxlY3RlZEluZGV4PS0xKSxmfX19fSksci5lYWNoKFtcInJhZGlvXCIsXCJjaGVja2JveFwiXSxmdW5jdGlvbigpe3IudmFsSG9va3NbdGhpc109e3NldDpmdW5jdGlvbihhLGIpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEuY2hlY2tlZD1yLmluQXJyYXkocihhKS52YWwoKSxiKT4tMX19LG8uY2hlY2tPbnx8KHIudmFsSG9va3NbdGhpc10uZ2V0PWZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT09YS5nZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiKT9cIm9uXCI6YS52YWx1ZX0pfSk7dmFyIHNiPS9eKD86Zm9jdXNpbmZvY3VzfGZvY3Vzb3V0Ymx1cikkLztyLmV4dGVuZChyLmV2ZW50LHt0cmlnZ2VyOmZ1bmN0aW9uKGIsYyxlLGYpe3ZhciBnLGgsaSxqLGssbSxuLG89W2V8fGRdLHA9bC5jYWxsKGIsXCJ0eXBlXCIpP2IudHlwZTpiLHE9bC5jYWxsKGIsXCJuYW1lc3BhY2VcIik/Yi5uYW1lc3BhY2Uuc3BsaXQoXCIuXCIpOltdO2lmKGg9aT1lPWV8fGQsMyE9PWUubm9kZVR5cGUmJjghPT1lLm5vZGVUeXBlJiYhc2IudGVzdChwK3IuZXZlbnQudHJpZ2dlcmVkKSYmKHAuaW5kZXhPZihcIi5cIik+LTEmJihxPXAuc3BsaXQoXCIuXCIpLHA9cS5zaGlmdCgpLHEuc29ydCgpKSxrPXAuaW5kZXhPZihcIjpcIik8MCYmXCJvblwiK3AsYj1iW3IuZXhwYW5kb10/YjpuZXcgci5FdmVudChwLFwib2JqZWN0XCI9PXR5cGVvZiBiJiZiKSxiLmlzVHJpZ2dlcj1mPzI6MyxiLm5hbWVzcGFjZT1xLmpvaW4oXCIuXCIpLGIucm5hbWVzcGFjZT1iLm5hbWVzcGFjZT9uZXcgUmVnRXhwKFwiKF58XFxcXC4pXCIrcS5qb2luKFwiXFxcXC4oPzouKlxcXFwufClcIikrXCIoXFxcXC58JClcIik6bnVsbCxiLnJlc3VsdD12b2lkIDAsYi50YXJnZXR8fChiLnRhcmdldD1lKSxjPW51bGw9PWM/W2JdOnIubWFrZUFycmF5KGMsW2JdKSxuPXIuZXZlbnQuc3BlY2lhbFtwXXx8e30sZnx8IW4udHJpZ2dlcnx8bi50cmlnZ2VyLmFwcGx5KGUsYykhPT0hMSkpe2lmKCFmJiYhbi5ub0J1YmJsZSYmIXIuaXNXaW5kb3coZSkpe2ZvcihqPW4uZGVsZWdhdGVUeXBlfHxwLHNiLnRlc3QoaitwKXx8KGg9aC5wYXJlbnROb2RlKTtoO2g9aC5wYXJlbnROb2RlKW8ucHVzaChoKSxpPWg7aT09PShlLm93bmVyRG9jdW1lbnR8fGQpJiZvLnB1c2goaS5kZWZhdWx0Vmlld3x8aS5wYXJlbnRXaW5kb3d8fGEpfWc9MDt3aGlsZSgoaD1vW2crK10pJiYhYi5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWIudHlwZT1nPjE/ajpuLmJpbmRUeXBlfHxwLG09KFcuZ2V0KGgsXCJldmVudHNcIil8fHt9KVtiLnR5cGVdJiZXLmdldChoLFwiaGFuZGxlXCIpLG0mJm0uYXBwbHkoaCxjKSxtPWsmJmhba10sbSYmbS5hcHBseSYmVShoKSYmKGIucmVzdWx0PW0uYXBwbHkoaCxjKSxiLnJlc3VsdD09PSExJiZiLnByZXZlbnREZWZhdWx0KCkpO3JldHVybiBiLnR5cGU9cCxmfHxiLmlzRGVmYXVsdFByZXZlbnRlZCgpfHxuLl9kZWZhdWx0JiZuLl9kZWZhdWx0LmFwcGx5KG8ucG9wKCksYykhPT0hMXx8IVUoZSl8fGsmJnIuaXNGdW5jdGlvbihlW3BdKSYmIXIuaXNXaW5kb3coZSkmJihpPWVba10saSYmKGVba109bnVsbCksci5ldmVudC50cmlnZ2VyZWQ9cCxlW3BdKCksci5ldmVudC50cmlnZ2VyZWQ9dm9pZCAwLGkmJihlW2tdPWkpKSxiLnJlc3VsdH19LHNpbXVsYXRlOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1yLmV4dGVuZChuZXcgci5FdmVudCxjLHt0eXBlOmEsaXNTaW11bGF0ZWQ6ITB9KTtyLmV2ZW50LnRyaWdnZXIoZCxudWxsLGIpfX0pLHIuZm4uZXh0ZW5kKHt0cmlnZ2VyOmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3IuZXZlbnQudHJpZ2dlcihhLGIsdGhpcyl9KX0sdHJpZ2dlckhhbmRsZXI6ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzWzBdO2lmKGMpcmV0dXJuIHIuZXZlbnQudHJpZ2dlcihhLGIsYywhMCl9fSksci5lYWNoKFwiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IHJlc2l6ZSBzY3JvbGwgY2xpY2sgZGJsY2xpY2sgbW91c2Vkb3duIG1vdXNldXAgbW91c2Vtb3ZlIG1vdXNlb3ZlciBtb3VzZW91dCBtb3VzZWVudGVyIG1vdXNlbGVhdmUgY2hhbmdlIHNlbGVjdCBzdWJtaXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBjb250ZXh0bWVudVwiLnNwbGl0KFwiIFwiKSxmdW5jdGlvbihhLGIpe3IuZm5bYl09ZnVuY3Rpb24oYSxjKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD4wP3RoaXMub24oYixudWxsLGEsYyk6dGhpcy50cmlnZ2VyKGIpfX0pLHIuZm4uZXh0ZW5kKHtob3ZlcjpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLm1vdXNlZW50ZXIoYSkubW91c2VsZWF2ZShifHxhKX19KSxvLmZvY3VzaW49XCJvbmZvY3VzaW5cImluIGEsby5mb2N1c2lufHxyLmVhY2goe2ZvY3VzOlwiZm9jdXNpblwiLGJsdXI6XCJmb2N1c291dFwifSxmdW5jdGlvbihhLGIpe3ZhciBjPWZ1bmN0aW9uKGEpe3IuZXZlbnQuc2ltdWxhdGUoYixhLnRhcmdldCxyLmV2ZW50LmZpeChhKSl9O3IuZXZlbnQuc3BlY2lhbFtiXT17c2V0dXA6ZnVuY3Rpb24oKXt2YXIgZD10aGlzLm93bmVyRG9jdW1lbnR8fHRoaXMsZT1XLmFjY2VzcyhkLGIpO2V8fGQuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITApLFcuYWNjZXNzKGQsYiwoZXx8MCkrMSl9LHRlYXJkb3duOmZ1bmN0aW9uKCl7dmFyIGQ9dGhpcy5vd25lckRvY3VtZW50fHx0aGlzLGU9Vy5hY2Nlc3MoZCxiKS0xO2U/Vy5hY2Nlc3MoZCxiLGUpOihkLnJlbW92ZUV2ZW50TGlzdGVuZXIoYSxjLCEwKSxXLnJlbW92ZShkLGIpKX19fSk7dmFyIHRiPWEubG9jYXRpb24sdWI9ci5ub3coKSx2Yj0vXFw/LztyLnBhcnNlWE1MPWZ1bmN0aW9uKGIpe3ZhciBjO2lmKCFifHxcInN0cmluZ1wiIT10eXBlb2YgYilyZXR1cm4gbnVsbDt0cnl7Yz0obmV3IGEuRE9NUGFyc2VyKS5wYXJzZUZyb21TdHJpbmcoYixcInRleHQveG1sXCIpfWNhdGNoKGQpe2M9dm9pZCAwfXJldHVybiBjJiYhYy5nZXRFbGVtZW50c0J5VGFnTmFtZShcInBhcnNlcmVycm9yXCIpLmxlbmd0aHx8ci5lcnJvcihcIkludmFsaWQgWE1MOiBcIitiKSxjfTt2YXIgd2I9L1xcW1xcXSQvLHhiPS9cXHI/XFxuL2cseWI9L14oPzpzdWJtaXR8YnV0dG9ufGltYWdlfHJlc2V0fGZpbGUpJC9pLHpiPS9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGtleWdlbikvaTtmdW5jdGlvbiBBYihhLGIsYyxkKXt2YXIgZTtpZihBcnJheS5pc0FycmF5KGIpKXIuZWFjaChiLGZ1bmN0aW9uKGIsZSl7Y3x8d2IudGVzdChhKT9kKGEsZSk6QWIoYStcIltcIisoXCJvYmplY3RcIj09dHlwZW9mIGUmJm51bGwhPWU/YjpcIlwiKStcIl1cIixlLGMsZCl9KTtlbHNlIGlmKGN8fFwib2JqZWN0XCIhPT1yLnR5cGUoYikpZChhLGIpO2Vsc2UgZm9yKGUgaW4gYilBYihhK1wiW1wiK2UrXCJdXCIsYltlXSxjLGQpfXIucGFyYW09ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPVtdLGU9ZnVuY3Rpb24oYSxiKXt2YXIgYz1yLmlzRnVuY3Rpb24oYik/YigpOmI7ZFtkLmxlbmd0aF09ZW5jb2RlVVJJQ29tcG9uZW50KGEpK1wiPVwiK2VuY29kZVVSSUNvbXBvbmVudChudWxsPT1jP1wiXCI6Yyl9O2lmKEFycmF5LmlzQXJyYXkoYSl8fGEuanF1ZXJ5JiYhci5pc1BsYWluT2JqZWN0KGEpKXIuZWFjaChhLGZ1bmN0aW9uKCl7ZSh0aGlzLm5hbWUsdGhpcy52YWx1ZSl9KTtlbHNlIGZvcihjIGluIGEpQWIoYyxhW2NdLGIsZSk7cmV0dXJuIGQuam9pbihcIiZcIil9LHIuZm4uZXh0ZW5kKHtzZXJpYWxpemU6ZnVuY3Rpb24oKXtyZXR1cm4gci5wYXJhbSh0aGlzLnNlcmlhbGl6ZUFycmF5KCkpfSxzZXJpYWxpemVBcnJheTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbigpe3ZhciBhPXIucHJvcCh0aGlzLFwiZWxlbWVudHNcIik7cmV0dXJuIGE/ci5tYWtlQXJyYXkoYSk6dGhpc30pLmZpbHRlcihmdW5jdGlvbigpe3ZhciBhPXRoaXMudHlwZTtyZXR1cm4gdGhpcy5uYW1lJiYhcih0aGlzKS5pcyhcIjpkaXNhYmxlZFwiKSYmemIudGVzdCh0aGlzLm5vZGVOYW1lKSYmIXliLnRlc3QoYSkmJih0aGlzLmNoZWNrZWR8fCFqYS50ZXN0KGEpKX0pLm1hcChmdW5jdGlvbihhLGIpe3ZhciBjPXIodGhpcykudmFsKCk7cmV0dXJuIG51bGw9PWM/bnVsbDpBcnJheS5pc0FycmF5KGMpP3IubWFwKGMsZnVuY3Rpb24oYSl7cmV0dXJue25hbWU6Yi5uYW1lLHZhbHVlOmEucmVwbGFjZSh4YixcIlxcclxcblwiKX19KTp7bmFtZTpiLm5hbWUsdmFsdWU6Yy5yZXBsYWNlKHhiLFwiXFxyXFxuXCIpfX0pLmdldCgpfX0pO3ZhciBCYj0vJTIwL2csQ2I9LyMuKiQvLERiPS8oWz8mXSlfPVteJl0qLyxFYj0vXiguKj8pOlsgXFx0XSooW15cXHJcXG5dKikkL2dtLEZiPS9eKD86YWJvdXR8YXBwfGFwcC1zdG9yYWdlfC4rLWV4dGVuc2lvbnxmaWxlfHJlc3x3aWRnZXQpOiQvLEdiPS9eKD86R0VUfEhFQUQpJC8sSGI9L15cXC9cXC8vLEliPXt9LEpiPXt9LEtiPVwiKi9cIi5jb25jYXQoXCIqXCIpLExiPWQuY3JlYXRlRWxlbWVudChcImFcIik7TGIuaHJlZj10Yi5ocmVmO2Z1bmN0aW9uIE1iKGEpe3JldHVybiBmdW5jdGlvbihiLGMpe1wic3RyaW5nXCIhPXR5cGVvZiBiJiYoYz1iLGI9XCIqXCIpO3ZhciBkLGU9MCxmPWIudG9Mb3dlckNhc2UoKS5tYXRjaChMKXx8W107aWYoci5pc0Z1bmN0aW9uKGMpKXdoaWxlKGQ9ZltlKytdKVwiK1wiPT09ZFswXT8oZD1kLnNsaWNlKDEpfHxcIipcIiwoYVtkXT1hW2RdfHxbXSkudW5zaGlmdChjKSk6KGFbZF09YVtkXXx8W10pLnB1c2goYyl9fWZ1bmN0aW9uIE5iKGEsYixjLGQpe3ZhciBlPXt9LGY9YT09PUpiO2Z1bmN0aW9uIGcoaCl7dmFyIGk7cmV0dXJuIGVbaF09ITAsci5lYWNoKGFbaF18fFtdLGZ1bmN0aW9uKGEsaCl7dmFyIGo9aChiLGMsZCk7cmV0dXJuXCJzdHJpbmdcIiE9dHlwZW9mIGp8fGZ8fGVbal0/Zj8hKGk9aik6dm9pZCAwOihiLmRhdGFUeXBlcy51bnNoaWZ0KGopLGcoaiksITEpfSksaX1yZXR1cm4gZyhiLmRhdGFUeXBlc1swXSl8fCFlW1wiKlwiXSYmZyhcIipcIil9ZnVuY3Rpb24gT2IoYSxiKXt2YXIgYyxkLGU9ci5hamF4U2V0dGluZ3MuZmxhdE9wdGlvbnN8fHt9O2ZvcihjIGluIGIpdm9pZCAwIT09YltjXSYmKChlW2NdP2E6ZHx8KGQ9e30pKVtjXT1iW2NdKTtyZXR1cm4gZCYmci5leHRlbmQoITAsYSxkKSxhfWZ1bmN0aW9uIFBiKGEsYixjKXt2YXIgZCxlLGYsZyxoPWEuY29udGVudHMsaT1hLmRhdGFUeXBlczt3aGlsZShcIipcIj09PWlbMF0paS5zaGlmdCgpLHZvaWQgMD09PWQmJihkPWEubWltZVR5cGV8fGIuZ2V0UmVzcG9uc2VIZWFkZXIoXCJDb250ZW50LVR5cGVcIikpO2lmKGQpZm9yKGUgaW4gaClpZihoW2VdJiZoW2VdLnRlc3QoZCkpe2kudW5zaGlmdChlKTticmVha31pZihpWzBdaW4gYylmPWlbMF07ZWxzZXtmb3IoZSBpbiBjKXtpZighaVswXXx8YS5jb252ZXJ0ZXJzW2UrXCIgXCIraVswXV0pe2Y9ZTticmVha31nfHwoZz1lKX1mPWZ8fGd9aWYoZilyZXR1cm4gZiE9PWlbMF0mJmkudW5zaGlmdChmKSxjW2ZdfWZ1bmN0aW9uIFFiKGEsYixjLGQpe3ZhciBlLGYsZyxoLGksaj17fSxrPWEuZGF0YVR5cGVzLnNsaWNlKCk7aWYoa1sxXSlmb3IoZyBpbiBhLmNvbnZlcnRlcnMpaltnLnRvTG93ZXJDYXNlKCldPWEuY29udmVydGVyc1tnXTtmPWsuc2hpZnQoKTt3aGlsZShmKWlmKGEucmVzcG9uc2VGaWVsZHNbZl0mJihjW2EucmVzcG9uc2VGaWVsZHNbZl1dPWIpLCFpJiZkJiZhLmRhdGFGaWx0ZXImJihiPWEuZGF0YUZpbHRlcihiLGEuZGF0YVR5cGUpKSxpPWYsZj1rLnNoaWZ0KCkpaWYoXCIqXCI9PT1mKWY9aTtlbHNlIGlmKFwiKlwiIT09aSYmaSE9PWYpe2lmKGc9altpK1wiIFwiK2ZdfHxqW1wiKiBcIitmXSwhZylmb3IoZSBpbiBqKWlmKGg9ZS5zcGxpdChcIiBcIiksaFsxXT09PWYmJihnPWpbaStcIiBcIitoWzBdXXx8altcIiogXCIraFswXV0pKXtnPT09ITA/Zz1qW2VdOmpbZV0hPT0hMCYmKGY9aFswXSxrLnVuc2hpZnQoaFsxXSkpO2JyZWFrfWlmKGchPT0hMClpZihnJiZhW1widGhyb3dzXCJdKWI9ZyhiKTtlbHNlIHRyeXtiPWcoYil9Y2F0Y2gobCl7cmV0dXJue3N0YXRlOlwicGFyc2VyZXJyb3JcIixlcnJvcjpnP2w6XCJObyBjb252ZXJzaW9uIGZyb20gXCIraStcIiB0byBcIitmfX19cmV0dXJue3N0YXRlOlwic3VjY2Vzc1wiLGRhdGE6Yn19ci5leHRlbmQoe2FjdGl2ZTowLGxhc3RNb2RpZmllZDp7fSxldGFnOnt9LGFqYXhTZXR0aW5nczp7dXJsOnRiLmhyZWYsdHlwZTpcIkdFVFwiLGlzTG9jYWw6RmIudGVzdCh0Yi5wcm90b2NvbCksZ2xvYmFsOiEwLHByb2Nlc3NEYXRhOiEwLGFzeW5jOiEwLGNvbnRlbnRUeXBlOlwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04XCIsYWNjZXB0czp7XCIqXCI6S2IsdGV4dDpcInRleHQvcGxhaW5cIixodG1sOlwidGV4dC9odG1sXCIseG1sOlwiYXBwbGljYXRpb24veG1sLCB0ZXh0L3htbFwiLGpzb246XCJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHRcIn0sY29udGVudHM6e3htbDovXFxieG1sXFxiLyxodG1sOi9cXGJodG1sLyxqc29uOi9cXGJqc29uXFxiL30scmVzcG9uc2VGaWVsZHM6e3htbDpcInJlc3BvbnNlWE1MXCIsdGV4dDpcInJlc3BvbnNlVGV4dFwiLGpzb246XCJyZXNwb25zZUpTT05cIn0sY29udmVydGVyczp7XCIqIHRleHRcIjpTdHJpbmcsXCJ0ZXh0IGh0bWxcIjohMCxcInRleHQganNvblwiOkpTT04ucGFyc2UsXCJ0ZXh0IHhtbFwiOnIucGFyc2VYTUx9LGZsYXRPcHRpb25zOnt1cmw6ITAsY29udGV4dDohMH19LGFqYXhTZXR1cDpmdW5jdGlvbihhLGIpe3JldHVybiBiP09iKE9iKGEsci5hamF4U2V0dGluZ3MpLGIpOk9iKHIuYWpheFNldHRpbmdzLGEpfSxhamF4UHJlZmlsdGVyOk1iKEliKSxhamF4VHJhbnNwb3J0Ok1iKEpiKSxhamF4OmZ1bmN0aW9uKGIsYyl7XCJvYmplY3RcIj09dHlwZW9mIGImJihjPWIsYj12b2lkIDApLGM9Y3x8e307dmFyIGUsZixnLGgsaSxqLGssbCxtLG4sbz1yLmFqYXhTZXR1cCh7fSxjKSxwPW8uY29udGV4dHx8byxxPW8uY29udGV4dCYmKHAubm9kZVR5cGV8fHAuanF1ZXJ5KT9yKHApOnIuZXZlbnQscz1yLkRlZmVycmVkKCksdD1yLkNhbGxiYWNrcyhcIm9uY2UgbWVtb3J5XCIpLHU9by5zdGF0dXNDb2RlfHx7fSx2PXt9LHc9e30seD1cImNhbmNlbGVkXCIseT17cmVhZHlTdGF0ZTowLGdldFJlc3BvbnNlSGVhZGVyOmZ1bmN0aW9uKGEpe3ZhciBiO2lmKGspe2lmKCFoKXtoPXt9O3doaWxlKGI9RWIuZXhlYyhnKSloW2JbMV0udG9Mb3dlckNhc2UoKV09YlsyXX1iPWhbYS50b0xvd2VyQ2FzZSgpXX1yZXR1cm4gbnVsbD09Yj9udWxsOmJ9LGdldEFsbFJlc3BvbnNlSGVhZGVyczpmdW5jdGlvbigpe3JldHVybiBrP2c6bnVsbH0sc2V0UmVxdWVzdEhlYWRlcjpmdW5jdGlvbihhLGIpe3JldHVybiBudWxsPT1rJiYoYT13W2EudG9Mb3dlckNhc2UoKV09d1thLnRvTG93ZXJDYXNlKCldfHxhLHZbYV09YiksdGhpc30sb3ZlcnJpZGVNaW1lVHlwZTpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09ayYmKG8ubWltZVR5cGU9YSksdGhpc30sc3RhdHVzQ29kZTpmdW5jdGlvbihhKXt2YXIgYjtpZihhKWlmKGspeS5hbHdheXMoYVt5LnN0YXR1c10pO2Vsc2UgZm9yKGIgaW4gYSl1W2JdPVt1W2JdLGFbYl1dO3JldHVybiB0aGlzfSxhYm9ydDpmdW5jdGlvbihhKXt2YXIgYj1hfHx4O3JldHVybiBlJiZlLmFib3J0KGIpLEEoMCxiKSx0aGlzfX07aWYocy5wcm9taXNlKHkpLG8udXJsPSgoYnx8by51cmx8fHRiLmhyZWYpK1wiXCIpLnJlcGxhY2UoSGIsdGIucHJvdG9jb2wrXCIvL1wiKSxvLnR5cGU9Yy5tZXRob2R8fGMudHlwZXx8by5tZXRob2R8fG8udHlwZSxvLmRhdGFUeXBlcz0oby5kYXRhVHlwZXx8XCIqXCIpLnRvTG93ZXJDYXNlKCkubWF0Y2goTCl8fFtcIlwiXSxudWxsPT1vLmNyb3NzRG9tYWluKXtqPWQuY3JlYXRlRWxlbWVudChcImFcIik7dHJ5e2ouaHJlZj1vLnVybCxqLmhyZWY9ai5ocmVmLG8uY3Jvc3NEb21haW49TGIucHJvdG9jb2wrXCIvL1wiK0xiLmhvc3QhPWoucHJvdG9jb2wrXCIvL1wiK2ouaG9zdH1jYXRjaCh6KXtvLmNyb3NzRG9tYWluPSEwfX1pZihvLmRhdGEmJm8ucHJvY2Vzc0RhdGEmJlwic3RyaW5nXCIhPXR5cGVvZiBvLmRhdGEmJihvLmRhdGE9ci5wYXJhbShvLmRhdGEsby50cmFkaXRpb25hbCkpLE5iKEliLG8sYyx5KSxrKXJldHVybiB5O2w9ci5ldmVudCYmby5nbG9iYWwsbCYmMD09PXIuYWN0aXZlKysmJnIuZXZlbnQudHJpZ2dlcihcImFqYXhTdGFydFwiKSxvLnR5cGU9by50eXBlLnRvVXBwZXJDYXNlKCksby5oYXNDb250ZW50PSFHYi50ZXN0KG8udHlwZSksZj1vLnVybC5yZXBsYWNlKENiLFwiXCIpLG8uaGFzQ29udGVudD9vLmRhdGEmJm8ucHJvY2Vzc0RhdGEmJjA9PT0oby5jb250ZW50VHlwZXx8XCJcIikuaW5kZXhPZihcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiKSYmKG8uZGF0YT1vLmRhdGEucmVwbGFjZShCYixcIitcIikpOihuPW8udXJsLnNsaWNlKGYubGVuZ3RoKSxvLmRhdGEmJihmKz0odmIudGVzdChmKT9cIiZcIjpcIj9cIikrby5kYXRhLGRlbGV0ZSBvLmRhdGEpLG8uY2FjaGU9PT0hMSYmKGY9Zi5yZXBsYWNlKERiLFwiJDFcIiksbj0odmIudGVzdChmKT9cIiZcIjpcIj9cIikrXCJfPVwiK3ViKysgK24pLG8udXJsPWYrbiksby5pZk1vZGlmaWVkJiYoci5sYXN0TW9kaWZpZWRbZl0mJnkuc2V0UmVxdWVzdEhlYWRlcihcIklmLU1vZGlmaWVkLVNpbmNlXCIsci5sYXN0TW9kaWZpZWRbZl0pLHIuZXRhZ1tmXSYmeS5zZXRSZXF1ZXN0SGVhZGVyKFwiSWYtTm9uZS1NYXRjaFwiLHIuZXRhZ1tmXSkpLChvLmRhdGEmJm8uaGFzQ29udGVudCYmby5jb250ZW50VHlwZSE9PSExfHxjLmNvbnRlbnRUeXBlKSYmeS5zZXRSZXF1ZXN0SGVhZGVyKFwiQ29udGVudC1UeXBlXCIsby5jb250ZW50VHlwZSkseS5zZXRSZXF1ZXN0SGVhZGVyKFwiQWNjZXB0XCIsby5kYXRhVHlwZXNbMF0mJm8uYWNjZXB0c1tvLmRhdGFUeXBlc1swXV0/by5hY2NlcHRzW28uZGF0YVR5cGVzWzBdXSsoXCIqXCIhPT1vLmRhdGFUeXBlc1swXT9cIiwgXCIrS2IrXCI7IHE9MC4wMVwiOlwiXCIpOm8uYWNjZXB0c1tcIipcIl0pO2ZvcihtIGluIG8uaGVhZGVycyl5LnNldFJlcXVlc3RIZWFkZXIobSxvLmhlYWRlcnNbbV0pO2lmKG8uYmVmb3JlU2VuZCYmKG8uYmVmb3JlU2VuZC5jYWxsKHAseSxvKT09PSExfHxrKSlyZXR1cm4geS5hYm9ydCgpO2lmKHg9XCJhYm9ydFwiLHQuYWRkKG8uY29tcGxldGUpLHkuZG9uZShvLnN1Y2Nlc3MpLHkuZmFpbChvLmVycm9yKSxlPU5iKEpiLG8sYyx5KSl7aWYoeS5yZWFkeVN0YXRlPTEsbCYmcS50cmlnZ2VyKFwiYWpheFNlbmRcIixbeSxvXSksaylyZXR1cm4geTtvLmFzeW5jJiZvLnRpbWVvdXQ+MCYmKGk9YS5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7eS5hYm9ydChcInRpbWVvdXRcIil9LG8udGltZW91dCkpO3RyeXtrPSExLGUuc2VuZCh2LEEpfWNhdGNoKHope2lmKGspdGhyb3cgejtBKC0xLHopfX1lbHNlIEEoLTEsXCJObyBUcmFuc3BvcnRcIik7ZnVuY3Rpb24gQShiLGMsZCxoKXt2YXIgaixtLG4sdix3LHg9YztrfHwoaz0hMCxpJiZhLmNsZWFyVGltZW91dChpKSxlPXZvaWQgMCxnPWh8fFwiXCIseS5yZWFkeVN0YXRlPWI+MD80OjAsaj1iPj0yMDAmJmI8MzAwfHwzMDQ9PT1iLGQmJih2PVBiKG8seSxkKSksdj1RYihvLHYseSxqKSxqPyhvLmlmTW9kaWZpZWQmJih3PXkuZ2V0UmVzcG9uc2VIZWFkZXIoXCJMYXN0LU1vZGlmaWVkXCIpLHcmJihyLmxhc3RNb2RpZmllZFtmXT13KSx3PXkuZ2V0UmVzcG9uc2VIZWFkZXIoXCJldGFnXCIpLHcmJihyLmV0YWdbZl09dykpLDIwND09PWJ8fFwiSEVBRFwiPT09by50eXBlP3g9XCJub2NvbnRlbnRcIjozMDQ9PT1iP3g9XCJub3Rtb2RpZmllZFwiOih4PXYuc3RhdGUsbT12LmRhdGEsbj12LmVycm9yLGo9IW4pKToobj14LCFiJiZ4fHwoeD1cImVycm9yXCIsYjwwJiYoYj0wKSkpLHkuc3RhdHVzPWIseS5zdGF0dXNUZXh0PShjfHx4KStcIlwiLGo/cy5yZXNvbHZlV2l0aChwLFttLHgseV0pOnMucmVqZWN0V2l0aChwLFt5LHgsbl0pLHkuc3RhdHVzQ29kZSh1KSx1PXZvaWQgMCxsJiZxLnRyaWdnZXIoaj9cImFqYXhTdWNjZXNzXCI6XCJhamF4RXJyb3JcIixbeSxvLGo/bTpuXSksdC5maXJlV2l0aChwLFt5LHhdKSxsJiYocS50cmlnZ2VyKFwiYWpheENvbXBsZXRlXCIsW3ksb10pLC0tci5hY3RpdmV8fHIuZXZlbnQudHJpZ2dlcihcImFqYXhTdG9wXCIpKSl9cmV0dXJuIHl9LGdldEpTT046ZnVuY3Rpb24oYSxiLGMpe3JldHVybiByLmdldChhLGIsYyxcImpzb25cIil9LGdldFNjcmlwdDpmdW5jdGlvbihhLGIpe3JldHVybiByLmdldChhLHZvaWQgMCxiLFwic2NyaXB0XCIpfX0pLHIuZWFjaChbXCJnZXRcIixcInBvc3RcIl0sZnVuY3Rpb24oYSxiKXtyW2JdPWZ1bmN0aW9uKGEsYyxkLGUpe3JldHVybiByLmlzRnVuY3Rpb24oYykmJihlPWV8fGQsZD1jLGM9dm9pZCAwKSxyLmFqYXgoci5leHRlbmQoe3VybDphLHR5cGU6YixkYXRhVHlwZTplLGRhdGE6YyxzdWNjZXNzOmR9LHIuaXNQbGFpbk9iamVjdChhKSYmYSkpfX0pLHIuX2V2YWxVcmw9ZnVuY3Rpb24oYSl7cmV0dXJuIHIuYWpheCh7dXJsOmEsdHlwZTpcIkdFVFwiLGRhdGFUeXBlOlwic2NyaXB0XCIsY2FjaGU6ITAsYXN5bmM6ITEsZ2xvYmFsOiExLFwidGhyb3dzXCI6ITB9KX0sci5mbi5leHRlbmQoe3dyYXBBbGw6ZnVuY3Rpb24oYSl7dmFyIGI7cmV0dXJuIHRoaXNbMF0mJihyLmlzRnVuY3Rpb24oYSkmJihhPWEuY2FsbCh0aGlzWzBdKSksYj1yKGEsdGhpc1swXS5vd25lckRvY3VtZW50KS5lcSgwKS5jbG9uZSghMCksdGhpc1swXS5wYXJlbnROb2RlJiZiLmluc2VydEJlZm9yZSh0aGlzWzBdKSxiLm1hcChmdW5jdGlvbigpe3ZhciBhPXRoaXM7d2hpbGUoYS5maXJzdEVsZW1lbnRDaGlsZClhPWEuZmlyc3RFbGVtZW50Q2hpbGQ7cmV0dXJuIGF9KS5hcHBlbmQodGhpcykpLHRoaXN9LHdyYXBJbm5lcjpmdW5jdGlvbihhKXtyZXR1cm4gci5pc0Z1bmN0aW9uKGEpP3RoaXMuZWFjaChmdW5jdGlvbihiKXtyKHRoaXMpLndyYXBJbm5lcihhLmNhbGwodGhpcyxiKSl9KTp0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYj1yKHRoaXMpLGM9Yi5jb250ZW50cygpO2MubGVuZ3RoP2Mud3JhcEFsbChhKTpiLmFwcGVuZChhKX0pfSx3cmFwOmZ1bmN0aW9uKGEpe3ZhciBiPXIuaXNGdW5jdGlvbihhKTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGMpe3IodGhpcykud3JhcEFsbChiP2EuY2FsbCh0aGlzLGMpOmEpfSl9LHVud3JhcDpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5wYXJlbnQoYSkubm90KFwiYm9keVwiKS5lYWNoKGZ1bmN0aW9uKCl7cih0aGlzKS5yZXBsYWNlV2l0aCh0aGlzLmNoaWxkTm9kZXMpfSksdGhpc319KSxyLmV4cHIucHNldWRvcy5oaWRkZW49ZnVuY3Rpb24oYSl7cmV0dXJuIXIuZXhwci5wc2V1ZG9zLnZpc2libGUoYSl9LHIuZXhwci5wc2V1ZG9zLnZpc2libGU9ZnVuY3Rpb24oYSl7cmV0dXJuISEoYS5vZmZzZXRXaWR0aHx8YS5vZmZzZXRIZWlnaHR8fGEuZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGgpfSxyLmFqYXhTZXR0aW5ncy54aHI9ZnVuY3Rpb24oKXt0cnl7cmV0dXJuIG5ldyBhLlhNTEh0dHBSZXF1ZXN0fWNhdGNoKGIpe319O3ZhciBSYj17MDoyMDAsMTIyMzoyMDR9LFNiPXIuYWpheFNldHRpbmdzLnhocigpO28uY29ycz0hIVNiJiZcIndpdGhDcmVkZW50aWFsc1wiaW4gU2Isby5hamF4PVNiPSEhU2Isci5hamF4VHJhbnNwb3J0KGZ1bmN0aW9uKGIpe3ZhciBjLGQ7aWYoby5jb3JzfHxTYiYmIWIuY3Jvc3NEb21haW4pcmV0dXJue3NlbmQ6ZnVuY3Rpb24oZSxmKXt2YXIgZyxoPWIueGhyKCk7aWYoaC5vcGVuKGIudHlwZSxiLnVybCxiLmFzeW5jLGIudXNlcm5hbWUsYi5wYXNzd29yZCksYi54aHJGaWVsZHMpZm9yKGcgaW4gYi54aHJGaWVsZHMpaFtnXT1iLnhockZpZWxkc1tnXTtiLm1pbWVUeXBlJiZoLm92ZXJyaWRlTWltZVR5cGUmJmgub3ZlcnJpZGVNaW1lVHlwZShiLm1pbWVUeXBlKSxiLmNyb3NzRG9tYWlufHxlW1wiWC1SZXF1ZXN0ZWQtV2l0aFwiXXx8KGVbXCJYLVJlcXVlc3RlZC1XaXRoXCJdPVwiWE1MSHR0cFJlcXVlc3RcIik7Zm9yKGcgaW4gZSloLnNldFJlcXVlc3RIZWFkZXIoZyxlW2ddKTtjPWZ1bmN0aW9uKGEpe3JldHVybiBmdW5jdGlvbigpe2MmJihjPWQ9aC5vbmxvYWQ9aC5vbmVycm9yPWgub25hYm9ydD1oLm9ucmVhZHlzdGF0ZWNoYW5nZT1udWxsLFwiYWJvcnRcIj09PWE/aC5hYm9ydCgpOlwiZXJyb3JcIj09PWE/XCJudW1iZXJcIiE9dHlwZW9mIGguc3RhdHVzP2YoMCxcImVycm9yXCIpOmYoaC5zdGF0dXMsaC5zdGF0dXNUZXh0KTpmKFJiW2guc3RhdHVzXXx8aC5zdGF0dXMsaC5zdGF0dXNUZXh0LFwidGV4dFwiIT09KGgucmVzcG9uc2VUeXBlfHxcInRleHRcIil8fFwic3RyaW5nXCIhPXR5cGVvZiBoLnJlc3BvbnNlVGV4dD97YmluYXJ5OmgucmVzcG9uc2V9Ont0ZXh0OmgucmVzcG9uc2VUZXh0fSxoLmdldEFsbFJlc3BvbnNlSGVhZGVycygpKSl9fSxoLm9ubG9hZD1jKCksZD1oLm9uZXJyb3I9YyhcImVycm9yXCIpLHZvaWQgMCE9PWgub25hYm9ydD9oLm9uYWJvcnQ9ZDpoLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpezQ9PT1oLnJlYWR5U3RhdGUmJmEuc2V0VGltZW91dChmdW5jdGlvbigpe2MmJmQoKX0pfSxjPWMoXCJhYm9ydFwiKTt0cnl7aC5zZW5kKGIuaGFzQ29udGVudCYmYi5kYXRhfHxudWxsKX1jYXRjaChpKXtpZihjKXRocm93IGl9fSxhYm9ydDpmdW5jdGlvbigpe2MmJmMoKX19fSksci5hamF4UHJlZmlsdGVyKGZ1bmN0aW9uKGEpe2EuY3Jvc3NEb21haW4mJihhLmNvbnRlbnRzLnNjcmlwdD0hMSl9KSxyLmFqYXhTZXR1cCh7YWNjZXB0czp7c2NyaXB0OlwidGV4dC9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9lY21hc2NyaXB0LCBhcHBsaWNhdGlvbi94LWVjbWFzY3JpcHRcIn0sY29udGVudHM6e3NjcmlwdDovXFxiKD86amF2YXxlY21hKXNjcmlwdFxcYi99LGNvbnZlcnRlcnM6e1widGV4dCBzY3JpcHRcIjpmdW5jdGlvbihhKXtyZXR1cm4gci5nbG9iYWxFdmFsKGEpLGF9fX0pLHIuYWpheFByZWZpbHRlcihcInNjcmlwdFwiLGZ1bmN0aW9uKGEpe3ZvaWQgMD09PWEuY2FjaGUmJihhLmNhY2hlPSExKSxhLmNyb3NzRG9tYWluJiYoYS50eXBlPVwiR0VUXCIpfSksci5hamF4VHJhbnNwb3J0KFwic2NyaXB0XCIsZnVuY3Rpb24oYSl7aWYoYS5jcm9zc0RvbWFpbil7dmFyIGIsYztyZXR1cm57c2VuZDpmdW5jdGlvbihlLGYpe2I9cihcIjxzY3JpcHQ+XCIpLnByb3Aoe2NoYXJzZXQ6YS5zY3JpcHRDaGFyc2V0LHNyYzphLnVybH0pLm9uKFwibG9hZCBlcnJvclwiLGM9ZnVuY3Rpb24oYSl7Yi5yZW1vdmUoKSxjPW51bGwsYSYmZihcImVycm9yXCI9PT1hLnR5cGU/NDA0OjIwMCxhLnR5cGUpfSksZC5oZWFkLmFwcGVuZENoaWxkKGJbMF0pfSxhYm9ydDpmdW5jdGlvbigpe2MmJmMoKX19fX0pO3ZhciBUYj1bXSxVYj0vKD0pXFw/KD89JnwkKXxcXD9cXD8vO3IuYWpheFNldHVwKHtqc29ucDpcImNhbGxiYWNrXCIsanNvbnBDYWxsYmFjazpmdW5jdGlvbigpe3ZhciBhPVRiLnBvcCgpfHxyLmV4cGFuZG8rXCJfXCIrdWIrKztyZXR1cm4gdGhpc1thXT0hMCxhfX0pLHIuYWpheFByZWZpbHRlcihcImpzb24ganNvbnBcIixmdW5jdGlvbihiLGMsZCl7dmFyIGUsZixnLGg9Yi5qc29ucCE9PSExJiYoVWIudGVzdChiLnVybCk/XCJ1cmxcIjpcInN0cmluZ1wiPT10eXBlb2YgYi5kYXRhJiYwPT09KGIuY29udGVudFR5cGV8fFwiXCIpLmluZGV4T2YoXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIikmJlViLnRlc3QoYi5kYXRhKSYmXCJkYXRhXCIpO2lmKGh8fFwianNvbnBcIj09PWIuZGF0YVR5cGVzWzBdKXJldHVybiBlPWIuanNvbnBDYWxsYmFjaz1yLmlzRnVuY3Rpb24oYi5qc29ucENhbGxiYWNrKT9iLmpzb25wQ2FsbGJhY2soKTpiLmpzb25wQ2FsbGJhY2ssaD9iW2hdPWJbaF0ucmVwbGFjZShVYixcIiQxXCIrZSk6Yi5qc29ucCE9PSExJiYoYi51cmwrPSh2Yi50ZXN0KGIudXJsKT9cIiZcIjpcIj9cIikrYi5qc29ucCtcIj1cIitlKSxiLmNvbnZlcnRlcnNbXCJzY3JpcHQganNvblwiXT1mdW5jdGlvbigpe3JldHVybiBnfHxyLmVycm9yKGUrXCIgd2FzIG5vdCBjYWxsZWRcIiksZ1swXX0sYi5kYXRhVHlwZXNbMF09XCJqc29uXCIsZj1hW2VdLGFbZV09ZnVuY3Rpb24oKXtnPWFyZ3VtZW50c30sZC5hbHdheXMoZnVuY3Rpb24oKXt2b2lkIDA9PT1mP3IoYSkucmVtb3ZlUHJvcChlKTphW2VdPWYsYltlXSYmKGIuanNvbnBDYWxsYmFjaz1jLmpzb25wQ2FsbGJhY2ssVGIucHVzaChlKSksZyYmci5pc0Z1bmN0aW9uKGYpJiZmKGdbMF0pLGc9Zj12b2lkIDB9KSxcInNjcmlwdFwifSksby5jcmVhdGVIVE1MRG9jdW1lbnQ9ZnVuY3Rpb24oKXt2YXIgYT1kLmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudChcIlwiKS5ib2R5O3JldHVybiBhLmlubmVySFRNTD1cIjxmb3JtPjwvZm9ybT48Zm9ybT48L2Zvcm0+XCIsMj09PWEuY2hpbGROb2Rlcy5sZW5ndGh9KCksci5wYXJzZUhUTUw9ZnVuY3Rpb24oYSxiLGMpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBhKXJldHVybltdO1wiYm9vbGVhblwiPT10eXBlb2YgYiYmKGM9YixiPSExKTt2YXIgZSxmLGc7cmV0dXJuIGJ8fChvLmNyZWF0ZUhUTUxEb2N1bWVudD8oYj1kLmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudChcIlwiKSxlPWIuY3JlYXRlRWxlbWVudChcImJhc2VcIiksZS5ocmVmPWQubG9jYXRpb24uaHJlZixiLmhlYWQuYXBwZW5kQ2hpbGQoZSkpOmI9ZCksZj1DLmV4ZWMoYSksZz0hYyYmW10sZj9bYi5jcmVhdGVFbGVtZW50KGZbMV0pXTooZj1xYShbYV0sYixnKSxnJiZnLmxlbmd0aCYmcihnKS5yZW1vdmUoKSxyLm1lcmdlKFtdLGYuY2hpbGROb2RlcykpfSxyLmZuLmxvYWQ9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZixnPXRoaXMsaD1hLmluZGV4T2YoXCIgXCIpO3JldHVybiBoPi0xJiYoZD1wYihhLnNsaWNlKGgpKSxhPWEuc2xpY2UoMCxoKSksci5pc0Z1bmN0aW9uKGIpPyhjPWIsYj12b2lkIDApOmImJlwib2JqZWN0XCI9PXR5cGVvZiBiJiYoZT1cIlBPU1RcIiksZy5sZW5ndGg+MCYmci5hamF4KHt1cmw6YSx0eXBlOmV8fFwiR0VUXCIsZGF0YVR5cGU6XCJodG1sXCIsZGF0YTpifSkuZG9uZShmdW5jdGlvbihhKXtmPWFyZ3VtZW50cyxnLmh0bWwoZD9yKFwiPGRpdj5cIikuYXBwZW5kKHIucGFyc2VIVE1MKGEpKS5maW5kKGQpOmEpfSkuYWx3YXlzKGMmJmZ1bmN0aW9uKGEsYil7Zy5lYWNoKGZ1bmN0aW9uKCl7Yy5hcHBseSh0aGlzLGZ8fFthLnJlc3BvbnNlVGV4dCxiLGFdKX0pfSksdGhpc30sci5lYWNoKFtcImFqYXhTdGFydFwiLFwiYWpheFN0b3BcIixcImFqYXhDb21wbGV0ZVwiLFwiYWpheEVycm9yXCIsXCJhamF4U3VjY2Vzc1wiLFwiYWpheFNlbmRcIl0sZnVuY3Rpb24oYSxiKXtyLmZuW2JdPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLm9uKGIsYSl9fSksci5leHByLnBzZXVkb3MuYW5pbWF0ZWQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHIuZ3JlcChyLnRpbWVycyxmdW5jdGlvbihiKXtyZXR1cm4gYT09PWIuZWxlbX0pLmxlbmd0aH0sci5vZmZzZXQ9e3NldE9mZnNldDpmdW5jdGlvbihhLGIsYyl7dmFyIGQsZSxmLGcsaCxpLGosaz1yLmNzcyhhLFwicG9zaXRpb25cIiksbD1yKGEpLG09e307XCJzdGF0aWNcIj09PWsmJihhLnN0eWxlLnBvc2l0aW9uPVwicmVsYXRpdmVcIiksaD1sLm9mZnNldCgpLGY9ci5jc3MoYSxcInRvcFwiKSxpPXIuY3NzKGEsXCJsZWZ0XCIpLGo9KFwiYWJzb2x1dGVcIj09PWt8fFwiZml4ZWRcIj09PWspJiYoZitpKS5pbmRleE9mKFwiYXV0b1wiKT4tMSxqPyhkPWwucG9zaXRpb24oKSxnPWQudG9wLGU9ZC5sZWZ0KTooZz1wYXJzZUZsb2F0KGYpfHwwLGU9cGFyc2VGbG9hdChpKXx8MCksci5pc0Z1bmN0aW9uKGIpJiYoYj1iLmNhbGwoYSxjLHIuZXh0ZW5kKHt9LGgpKSksbnVsbCE9Yi50b3AmJihtLnRvcD1iLnRvcC1oLnRvcCtnKSxudWxsIT1iLmxlZnQmJihtLmxlZnQ9Yi5sZWZ0LWgubGVmdCtlKSxcInVzaW5nXCJpbiBiP2IudXNpbmcuY2FsbChhLG0pOmwuY3NzKG0pfX0sci5mbi5leHRlbmQoe29mZnNldDpmdW5jdGlvbihhKXtpZihhcmd1bWVudHMubGVuZ3RoKXJldHVybiB2b2lkIDA9PT1hP3RoaXM6dGhpcy5lYWNoKGZ1bmN0aW9uKGIpe3Iub2Zmc2V0LnNldE9mZnNldCh0aGlzLGEsYil9KTt2YXIgYixjLGQsZSxmPXRoaXNbMF07aWYoZilyZXR1cm4gZi5nZXRDbGllbnRSZWN0cygpLmxlbmd0aD8oZD1mLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLGI9Zi5vd25lckRvY3VtZW50LGM9Yi5kb2N1bWVudEVsZW1lbnQsZT1iLmRlZmF1bHRWaWV3LHt0b3A6ZC50b3ArZS5wYWdlWU9mZnNldC1jLmNsaWVudFRvcCxsZWZ0OmQubGVmdCtlLnBhZ2VYT2Zmc2V0LWMuY2xpZW50TGVmdH0pOnt0b3A6MCxsZWZ0OjB9fSxwb3NpdGlvbjpmdW5jdGlvbigpe2lmKHRoaXNbMF0pe3ZhciBhLGIsYz10aGlzWzBdLGQ9e3RvcDowLGxlZnQ6MH07cmV0dXJuXCJmaXhlZFwiPT09ci5jc3MoYyxcInBvc2l0aW9uXCIpP2I9Yy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTooYT10aGlzLm9mZnNldFBhcmVudCgpLGI9dGhpcy5vZmZzZXQoKSxCKGFbMF0sXCJodG1sXCIpfHwoZD1hLm9mZnNldCgpKSxkPXt0b3A6ZC50b3Arci5jc3MoYVswXSxcImJvcmRlclRvcFdpZHRoXCIsITApLGxlZnQ6ZC5sZWZ0K3IuY3NzKGFbMF0sXCJib3JkZXJMZWZ0V2lkdGhcIiwhMCl9KSx7dG9wOmIudG9wLWQudG9wLXIuY3NzKGMsXCJtYXJnaW5Ub3BcIiwhMCksbGVmdDpiLmxlZnQtZC5sZWZ0LXIuY3NzKGMsXCJtYXJnaW5MZWZ0XCIsITApfX19LG9mZnNldFBhcmVudDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbigpe3ZhciBhPXRoaXMub2Zmc2V0UGFyZW50O3doaWxlKGEmJlwic3RhdGljXCI9PT1yLmNzcyhhLFwicG9zaXRpb25cIikpYT1hLm9mZnNldFBhcmVudDtyZXR1cm4gYXx8cmF9KX19KSxyLmVhY2goe3Njcm9sbExlZnQ6XCJwYWdlWE9mZnNldFwiLHNjcm9sbFRvcDpcInBhZ2VZT2Zmc2V0XCJ9LGZ1bmN0aW9uKGEsYil7dmFyIGM9XCJwYWdlWU9mZnNldFwiPT09YjtyLmZuW2FdPWZ1bmN0aW9uKGQpe3JldHVybiBUKHRoaXMsZnVuY3Rpb24oYSxkLGUpe3ZhciBmO3JldHVybiByLmlzV2luZG93KGEpP2Y9YTo5PT09YS5ub2RlVHlwZSYmKGY9YS5kZWZhdWx0Vmlldyksdm9pZCAwPT09ZT9mP2ZbYl06YVtkXTp2b2lkKGY/Zi5zY3JvbGxUbyhjP2YucGFnZVhPZmZzZXQ6ZSxjP2U6Zi5wYWdlWU9mZnNldCk6YVtkXT1lKX0sYSxkLGFyZ3VtZW50cy5sZW5ndGgpfX0pLHIuZWFjaChbXCJ0b3BcIixcImxlZnRcIl0sZnVuY3Rpb24oYSxiKXtyLmNzc0hvb2tzW2JdPVBhKG8ucGl4ZWxQb3NpdGlvbixmdW5jdGlvbihhLGMpe2lmKGMpcmV0dXJuIGM9T2EoYSxiKSxNYS50ZXN0KGMpP3IoYSkucG9zaXRpb24oKVtiXStcInB4XCI6Y30pfSksci5lYWNoKHtIZWlnaHQ6XCJoZWlnaHRcIixXaWR0aDpcIndpZHRoXCJ9LGZ1bmN0aW9uKGEsYil7ci5lYWNoKHtwYWRkaW5nOlwiaW5uZXJcIithLGNvbnRlbnQ6YixcIlwiOlwib3V0ZXJcIithfSxmdW5jdGlvbihjLGQpe3IuZm5bZF09ZnVuY3Rpb24oZSxmKXt2YXIgZz1hcmd1bWVudHMubGVuZ3RoJiYoY3x8XCJib29sZWFuXCIhPXR5cGVvZiBlKSxoPWN8fChlPT09ITB8fGY9PT0hMD9cIm1hcmdpblwiOlwiYm9yZGVyXCIpO3JldHVybiBUKHRoaXMsZnVuY3Rpb24oYixjLGUpe3ZhciBmO3JldHVybiByLmlzV2luZG93KGIpPzA9PT1kLmluZGV4T2YoXCJvdXRlclwiKT9iW1wiaW5uZXJcIithXTpiLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudFtcImNsaWVudFwiK2FdOjk9PT1iLm5vZGVUeXBlPyhmPWIuZG9jdW1lbnRFbGVtZW50LE1hdGgubWF4KGIuYm9keVtcInNjcm9sbFwiK2FdLGZbXCJzY3JvbGxcIithXSxiLmJvZHlbXCJvZmZzZXRcIithXSxmW1wib2Zmc2V0XCIrYV0sZltcImNsaWVudFwiK2FdKSk6dm9pZCAwPT09ZT9yLmNzcyhiLGMsaCk6ci5zdHlsZShiLGMsZSxoKX0sYixnP2U6dm9pZCAwLGcpfX0pfSksci5mbi5leHRlbmQoe2JpbmQ6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiB0aGlzLm9uKGEsbnVsbCxiLGMpfSx1bmJpbmQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5vZmYoYSxudWxsLGIpfSxkZWxlZ2F0ZTpmdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gdGhpcy5vbihiLGEsYyxkKX0sdW5kZWxlZ2F0ZTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP3RoaXMub2ZmKGEsXCIqKlwiKTp0aGlzLm9mZihiLGF8fFwiKipcIixjKX19KSxyLmhvbGRSZWFkeT1mdW5jdGlvbihhKXthP3IucmVhZHlXYWl0Kys6ci5yZWFkeSghMCl9LHIuaXNBcnJheT1BcnJheS5pc0FycmF5LHIucGFyc2VKU09OPUpTT04ucGFyc2Usci5ub2RlTmFtZT1CLFwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZCYmZGVmaW5lKFwianF1ZXJ5XCIsW10sZnVuY3Rpb24oKXtyZXR1cm4gcn0pO3ZhciBWYj1hLmpRdWVyeSxXYj1hLiQ7cmV0dXJuIHIubm9Db25mbGljdD1mdW5jdGlvbihiKXtyZXR1cm4gYS4kPT09ciYmKGEuJD1XYiksYiYmYS5qUXVlcnk9PT1yJiYoYS5qUXVlcnk9VmIpLHJ9LGJ8fChhLmpRdWVyeT1hLiQ9cikscn0pO1xuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQG5hbWU6IGJQb3B1cCAtIGlmIHlvdSBjYW4ndCBnZXQgaXQgdXAsIHVzZSBiUG9wdXBcbiAqIEBhdXRob3I6IChjKUJqb2VybiBLbGluZ2dhYXJkICh0d2l0dGVyQGJrbGluZ2dhYXJkKVxuICogQGRlbW86IGh0dHA6Ly9kaW5icm9yLmRrL2Jwb3B1cFxuICogQHZlcnNpb246IDAuMTEuMC5taW5cbiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG4gKGZ1bmN0aW9uKGMpe2MuZm4uYlBvcHVwPWZ1bmN0aW9uKEEsRSl7ZnVuY3Rpb24gTCgpe2EuY29udGVudENvbnRhaW5lcj1jKGEuY29udGVudENvbnRhaW5lcnx8Yik7c3dpdGNoKGEuY29udGVudCl7Y2FzZSBcImlmcmFtZVwiOnZhciBkPWMoJzxpZnJhbWUgY2xhc3M9XCJiLWlmcmFtZVwiICcrYS5pZnJhbWVBdHRyK1wiPjwvaWZyYW1lPlwiKTtkLmFwcGVuZFRvKGEuY29udGVudENvbnRhaW5lcik7dD1iLm91dGVySGVpZ2h0KCEwKTt1PWIub3V0ZXJXaWR0aCghMCk7QigpO2QuYXR0cihcInNyY1wiLGEubG9hZFVybCk7bChhLmxvYWRDYWxsYmFjayk7YnJlYWs7Y2FzZSBcImltYWdlXCI6QigpO2MoXCI8aW1nIC8+XCIpLmxvYWQoZnVuY3Rpb24oKXtsKGEubG9hZENhbGxiYWNrKTtGKGModGhpcykpfSkuYXR0cihcInNyY1wiLGEubG9hZFVybCkuaGlkZSgpLmFwcGVuZFRvKGEuY29udGVudENvbnRhaW5lcik7YnJlYWs7ZGVmYXVsdDpCKCksYygnPGRpdiBjbGFzcz1cImItYWpheC13cmFwcGVyXCI+PC9kaXY+JykubG9hZChhLmxvYWRVcmwsYS5sb2FkRGF0YSxmdW5jdGlvbihkLGIsZSl7bChhLmxvYWRDYWxsYmFjayxiKTtGKGModGhpcykpfSkuaGlkZSgpLmFwcGVuZFRvKGEuY29udGVudENvbnRhaW5lcil9fWZ1bmN0aW9uIEIoKXthLm1vZGFsJiZjKCc8ZGl2IGNsYXNzPVwiYi1tb2RhbCAnK2UrJ1wiPjwvZGl2PicpLmNzcyh7YmFja2dyb3VuZENvbG9yOmEubW9kYWxDb2xvcixwb3NpdGlvbjpcImZpeGVkXCIsdG9wOjAscmlnaHQ6MCxib3R0b206MCxsZWZ0OjAsb3BhY2l0eTowLHpJbmRleDphLnpJbmRleCt2fSkuYXBwZW5kVG8oYS5hcHBlbmRUbykuZmFkZVRvKGEuc3BlZWQsYS5vcGFjaXR5KTtDKCk7Yi5kYXRhKFwiYlBvcHVwXCIsYSkuZGF0YShcImlkXCIsZSkuY3NzKHtsZWZ0Olwic2xpZGVJblwiPT1hLnRyYW5zaXRpb258fFwic2xpZGVCYWNrXCI9PWEudHJhbnNpdGlvbj9cInNsaWRlQmFja1wiPT1hLnRyYW5zaXRpb24/Zi5zY3JvbGxMZWZ0KCkrdzotMSooeCt1KTptKCEoIWEuZm9sbG93WzBdJiZufHxnKSkscG9zaXRpb246YS5wb3NpdGlvblN0eWxlfHxcImFic29sdXRlXCIsdG9wOlwic2xpZGVEb3duXCI9PWEudHJhbnNpdGlvbnx8XCJzbGlkZVVwXCI9PWEudHJhbnNpdGlvbj9cInNsaWRlVXBcIj09YS50cmFuc2l0aW9uP2Yuc2Nyb2xsVG9wKCkreTp6Ky0xKnQ6cCghKCFhLmZvbGxvd1sxXSYmcXx8ZykpLFwiei1pbmRleFwiOmEuekluZGV4K3YrMX0pLmVhY2goZnVuY3Rpb24oKXthLmFwcGVuZGluZyYmYyh0aGlzKS5hcHBlbmRUbyhhLmFwcGVuZFRvKX0pO0coITApfWZ1bmN0aW9uIHIoKXthLm1vZGFsJiZjKFwiLmItbW9kYWwuXCIrYi5kYXRhKFwiaWRcIikpLmZhZGVUbyhhLnNwZWVkLDAsZnVuY3Rpb24oKXtjKHRoaXMpLnJlbW92ZSgpfSk7YS5zY3JvbGxCYXJ8fGMoXCJodG1sXCIpLmNzcyhcIm92ZXJmbG93XCIsXCJhdXRvXCIpO2MoXCIuYi1tb2RhbC5cIitlKS51bmJpbmQoXCJjbGlja1wiKTtmLnVuYmluZChcImtleWRvd24uXCIrZSk7ay51bmJpbmQoXCIuXCIrZSkuZGF0YShcImJQb3B1cFwiLDA8ay5kYXRhKFwiYlBvcHVwXCIpLTE/ay5kYXRhKFwiYlBvcHVwXCIpLTE6bnVsbCk7Yi51bmRlbGVnYXRlKFwiLmJDbG9zZSwgLlwiK2EuY2xvc2VDbGFzcyxcImNsaWNrLlwiK2UscikuZGF0YShcImJQb3B1cFwiLG51bGwpO2NsZWFyVGltZW91dChIKTtHKCk7cmV0dXJuITF9ZnVuY3Rpb24gSShkKXt5PWsuaGVpZ2h0KCk7dz1rLndpZHRoKCk7aD1EKCk7aWYoaC54fHxoLnkpY2xlYXJUaW1lb3V0KEopLEo9c2V0VGltZW91dChmdW5jdGlvbigpe0MoKTtkPWR8fGEuZm9sbG93U3BlZWQ7dmFyIGU9e307aC54JiYoZS5sZWZ0PWEuZm9sbG93WzBdP20oITApOlwiYXV0b1wiKTtoLnkmJihlLnRvcD1hLmZvbGxvd1sxXT9wKCEwKTpcImF1dG9cIik7Yi5kZXF1ZXVlKCkuZWFjaChmdW5jdGlvbigpe2c/Yyh0aGlzKS5jc3Moe2xlZnQ6eCx0b3A6en0pOmModGhpcykuYW5pbWF0ZShlLGQsYS5mb2xsb3dFYXNpbmcpfSl9LDUwKX1mdW5jdGlvbiBGKGQpe3ZhciBjPWQud2lkdGgoKSxlPWQuaGVpZ2h0KCksZj17fTthLmNvbnRlbnRDb250YWluZXIuY3NzKHtoZWlnaHQ6ZSx3aWR0aDpjfSk7ZT49Yi5oZWlnaHQoKSYmKGYuaGVpZ2h0PWIuaGVpZ2h0KCkpO2M+PWIud2lkdGgoKSYmKGYud2lkdGg9Yi53aWR0aCgpKTt0PWIub3V0ZXJIZWlnaHQoITApO3U9Yi5vdXRlcldpZHRoKCEwKTtDKCk7YS5jb250ZW50Q29udGFpbmVyLmNzcyh7aGVpZ2h0OlwiYXV0b1wiLHdpZHRoOlwiYXV0b1wifSk7Zi5sZWZ0PW0oISghYS5mb2xsb3dbMF0mJm58fGcpKTtmLnRvcD1wKCEoIWEuZm9sbG93WzFdJiZxfHxnKSk7Yi5hbmltYXRlKGYsMjUwLGZ1bmN0aW9uKCl7ZC5zaG93KCk7aD1EKCl9KX1mdW5jdGlvbiBNKCl7ay5kYXRhKFwiYlBvcHVwXCIsdik7Yi5kZWxlZ2F0ZShcIi5iQ2xvc2UsIC5cIithLmNsb3NlQ2xhc3MsXCJjbGljay5cIitlLHIpO2EubW9kYWxDbG9zZSYmYyhcIi5iLW1vZGFsLlwiK2UpLmNzcyhcImN1cnNvclwiLFwicG9pbnRlclwiKS5iaW5kKFwiY2xpY2tcIixyKTtOfHwhYS5mb2xsb3dbMF0mJiFhLmZvbGxvd1sxXXx8ay5iaW5kKFwic2Nyb2xsLlwiK2UsZnVuY3Rpb24oKXtpZihoLnh8fGgueSl7dmFyIGQ9e307aC54JiYoZC5sZWZ0PWEuZm9sbG93WzBdP20oIWcpOlwiYXV0b1wiKTtoLnkmJihkLnRvcD1hLmZvbGxvd1sxXT9wKCFnKTpcImF1dG9cIik7Yi5kZXF1ZXVlKCkuYW5pbWF0ZShkLGEuZm9sbG93U3BlZWQsYS5mb2xsb3dFYXNpbmcpfX0pLmJpbmQoXCJyZXNpemUuXCIrZSxmdW5jdGlvbigpe0koKX0pO2EuZXNjQ2xvc2UmJmYuYmluZChcImtleWRvd24uXCIrZSxmdW5jdGlvbihhKXsyNz09YS53aGljaCYmcigpfSl9ZnVuY3Rpb24gRyhkKXtmdW5jdGlvbiBjKGUpe2IuY3NzKHtkaXNwbGF5OlwiYmxvY2tcIixvcGFjaXR5OjF9KS5hbmltYXRlKGUsYS5zcGVlZCxhLmVhc2luZyxmdW5jdGlvbigpe0soZCl9KX1zd2l0Y2goZD9hLnRyYW5zaXRpb246YS50cmFuc2l0aW9uQ2xvc2V8fGEudHJhbnNpdGlvbil7Y2FzZSBcInNsaWRlSW5cIjpjKHtsZWZ0OmQ/bSghKCFhLmZvbGxvd1swXSYmbnx8ZykpOmYuc2Nyb2xsTGVmdCgpLSh1fHxiLm91dGVyV2lkdGgoITApKS0yMDB9KTticmVhaztjYXNlIFwic2xpZGVCYWNrXCI6Yyh7bGVmdDpkP20oISghYS5mb2xsb3dbMF0mJm58fGcpKTpmLnNjcm9sbExlZnQoKSt3KzIwMH0pO2JyZWFrO2Nhc2UgXCJzbGlkZURvd25cIjpjKHt0b3A6ZD9wKCEoIWEuZm9sbG93WzFdJiZxfHxnKSk6Zi5zY3JvbGxUb3AoKS0odHx8Yi5vdXRlckhlaWdodCghMCkpLTIwMH0pO2JyZWFrO2Nhc2UgXCJzbGlkZVVwXCI6Yyh7dG9wOmQ/cCghKCFhLmZvbGxvd1sxXSYmcXx8ZykpOmYuc2Nyb2xsVG9wKCkreSsyMDB9KTticmVhaztkZWZhdWx0OmIuc3RvcCgpLmZhZGVUbyhhLnNwZWVkLGQ/MTowLGZ1bmN0aW9uKCl7SyhkKX0pfX1mdW5jdGlvbiBLKGQpe2Q/KE0oKSxsKEUpLGEuYXV0b0Nsb3NlJiYoSD1zZXRUaW1lb3V0KHIsYS5hdXRvQ2xvc2UpKSk6KGIuaGlkZSgpLGwoYS5vbkNsb3NlKSxhLmxvYWRVcmwmJihhLmNvbnRlbnRDb250YWluZXIuZW1wdHkoKSxiLmNzcyh7aGVpZ2h0OlwiYXV0b1wiLHdpZHRoOlwiYXV0b1wifSkpKX1mdW5jdGlvbiBtKGEpe3JldHVybiBhP3grZi5zY3JvbGxMZWZ0KCk6eH1mdW5jdGlvbiBwKGEpe3JldHVybiBhP3orZi5zY3JvbGxUb3AoKTp6fWZ1bmN0aW9uIGwoYSxlKXtjLmlzRnVuY3Rpb24oYSkmJmEuY2FsbChiLGUpfWZ1bmN0aW9uIEMoKXt6PXE/YS5wb3NpdGlvblsxXTpNYXRoLm1heCgwLCh5LWIub3V0ZXJIZWlnaHQoITApKS8yLWEuYW1zbCk7eD1uP2EucG9zaXRpb25bMF06KHctYi5vdXRlcldpZHRoKCEwKSkvMjtoPUQoKX1mdW5jdGlvbiBEKCl7cmV0dXJue3g6dz5iLm91dGVyV2lkdGgoITApLHk6eT5iLm91dGVySGVpZ2h0KCEwKX19Yy5pc0Z1bmN0aW9uKEEpJiYoRT1BLEE9bnVsbCk7dmFyIGE9Yy5leHRlbmQoe30sYy5mbi5iUG9wdXAuZGVmYXVsdHMsQSk7YS5zY3JvbGxCYXJ8fGMoXCJodG1sXCIpLmNzcyhcIm92ZXJmbG93XCIsXCJoaWRkZW5cIik7dmFyIGI9dGhpcyxmPWMoZG9jdW1lbnQpLGs9Yyh3aW5kb3cpLHk9ay5oZWlnaHQoKSx3PWsud2lkdGgoKSxOPS9PUyA2KF9cXGQpKy9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksdj0wLGUsaCxxLG4sZyx6LHgsdCx1LEosSDtiLmNsb3NlPWZ1bmN0aW9uKCl7cigpfTtiLnJlcG9zaXRpb249ZnVuY3Rpb24oYSl7SShhKX07cmV0dXJuIGIuZWFjaChmdW5jdGlvbigpe2ModGhpcykuZGF0YShcImJQb3B1cFwiKXx8KGwoYS5vbk9wZW4pLHY9KGsuZGF0YShcImJQb3B1cFwiKXx8MCkrMSxlPVwiX19iLXBvcHVwXCIrditcIl9fXCIscT1cImF1dG9cIiE9PWEucG9zaXRpb25bMV0sbj1cImF1dG9cIiE9PWEucG9zaXRpb25bMF0sZz1cImZpeGVkXCI9PT1hLnBvc2l0aW9uU3R5bGUsdD1iLm91dGVySGVpZ2h0KCEwKSx1PWIub3V0ZXJXaWR0aCghMCksYS5sb2FkVXJsP0woKTpCKCkpfSl9O2MuZm4uYlBvcHVwLmRlZmF1bHRzPXthbXNsOjUwLGFwcGVuZGluZzohMCxhcHBlbmRUbzpcImJvZHlcIixhdXRvQ2xvc2U6ITEsY2xvc2VDbGFzczpcImItY2xvc2VcIixjb250ZW50OlwiYWpheFwiLGNvbnRlbnRDb250YWluZXI6ITEsZWFzaW5nOlwic3dpbmdcIixlc2NDbG9zZTohMCxmb2xsb3c6WyEwLCEwXSxmb2xsb3dFYXNpbmc6XCJzd2luZ1wiLGZvbGxvd1NwZWVkOjUwMCxpZnJhbWVBdHRyOidzY3JvbGxpbmc9XCJub1wiIGZyYW1lYm9yZGVyPVwiMFwiJyxsb2FkQ2FsbGJhY2s6ITEsbG9hZERhdGE6ITEsbG9hZFVybDohMSxtb2RhbDohMCxtb2RhbENsb3NlOiEwLG1vZGFsQ29sb3I6XCIjMDAwXCIsb25DbG9zZTohMSxvbk9wZW46ITEsb3BhY2l0eTouNyxwb3NpdGlvbjpbXCJhdXRvXCIsXCJhdXRvXCJdLHBvc2l0aW9uU3R5bGU6XCJhYnNvbHV0ZVwiLHNjcm9sbEJhcjohMCxzcGVlZDoyNTAsdHJhbnNpdGlvbjpcImZhZGVJblwiLHRyYW5zaXRpb25DbG9zZTohMSx6SW5kZXg6OTk5N319KShqUXVlcnkpO1xuLyohXG4qIGpxdWVyeS5pbnB1dG1hc2suYnVuZGxlLmpzXG4qIGh0dHBzOi8vZ2l0aHViLmNvbS9Sb2JpbkhlcmJvdHMvSW5wdXRtYXNrXG4qIENvcHlyaWdodCAoYykgMjAxMCAtIDIwMTcgUm9iaW4gSGVyYm90c1xuKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgKGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwKVxuKiBWZXJzaW9uOiA0LjAuMC03NVxuKi9cblxuIWZ1bmN0aW9uKG1vZHVsZXMpIHtcbiAgICBmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG4gICAgICAgIGlmIChpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkgcmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gICAgICAgIHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiAgICAgICAgICAgIGk6IG1vZHVsZUlkLFxuICAgICAgICAgICAgbDogITEsXG4gICAgICAgICAgICBleHBvcnRzOiB7fVxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gbW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyksIFxuICAgICAgICBtb2R1bGUubCA9ICEwLCBtb2R1bGUuZXhwb3J0cztcbiAgICB9XG4gICAgdmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcbiAgICBfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzLCBfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzLCBfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiAgICAgICAgX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpIHx8IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4gICAgICAgICAgICBjb25maWd1cmFibGU6ICExLFxuICAgICAgICAgICAgZW51bWVyYWJsZTogITAsXG4gICAgICAgICAgICBnZXQ6IGdldHRlclxuICAgICAgICB9KTtcbiAgICB9LCBfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiAgICAgICAgdmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIG1vZHVsZS5kZWZhdWx0O1xuICAgICAgICB9IDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gbW9kdWxlO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgXCJhXCIsIGdldHRlciksIGdldHRlcjtcbiAgICB9LCBfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7XG4gICAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7XG4gICAgfSwgX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIiwgX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAzKTtcbn0oWyBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICB2YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXztcbiAgICBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBTeW1ib2wuaXRlcmF0b3I7XG4gICAgIWZ1bmN0aW9uKGZhY3RvcnkpIHtcbiAgICAgICAgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFsgX193ZWJwYWNrX3JlcXVpcmVfXygyKSBdLCB2b2lkIDAgIT09IChfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgKF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXyA9IGZhY3RvcnkpID8gX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fLmFwcGx5KGV4cG9ydHMsIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18pIDogX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fKSAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyk7XG4gICAgfShmdW5jdGlvbigkKSB7XG4gICAgICAgIHJldHVybiAkO1xuICAgIH0pO1xufSwgZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgdmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18sIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbihvYmopIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBvYmo7XG4gICAgfSA6IGZ1bmN0aW9uKG9iaikge1xuICAgICAgICByZXR1cm4gb2JqICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xuICAgIH07XG4gICAgIWZ1bmN0aW9uKGZhY3RvcnkpIHtcbiAgICAgICAgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFsgX193ZWJwYWNrX3JlcXVpcmVfXygwKSwgX193ZWJwYWNrX3JlcXVpcmVfXygxMCksIF9fd2VicGFja19yZXF1aXJlX18oMTEpIF0sIFxuICAgICAgICB2b2lkIDAgIT09IChfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgKF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXyA9IGZhY3RvcnkpID8gX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fLmFwcGx5KGV4cG9ydHMsIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18pIDogX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fKSAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyk7XG4gICAgfShmdW5jdGlvbigkLCB3aW5kb3csIGRvY3VtZW50LCB1bmRlZmluZWQpIHtcbiAgICAgICAgZnVuY3Rpb24gSW5wdXRtYXNrKGFsaWFzLCBvcHRpb25zLCBpbnRlcm5hbCkge1xuICAgICAgICAgICAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIElucHV0bWFzaykpIHJldHVybiBuZXcgSW5wdXRtYXNrKGFsaWFzLCBvcHRpb25zLCBpbnRlcm5hbCk7XG4gICAgICAgICAgICB0aGlzLmVsID0gdW5kZWZpbmVkLCB0aGlzLmV2ZW50cyA9IHt9LCB0aGlzLm1hc2tzZXQgPSB1bmRlZmluZWQsIHRoaXMucmVmcmVzaFZhbHVlID0gITEsIFxuICAgICAgICAgICAgITAgIT09IGludGVybmFsICYmICgkLmlzUGxhaW5PYmplY3QoYWxpYXMpID8gb3B0aW9ucyA9IGFsaWFzIDogKG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9KS5hbGlhcyA9IGFsaWFzLCBcbiAgICAgICAgICAgIHRoaXMub3B0cyA9ICQuZXh0ZW5kKCEwLCB7fSwgdGhpcy5kZWZhdWx0cywgb3B0aW9ucyksIHRoaXMubm9NYXNrc0NhY2hlID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlZmluaXRpb25zICE9PSB1bmRlZmluZWQsIFxuICAgICAgICAgICAgdGhpcy51c2VyT3B0aW9ucyA9IG9wdGlvbnMgfHwge30sIHRoaXMuaXNSVEwgPSB0aGlzLm9wdHMubnVtZXJpY0lucHV0LCByZXNvbHZlQWxpYXModGhpcy5vcHRzLmFsaWFzLCBvcHRpb25zLCB0aGlzLm9wdHMpKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiByZXNvbHZlQWxpYXMoYWxpYXNTdHIsIG9wdGlvbnMsIG9wdHMpIHtcbiAgICAgICAgICAgIHZhciBhbGlhc0RlZmluaXRpb24gPSBJbnB1dG1hc2sucHJvdG90eXBlLmFsaWFzZXNbYWxpYXNTdHJdO1xuICAgICAgICAgICAgcmV0dXJuIGFsaWFzRGVmaW5pdGlvbiA/IChhbGlhc0RlZmluaXRpb24uYWxpYXMgJiYgcmVzb2x2ZUFsaWFzKGFsaWFzRGVmaW5pdGlvbi5hbGlhcywgdW5kZWZpbmVkLCBvcHRzKSwgXG4gICAgICAgICAgICAkLmV4dGVuZCghMCwgb3B0cywgYWxpYXNEZWZpbml0aW9uKSwgJC5leHRlbmQoITAsIG9wdHMsIG9wdGlvbnMpLCAhMCkgOiAobnVsbCA9PT0gb3B0cy5tYXNrICYmIChvcHRzLm1hc2sgPSBhbGlhc1N0ciksIFxuICAgICAgICAgICAgITEpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGdlbmVyYXRlTWFza1NldChvcHRzLCBub2NhY2hlKSB7XG4gICAgICAgICAgICBmdW5jdGlvbiBnZW5lcmF0ZU1hc2sobWFzaywgbWV0YWRhdGEsIG9wdHMpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVnZXhNYXNrID0gITE7XG4gICAgICAgICAgICAgICAgaWYgKG51bGwgIT09IG1hc2sgJiYgXCJcIiAhPT0gbWFzayB8fCAoKHJlZ2V4TWFzayA9IG51bGwgIT09IG9wdHMucmVnZXgpID8gbWFzayA9IChtYXNrID0gb3B0cy5yZWdleCkucmVwbGFjZSgvXihcXF4pKC4qKShcXCQpJC8sIFwiJDJcIikgOiAocmVnZXhNYXNrID0gITAsIFxuICAgICAgICAgICAgICAgIG1hc2sgPSBcIi4qXCIpKSwgMSA9PT0gbWFzay5sZW5ndGggJiYgITEgPT09IG9wdHMuZ3JlZWR5ICYmIDAgIT09IG9wdHMucmVwZWF0ICYmIChvcHRzLnBsYWNlaG9sZGVyID0gXCJcIiksIFxuICAgICAgICAgICAgICAgIG9wdHMucmVwZWF0ID4gMCB8fCBcIipcIiA9PT0gb3B0cy5yZXBlYXQgfHwgXCIrXCIgPT09IG9wdHMucmVwZWF0KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByZXBlYXRTdGFydCA9IFwiKlwiID09PSBvcHRzLnJlcGVhdCA/IDAgOiBcIitcIiA9PT0gb3B0cy5yZXBlYXQgPyAxIDogb3B0cy5yZXBlYXQ7XG4gICAgICAgICAgICAgICAgICAgIG1hc2sgPSBvcHRzLmdyb3VwbWFya2VyWzBdICsgbWFzayArIG9wdHMuZ3JvdXBtYXJrZXJbMV0gKyBvcHRzLnF1YW50aWZpZXJtYXJrZXJbMF0gKyByZXBlYXRTdGFydCArIFwiLFwiICsgb3B0cy5yZXBlYXQgKyBvcHRzLnF1YW50aWZpZXJtYXJrZXJbMV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBtYXNrc2V0RGVmaW5pdGlvbiwgbWFza2RlZktleSA9IHJlZ2V4TWFzayA/IFwicmVnZXhfXCIgKyBvcHRzLnJlZ2V4IDogb3B0cy5udW1lcmljSW5wdXQgPyBtYXNrLnNwbGl0KFwiXCIpLnJldmVyc2UoKS5qb2luKFwiXCIpIDogbWFzaztcbiAgICAgICAgICAgICAgICByZXR1cm4gSW5wdXRtYXNrLnByb3RvdHlwZS5tYXNrc0NhY2hlW21hc2tkZWZLZXldID09PSB1bmRlZmluZWQgfHwgITAgPT09IG5vY2FjaGUgPyAobWFza3NldERlZmluaXRpb24gPSB7XG4gICAgICAgICAgICAgICAgICAgIG1hc2s6IG1hc2ssXG4gICAgICAgICAgICAgICAgICAgIG1hc2tUb2tlbjogSW5wdXRtYXNrLnByb3RvdHlwZS5hbmFseXNlTWFzayhtYXNrLCByZWdleE1hc2ssIG9wdHMpLFxuICAgICAgICAgICAgICAgICAgICB2YWxpZFBvc2l0aW9uczoge30sXG4gICAgICAgICAgICAgICAgICAgIF9idWZmZXI6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgYnVmZmVyOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgICAgIHRlc3RzOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgbWV0YWRhdGE6IG1ldGFkYXRhLFxuICAgICAgICAgICAgICAgICAgICBtYXNrTGVuZ3RoOiB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICB9LCAhMCAhPT0gbm9jYWNoZSAmJiAoSW5wdXRtYXNrLnByb3RvdHlwZS5tYXNrc0NhY2hlW21hc2tkZWZLZXldID0gbWFza3NldERlZmluaXRpb24sIFxuICAgICAgICAgICAgICAgIG1hc2tzZXREZWZpbml0aW9uID0gJC5leHRlbmQoITAsIHt9LCBJbnB1dG1hc2sucHJvdG90eXBlLm1hc2tzQ2FjaGVbbWFza2RlZktleV0pKSkgOiBtYXNrc2V0RGVmaW5pdGlvbiA9ICQuZXh0ZW5kKCEwLCB7fSwgSW5wdXRtYXNrLnByb3RvdHlwZS5tYXNrc0NhY2hlW21hc2tkZWZLZXldKSwgXG4gICAgICAgICAgICAgICAgbWFza3NldERlZmluaXRpb247XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoJC5pc0Z1bmN0aW9uKG9wdHMubWFzaykgJiYgKG9wdHMubWFzayA9IG9wdHMubWFzayhvcHRzKSksICQuaXNBcnJheShvcHRzLm1hc2spKSB7XG4gICAgICAgICAgICAgICAgaWYgKG9wdHMubWFzay5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgIG9wdHMua2VlcFN0YXRpYyA9IG51bGwgPT09IG9wdHMua2VlcFN0YXRpYyB8fCBvcHRzLmtlZXBTdGF0aWM7XG4gICAgICAgICAgICAgICAgICAgIHZhciBhbHRNYXNrID0gb3B0cy5ncm91cG1hcmtlclswXTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICQuZWFjaChvcHRzLm51bWVyaWNJbnB1dCA/IG9wdHMubWFzay5yZXZlcnNlKCkgOiBvcHRzLm1hc2ssIGZ1bmN0aW9uKG5keCwgbXNrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbHRNYXNrLmxlbmd0aCA+IDEgJiYgKGFsdE1hc2sgKz0gb3B0cy5ncm91cG1hcmtlclsxXSArIG9wdHMuYWx0ZXJuYXRvcm1hcmtlciArIG9wdHMuZ3JvdXBtYXJrZXJbMF0pLCBcbiAgICAgICAgICAgICAgICAgICAgICAgIG1zay5tYXNrID09PSB1bmRlZmluZWQgfHwgJC5pc0Z1bmN0aW9uKG1zay5tYXNrKSA/IGFsdE1hc2sgKz0gbXNrIDogYWx0TWFzayArPSBtc2subWFzaztcbiAgICAgICAgICAgICAgICAgICAgfSksIGFsdE1hc2sgKz0gb3B0cy5ncm91cG1hcmtlclsxXSwgZ2VuZXJhdGVNYXNrKGFsdE1hc2ssIG9wdHMubWFzaywgb3B0cyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG9wdHMubWFzayA9IG9wdHMubWFzay5wb3AoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBvcHRzLm1hc2sgJiYgb3B0cy5tYXNrLm1hc2sgIT09IHVuZGVmaW5lZCAmJiAhJC5pc0Z1bmN0aW9uKG9wdHMubWFzay5tYXNrKSA/IGdlbmVyYXRlTWFzayhvcHRzLm1hc2subWFzaywgb3B0cy5tYXNrLCBvcHRzKSA6IGdlbmVyYXRlTWFzayhvcHRzLm1hc2ssIG9wdHMubWFzaywgb3B0cyk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gaXNJbnB1dEV2ZW50U3VwcG9ydGVkKGV2ZW50TmFtZSkge1xuICAgICAgICAgICAgdmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpLCBldk5hbWUgPSBcIm9uXCIgKyBldmVudE5hbWUsIGlzU3VwcG9ydGVkID0gZXZOYW1lIGluIGVsO1xuICAgICAgICAgICAgcmV0dXJuIGlzU3VwcG9ydGVkIHx8IChlbC5zZXRBdHRyaWJ1dGUoZXZOYW1lLCBcInJldHVybjtcIiksIGlzU3VwcG9ydGVkID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBlbFtldk5hbWVdKSwgXG4gICAgICAgICAgICBlbCA9IG51bGwsIGlzU3VwcG9ydGVkO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIG1hc2tTY29wZShhY3Rpb25PYmosIG1hc2tzZXQsIG9wdHMpIHtcbiAgICAgICAgICAgIGZ1bmN0aW9uIGdldE1hc2tUZW1wbGF0ZShiYXNlT25JbnB1dCwgbWluaW1hbFBvcywgaW5jbHVkZU1vZGUpIHtcbiAgICAgICAgICAgICAgICBtaW5pbWFsUG9zID0gbWluaW1hbFBvcyB8fCAwO1xuICAgICAgICAgICAgICAgIHZhciBuZHhJbnRsenIsIHRlc3QsIHRlc3RQb3MsIG1hc2tUZW1wbGF0ZSA9IFtdLCBwb3MgPSAwLCBsdnAgPSBnZXRMYXN0VmFsaWRQb3NpdGlvbigpO1xuICAgICAgICAgICAgICAgIGRvIHtcbiAgICAgICAgICAgICAgICAgICAgITAgPT09IGJhc2VPbklucHV0ICYmIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3NdID8gKHRlc3QgPSAodGVzdFBvcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3NdKS5tYXRjaCwgXG4gICAgICAgICAgICAgICAgICAgIG5keEludGx6ciA9IHRlc3RQb3MubG9jYXRvci5zbGljZSgpLCBtYXNrVGVtcGxhdGUucHVzaCghMCA9PT0gaW5jbHVkZU1vZGUgPyB0ZXN0UG9zLmlucHV0IDogITEgPT09IGluY2x1ZGVNb2RlID8gdGVzdC5uYXRpdmVEZWYgOiBnZXRQbGFjZWhvbGRlcihwb3MsIHRlc3QpKSkgOiAodGVzdCA9ICh0ZXN0UG9zID0gZ2V0VGVzdFRlbXBsYXRlKHBvcywgbmR4SW50bHpyLCBwb3MgLSAxKSkubWF0Y2gsIFxuICAgICAgICAgICAgICAgICAgICBuZHhJbnRsenIgPSB0ZXN0UG9zLmxvY2F0b3Iuc2xpY2UoKSwgKCExID09PSBvcHRzLmppdE1hc2tpbmcgfHwgcG9zIDwgbHZwIHx8IFwibnVtYmVyXCIgPT0gdHlwZW9mIG9wdHMuaml0TWFza2luZyAmJiBpc0Zpbml0ZShvcHRzLmppdE1hc2tpbmcpICYmIG9wdHMuaml0TWFza2luZyA+IHBvcykgJiYgbWFza1RlbXBsYXRlLnB1c2goITEgPT09IGluY2x1ZGVNb2RlID8gdGVzdC5uYXRpdmVEZWYgOiBnZXRQbGFjZWhvbGRlcihwb3MsIHRlc3QpKSksIFxuICAgICAgICAgICAgICAgICAgICBwb3MrKztcbiAgICAgICAgICAgICAgICB9IHdoaWxlICgobWF4TGVuZ3RoID09PSB1bmRlZmluZWQgfHwgcG9zIDwgbWF4TGVuZ3RoKSAmJiAobnVsbCAhPT0gdGVzdC5mbiB8fCBcIlwiICE9PSB0ZXN0LmRlZikgfHwgbWluaW1hbFBvcyA+IHBvcyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiXCIgPT09IG1hc2tUZW1wbGF0ZVttYXNrVGVtcGxhdGUubGVuZ3RoIC0gMV0gJiYgbWFza1RlbXBsYXRlLnBvcCgpLCAhMSA9PT0gaW5jbHVkZU1vZGUgJiYgZ2V0TWFza1NldCgpLm1hc2tMZW5ndGggIT09IHVuZGVmaW5lZCB8fCAoZ2V0TWFza1NldCgpLm1hc2tMZW5ndGggPSBwb3MgKyAxKSwgXG4gICAgICAgICAgICAgICAgbWFza1RlbXBsYXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gZ2V0TWFza1NldCgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWFza3NldDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIHJlc2V0TWFza1NldChzb2Z0KSB7XG4gICAgICAgICAgICAgICAgdmFyIG1hc2tzZXQgPSBnZXRNYXNrU2V0KCk7XG4gICAgICAgICAgICAgICAgbWFza3NldC5idWZmZXIgPSB1bmRlZmluZWQsICEwICE9PSBzb2Z0ICYmIChtYXNrc2V0LnZhbGlkUG9zaXRpb25zID0ge30sIG1hc2tzZXQucCA9IDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gZ2V0TGFzdFZhbGlkUG9zaXRpb24oY2xvc2VzdFRvLCBzdHJpY3QsIHZhbGlkUG9zaXRpb25zKSB7XG4gICAgICAgICAgICAgICAgdmFyIGJlZm9yZSA9IC0xLCBhZnRlciA9IC0xLCB2YWxpZHMgPSB2YWxpZFBvc2l0aW9ucyB8fCBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnM7XG4gICAgICAgICAgICAgICAgY2xvc2VzdFRvID09PSB1bmRlZmluZWQgJiYgKGNsb3Nlc3RUbyA9IC0xKTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBwb3NOZHggaW4gdmFsaWRzKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwc05keCA9IHBhcnNlSW50KHBvc05keCk7XG4gICAgICAgICAgICAgICAgICAgIHZhbGlkc1twc05keF0gJiYgKHN0cmljdCB8fCAhMCAhPT0gdmFsaWRzW3BzTmR4XS5nZW5lcmF0ZWRJbnB1dCkgJiYgKHBzTmR4IDw9IGNsb3Nlc3RUbyAmJiAoYmVmb3JlID0gcHNOZHgpLCBcbiAgICAgICAgICAgICAgICAgICAgcHNOZHggPj0gY2xvc2VzdFRvICYmIChhZnRlciA9IHBzTmR4KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiAtMSAhPT0gYmVmb3JlICYmIGNsb3Nlc3RUbyAtIGJlZm9yZSA+IDEgfHwgYWZ0ZXIgPCBjbG9zZXN0VG8gPyBiZWZvcmUgOiBhZnRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIHN0cmlwVmFsaWRQb3NpdGlvbnMoc3RhcnQsIGVuZCwgbm9jaGVjaywgc3RyaWN0KSB7XG4gICAgICAgICAgICAgICAgdmFyIGksIHN0YXJ0UG9zID0gc3RhcnQsIHBvc2l0aW9uc0Nsb25lID0gJC5leHRlbmQoITAsIHt9LCBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnMpLCBuZWVkc1ZhbGlkYXRpb24gPSAhMTtcbiAgICAgICAgICAgICAgICBmb3IgKGdldE1hc2tTZXQoKS5wID0gc3RhcnQsIGkgPSBlbmQgLSAxOyBpID49IHN0YXJ0UG9zOyBpLS0pIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tpXSAhPT0gdW5kZWZpbmVkICYmICghMCAhPT0gbm9jaGVjayAmJiAoIWdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tpXS5tYXRjaC5vcHRpb25hbGl0eSAmJiBmdW5jdGlvbihwb3MpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBvc01hdGNoID0gZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvc107XG4gICAgICAgICAgICAgICAgICAgIGlmIChwb3NNYXRjaCAhPT0gdW5kZWZpbmVkICYmIG51bGwgPT09IHBvc01hdGNoLm1hdGNoLmZuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcHJldk1hdGNoID0gZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3BvcyAtIDFdLCBuZXh0TWF0Y2ggPSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbcG9zICsgMV07XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJldk1hdGNoICE9PSB1bmRlZmluZWQgJiYgbmV4dE1hdGNoICE9PSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICExO1xuICAgICAgICAgICAgICAgIH0oaSkgfHwgITEgPT09IG9wdHMuY2FuQ2xlYXJQb3NpdGlvbihnZXRNYXNrU2V0KCksIGksIGdldExhc3RWYWxpZFBvc2l0aW9uKHVuZGVmaW5lZCwgITApLCBzdHJpY3QsIG9wdHMpKSB8fCBkZWxldGUgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2ldKTtcbiAgICAgICAgICAgICAgICBmb3IgKHJlc2V0TWFza1NldCghMCksIGkgPSBzdGFydFBvcyArIDE7IGkgPD0gZ2V0TGFzdFZhbGlkUG9zaXRpb24oKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoO2dldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tzdGFydFBvc10gIT09IHVuZGVmaW5lZDsgKSBzdGFydFBvcysrO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaSA8IHN0YXJ0UG9zICYmIChpID0gc3RhcnRQb3MgKyAxKSwgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2ldID09PSB1bmRlZmluZWQgJiYgaXNNYXNrKGkpKSBpKys7IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHQgPSBnZXRUZXN0VGVtcGxhdGUoaSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAhMSA9PT0gbmVlZHNWYWxpZGF0aW9uICYmIHBvc2l0aW9uc0Nsb25lW3N0YXJ0UG9zXSAmJiBwb3NpdGlvbnNDbG9uZVtzdGFydFBvc10ubWF0Y2guZGVmID09PSB0Lm1hdGNoLmRlZiA/IChnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbc3RhcnRQb3NdID0gJC5leHRlbmQoITAsIHt9LCBwb3NpdGlvbnNDbG9uZVtzdGFydFBvc10pLCBcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tzdGFydFBvc10uaW5wdXQgPSB0LmlucHV0LCBkZWxldGUgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2ldLCBcbiAgICAgICAgICAgICAgICAgICAgICAgIGkrKykgOiBwb3NpdGlvbkNhbk1hdGNoRGVmaW5pdGlvbihzdGFydFBvcywgdC5tYXRjaC5kZWYpID8gITEgIT09IGlzVmFsaWQoc3RhcnRQb3MsIHQuaW5wdXQgfHwgZ2V0UGxhY2Vob2xkZXIoaSksICEwKSAmJiAoZGVsZXRlIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tpXSwgXG4gICAgICAgICAgICAgICAgICAgICAgICBpKyssIG5lZWRzVmFsaWRhdGlvbiA9ICEwKSA6IGlzTWFzayhpKSB8fCAoaSsrLCBzdGFydFBvcy0tKSwgc3RhcnRQb3MrKztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXNldE1hc2tTZXQoITApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gZGV0ZXJtaW5lVGVzdFRlbXBsYXRlKHBvcywgdGVzdHMsIGd1ZXNzTmV4dEJlc3QpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciB0ZXN0UG9zLCBhbHRUZXN0ID0gZ2V0VGVzdChwb3MgPSBwb3MgPiAwID8gcG9zIC0gMSA6IDApLCBhbHRBcnIgPSBhbHRUZXN0LmFsdGVybmF0aW9uICE9PSB1bmRlZmluZWQgPyBhbHRUZXN0LmxvY2F0b3JbYWx0VGVzdC5hbHRlcm5hdGlvbl0udG9TdHJpbmcoKS5zcGxpdChcIixcIikgOiBbXSwgbmR4ID0gMDsgbmR4IDwgdGVzdHMubGVuZ3RoICYmICghKCh0ZXN0UG9zID0gdGVzdHNbbmR4XSkubWF0Y2ggJiYgKG9wdHMuZ3JlZWR5ICYmICEwICE9PSB0ZXN0UG9zLm1hdGNoLm9wdGlvbmFsUXVhbnRpZmllciB8fCAoITEgPT09IHRlc3RQb3MubWF0Y2gub3B0aW9uYWxpdHkgfHwgITEgPT09IHRlc3RQb3MubWF0Y2gubmV3QmxvY2tNYXJrZXIpICYmICEwICE9PSB0ZXN0UG9zLm1hdGNoLm9wdGlvbmFsUXVhbnRpZmllcikgJiYgKGFsdFRlc3QuYWx0ZXJuYXRpb24gPT09IHVuZGVmaW5lZCB8fCBhbHRUZXN0LmFsdGVybmF0aW9uICE9PSB0ZXN0UG9zLmFsdGVybmF0aW9uIHx8IHRlc3RQb3MubG9jYXRvclthbHRUZXN0LmFsdGVybmF0aW9uXSAhPT0gdW5kZWZpbmVkICYmIGNoZWNrQWx0ZXJuYXRpb25NYXRjaCh0ZXN0UG9zLmxvY2F0b3JbYWx0VGVzdC5hbHRlcm5hdGlvbl0udG9TdHJpbmcoKS5zcGxpdChcIixcIiksIGFsdEFycikpKSB8fCAhMCA9PT0gZ3Vlc3NOZXh0QmVzdCAmJiAobnVsbCAhPT0gdGVzdFBvcy5tYXRjaC5mbiB8fCAvWzAtOWEtYkEtWl0vLnRlc3QodGVzdFBvcy5tYXRjaC5kZWYpKSk7IG5keCsrKSA7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRlc3RQb3M7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBnZXRUZXN0VGVtcGxhdGUocG9zLCBuZHhJbnRsenIsIHRzdFBzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3NdIHx8IGRldGVybWluZVRlc3RUZW1wbGF0ZShwb3MsIGdldFRlc3RzKHBvcywgbmR4SW50bHpyID8gbmR4SW50bHpyLnNsaWNlKCkgOiBuZHhJbnRsenIsIHRzdFBzKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBnZXRUZXN0KHBvcykge1xuICAgICAgICAgICAgICAgIHJldHVybiBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbcG9zXSA/IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3NdIDogZ2V0VGVzdHMocG9zKVswXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIHBvc2l0aW9uQ2FuTWF0Y2hEZWZpbml0aW9uKHBvcywgZGVmKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgdmFsaWQgPSAhMSwgdGVzdHMgPSBnZXRUZXN0cyhwb3MpLCB0bmR4ID0gMDsgdG5keCA8IHRlc3RzLmxlbmd0aDsgdG5keCsrKSBpZiAodGVzdHNbdG5keF0ubWF0Y2ggJiYgdGVzdHNbdG5keF0ubWF0Y2guZGVmID09PSBkZWYpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsaWQgPSAhMDtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWxpZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIGdldFRlc3RzKHBvcywgbmR4SW50bHpyLCB0c3RQcykge1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHJlc29sdmVUZXN0RnJvbVRva2VuKG1hc2tUb2tlbiwgbmR4SW5pdGlhbGl6ZXIsIGxvb3BOZHgsIHF1YW50aWZpZXJSZWN1cnNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGhhbmRsZU1hdGNoKG1hdGNoLCBsb29wTmR4LCBxdWFudGlmaWVyUmVjdXJzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gaXNGaXJzdE1hdGNoKGxhdGVzdE1hdGNoLCB0b2tlbkdyb3VwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZpcnN0TWF0Y2ggPSAwID09PSAkLmluQXJyYXkobGF0ZXN0TWF0Y2gsIHRva2VuR3JvdXAubWF0Y2hlcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZpcnN0TWF0Y2ggfHwgJC5lYWNoKHRva2VuR3JvdXAubWF0Y2hlcywgZnVuY3Rpb24obmR4LCBtYXRjaCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoITAgPT09IG1hdGNoLmlzUXVhbnRpZmllciAmJiAoZmlyc3RNYXRjaCA9IGlzRmlyc3RNYXRjaChsYXRlc3RNYXRjaCwgdG9rZW5Hcm91cC5tYXRjaGVzW25keCAtIDFdKSkpIHJldHVybiAhMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwgZmlyc3RNYXRjaDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHJlc29sdmVOZHhJbml0aWFsaXplcihwb3MsIGFsdGVybmF0ZU5keCwgdGFyZ2V0QWx0ZXJuYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYmVzdE1hdGNoLCBpbmRleFBvcztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoKGdldE1hc2tTZXQoKS50ZXN0c1twb3NdIHx8IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3NdKSAmJiAkLmVhY2goZ2V0TWFza1NldCgpLnRlc3RzW3Bvc10gfHwgWyBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbcG9zXSBdLCBmdW5jdGlvbihuZHgsIGxtbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxtbnQubWxvY1thbHRlcm5hdGVOZHhdKSByZXR1cm4gYmVzdE1hdGNoID0gbG1udCwgITE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhbHRlcm5hdGlvbiA9IHRhcmdldEFsdGVybmF0aW9uICE9PSB1bmRlZmluZWQgPyB0YXJnZXRBbHRlcm5hdGlvbiA6IGxtbnQuYWx0ZXJuYXRpb24sIG5keFBvcyA9IGxtbnQubG9jYXRvclthbHRlcm5hdGlvbl0gIT09IHVuZGVmaW5lZCA/IGxtbnQubG9jYXRvclthbHRlcm5hdGlvbl0udG9TdHJpbmcoKS5pbmRleE9mKGFsdGVybmF0ZU5keCkgOiAtMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGluZGV4UG9zID09PSB1bmRlZmluZWQgfHwgbmR4UG9zIDwgaW5kZXhQb3MpICYmIC0xICE9PSBuZHhQb3MgJiYgKGJlc3RNYXRjaCA9IGxtbnQsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleFBvcyA9IG5keFBvcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIGJlc3RNYXRjaCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYmVzdE1hdGNoQWx0SW5kZXggPSBiZXN0TWF0Y2gubG9jYXRvcltiZXN0TWF0Y2guYWx0ZXJuYXRpb25dO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGJlc3RNYXRjaC5tbG9jW2FsdGVybmF0ZU5keF0gfHwgYmVzdE1hdGNoLm1sb2NbYmVzdE1hdGNoQWx0SW5kZXhdIHx8IGJlc3RNYXRjaC5sb2NhdG9yKS5zbGljZSgodGFyZ2V0QWx0ZXJuYXRpb24gIT09IHVuZGVmaW5lZCA/IHRhcmdldEFsdGVybmF0aW9uIDogYmVzdE1hdGNoLmFsdGVybmF0aW9uKSArIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0QWx0ZXJuYXRpb24gIT09IHVuZGVmaW5lZCA/IHJlc29sdmVOZHhJbml0aWFsaXplcihwb3MsIGFsdGVybmF0ZU5keCkgOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiBzZXRNZXJnZUxvY2F0b3JzKHRhcmdldE1hdGNoLCBhbHRNYXRjaCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldE1hdGNoLm1sb2MgPSB0YXJnZXRNYXRjaC5tbG9jIHx8IHt9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBsb2NOZHggPSB0YXJnZXRNYXRjaC5sb2NhdG9yW3RhcmdldE1hdGNoLmFsdGVybmF0aW9uXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXCJzdHJpbmdcIiA9PSB0eXBlb2YgbG9jTmR4ICYmIChsb2NOZHggPSBsb2NOZHguc3BsaXQoXCIsXCIpWzBdKSwgdGFyZ2V0TWF0Y2gubWxvY1tsb2NOZHhdID09PSB1bmRlZmluZWQgJiYgKHRhcmdldE1hdGNoLm1sb2NbbG9jTmR4XSA9IHRhcmdldE1hdGNoLmxvY2F0b3Iuc2xpY2UoKSksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsdE1hdGNoICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgbmR4IGluIGFsdE1hdGNoLm1sb2MpIFwic3RyaW5nXCIgPT0gdHlwZW9mIG5keCAmJiAobmR4ID0gbmR4LnNwbGl0KFwiLFwiKVswXSksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRNYXRjaC5tbG9jW25keF0gPT09IHVuZGVmaW5lZCAmJiAodGFyZ2V0TWF0Y2gubWxvY1tuZHhdID0gYWx0TWF0Y2gubWxvY1tuZHhdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0TWF0Y2gubG9jYXRvclt0YXJnZXRNYXRjaC5hbHRlcm5hdGlvbl0gPSBPYmplY3Qua2V5cyh0YXJnZXRNYXRjaC5tbG9jKS5qb2luKFwiLFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGVzdFBvcyA+IDFlNCkgdGhyb3cgXCJJbnB1dG1hc2s6IFRoZXJlIGlzIHByb2JhYmx5IGFuIGVycm9yIGluIHlvdXIgbWFzayBkZWZpbml0aW9uIG9yIGluIHRoZSBjb2RlLiBDcmVhdGUgYW4gaXNzdWUgb24gZ2l0aHViIHdpdGggYW4gZXhhbXBsZSBvZiB0aGUgbWFzayB5b3UgYXJlIHVzaW5nLiBcIiArIGdldE1hc2tTZXQoKS5tYXNrO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRlc3RQb3MgPT09IHBvcyAmJiBtYXRjaC5tYXRjaGVzID09PSB1bmRlZmluZWQpIHJldHVybiBtYXRjaGVzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hdGNoOiBtYXRjaCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhdG9yOiBsb29wTmR4LnJldmVyc2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZDogY2FjaGVEZXBlbmRlbmN5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1sb2M6IHt9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KSwgITA7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobWF0Y2gubWF0Y2hlcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1hdGNoLmlzR3JvdXAgJiYgcXVhbnRpZmllclJlY3Vyc2UgIT09IG1hdGNoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCA9IGhhbmRsZU1hdGNoKG1hc2tUb2tlbi5tYXRjaGVzWyQuaW5BcnJheShtYXRjaCwgbWFza1Rva2VuLm1hdGNoZXMpICsgMV0sIGxvb3BOZHgpKSByZXR1cm4gITA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChtYXRjaC5pc09wdGlvbmFsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvcHRpb25hbFRva2VuID0gbWF0Y2g7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCA9IHJlc29sdmVUZXN0RnJvbVRva2VuKG1hdGNoLCBuZHhJbml0aWFsaXplciwgbG9vcE5keCwgcXVhbnRpZmllclJlY3Vyc2UpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobGF0ZXN0TWF0Y2ggPSBtYXRjaGVzW21hdGNoZXMubGVuZ3RoIC0gMV0ubWF0Y2gsICFpc0ZpcnN0TWF0Y2gobGF0ZXN0TWF0Y2gsIG9wdGlvbmFsVG9rZW4pKSByZXR1cm4gITA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnNlcnRTdG9wID0gITAsIHRlc3RQb3MgPSBwb3M7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKG1hdGNoLmlzQWx0ZXJuYXRvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWFsdE1hdGNoZXMsIGFsdGVybmF0ZVRva2VuID0gbWF0Y2gsIG1hbHRlcm5hdGVNYXRjaGVzID0gW10sIGN1cnJlbnRNYXRjaGVzID0gbWF0Y2hlcy5zbGljZSgpLCBsb29wTmR4Q250ID0gbG9vcE5keC5sZW5ndGgsIGFsdEluZGV4ID0gbmR4SW5pdGlhbGl6ZXIubGVuZ3RoID4gMCA/IG5keEluaXRpYWxpemVyLnNoaWZ0KCkgOiAtMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKC0xID09PSBhbHRJbmRleCB8fCBcInN0cmluZ1wiID09IHR5cGVvZiBhbHRJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFtbmR4LCBjdXJyZW50UG9zID0gdGVzdFBvcywgbmR4SW5pdGlhbGl6ZXJDbG9uZSA9IG5keEluaXRpYWxpemVyLnNsaWNlKCksIGFsdEluZGV4QXJyID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXCJzdHJpbmdcIiA9PSB0eXBlb2YgYWx0SW5kZXgpIGFsdEluZGV4QXJyID0gYWx0SW5kZXguc3BsaXQoXCIsXCIpOyBlbHNlIGZvciAoYW1uZHggPSAwOyBhbW5keCA8IGFsdGVybmF0ZVRva2VuLm1hdGNoZXMubGVuZ3RoOyBhbW5keCsrKSBhbHRJbmRleEFyci5wdXNoKGFtbmR4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIG5keCA9IDA7IG5keCA8IGFsdEluZGV4QXJyLmxlbmd0aDsgbmR4KyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbW5keCA9IHBhcnNlSW50KGFsdEluZGV4QXJyW25keF0pLCBtYXRjaGVzID0gW10sIG5keEluaXRpYWxpemVyID0gcmVzb2x2ZU5keEluaXRpYWxpemVyKHRlc3RQb3MsIGFtbmR4LCBsb29wTmR4Q250KSB8fCBuZHhJbml0aWFsaXplckNsb25lLnNsaWNlKCksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hdGNoID0gaGFuZGxlTWF0Y2goYWx0ZXJuYXRlVG9rZW4ubWF0Y2hlc1thbW5keF0gfHwgbWFza1Rva2VuLm1hdGNoZXNbYW1uZHhdLCBbIGFtbmR4IF0uY29uY2F0KGxvb3BOZHgpLCBxdWFudGlmaWVyUmVjdXJzZSkgfHwgbWF0Y2gsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hbHRNYXRjaGVzID0gbWF0Y2hlcy5zbGljZSgpLCB0ZXN0UG9zID0gY3VycmVudFBvcywgbWF0Y2hlcyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIG5keDEgPSAwOyBuZHgxIDwgbWFsdE1hdGNoZXMubGVuZ3RoOyBuZHgxKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFsdE1hdGNoID0gbWFsdE1hdGNoZXNbbmR4MV0sIGRyb3BNYXRjaCA9ICExO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHRNYXRjaC5hbHRlcm5hdGlvbiA9IGFsdE1hdGNoLmFsdGVybmF0aW9uIHx8IGxvb3BOZHhDbnQsIHNldE1lcmdlTG9jYXRvcnMoYWx0TWF0Y2gpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBuZHgyID0gMDsgbmR4MiA8IG1hbHRlcm5hdGVNYXRjaGVzLmxlbmd0aDsgbmR4MisrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYWx0TWF0Y2gyID0gbWFsdGVybmF0ZU1hdGNoZXNbbmR4Ml07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXCJzdHJpbmdcIiAhPSB0eXBlb2YgYWx0SW5kZXggfHwgLTEgIT09ICQuaW5BcnJheShhbHRNYXRjaC5sb2NhdG9yW2FsdE1hdGNoLmFsdGVybmF0aW9uXS50b1N0cmluZygpLCBhbHRJbmRleEFycikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZnVuY3Rpb24oc291cmNlLCB0YXJnZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNvdXJjZS5tYXRjaC5uYXRpdmVEZWYgPT09IHRhcmdldC5tYXRjaC5uYXRpdmVEZWYgfHwgc291cmNlLm1hdGNoLmRlZiA9PT0gdGFyZ2V0Lm1hdGNoLm5hdGl2ZURlZiB8fCBzb3VyY2UubWF0Y2gubmF0aXZlRGVmID09PSB0YXJnZXQubWF0Y2guZGVmO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0oYWx0TWF0Y2gsIGFsdE1hdGNoMikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZHJvcE1hdGNoID0gITAsIGFsdE1hdGNoLmFsdGVybmF0aW9uID09PSBhbHRNYXRjaDIuYWx0ZXJuYXRpb24gJiYgLTEgPT09IGFsdE1hdGNoMi5sb2NhdG9yW2FsdE1hdGNoMi5hbHRlcm5hdGlvbl0udG9TdHJpbmcoKS5pbmRleE9mKGFsdE1hdGNoLmxvY2F0b3JbYWx0TWF0Y2guYWx0ZXJuYXRpb25dKSAmJiBzZXRNZXJnZUxvY2F0b3JzKGFsdE1hdGNoMiwgYWx0TWF0Y2gpLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0TWF0Y2gubWF0Y2gubmF0aXZlRGVmICE9PSBhbHRNYXRjaDIubWF0Y2gubmF0aXZlRGVmICYmIGFsdE1hdGNoLm1hdGNoLm5hdGl2ZURlZiA9PT0gYWx0TWF0Y2gyLm1hdGNoLmRlZiAmJiAoZHJvcE1hdGNoID0gITEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFsdE1hdGNoLm1hdGNoLmRlZiA9PT0gYWx0TWF0Y2gyLm1hdGNoLmRlZikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkcm9wTWF0Y2ggPSAhMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmdW5jdGlvbihzb3VyY2UsIHRhcmdldCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbCA9PT0gc291cmNlLm1hdGNoLmZuICYmIG51bGwgIT09IHRhcmdldC5tYXRjaC5mbiAmJiB0YXJnZXQubWF0Y2guZm4udGVzdChzb3VyY2UubWF0Y2guZGVmLCBnZXRNYXNrU2V0KCksIHBvcywgITEsIG9wdHMsICExKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KGFsdE1hdGNoLCBhbHRNYXRjaDIpIHx8IGZ1bmN0aW9uKHNvdXJjZSwgdGFyZ2V0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsICE9PSBzb3VyY2UubWF0Y2guZm4gJiYgbnVsbCAhPT0gdGFyZ2V0Lm1hdGNoLmZuICYmIHRhcmdldC5tYXRjaC5mbi50ZXN0KHNvdXJjZS5tYXRjaC5kZWYucmVwbGFjZSgvW1xcW1xcXV0vZywgXCJcIiksIGdldE1hc2tTZXQoKSwgcG9zLCAhMSwgb3B0cywgITEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0oYWx0TWF0Y2gsIGFsdE1hdGNoMikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0TWF0Y2guYWx0ZXJuYXRpb24gPT09IGFsdE1hdGNoMi5hbHRlcm5hdGlvbiAmJiAtMSA9PT0gYWx0TWF0Y2gubG9jYXRvclthbHRNYXRjaC5hbHRlcm5hdGlvbl0udG9TdHJpbmcoKS5pbmRleE9mKGFsdE1hdGNoMi5sb2NhdG9yW2FsdE1hdGNoMi5hbHRlcm5hdGlvbl0udG9TdHJpbmcoKS5zcGxpdChcIlwiKVswXSkgJiYgKGFsdE1hdGNoLm5hID0gYWx0TWF0Y2gubmEgfHwgYWx0TWF0Y2gubG9jYXRvclthbHRNYXRjaC5hbHRlcm5hdGlvbl0udG9TdHJpbmcoKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0xID09PSBhbHRNYXRjaC5uYS5pbmRleE9mKGFsdE1hdGNoLmxvY2F0b3JbYWx0TWF0Y2guYWx0ZXJuYXRpb25dLnRvU3RyaW5nKCkuc3BsaXQoXCJcIilbMF0pICYmIChhbHRNYXRjaC5uYSA9IGFsdE1hdGNoLm5hICsgXCIsXCIgKyBhbHRNYXRjaC5sb2NhdG9yW2FsdE1hdGNoMi5hbHRlcm5hdGlvbl0udG9TdHJpbmcoKS5zcGxpdChcIlwiKVswXSksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkcm9wTWF0Y2ggPSAhMCwgc2V0TWVyZ2VMb2NhdG9ycyhhbHRNYXRjaCwgYWx0TWF0Y2gyKSwgbWFsdGVybmF0ZU1hdGNoZXMuc3BsaWNlKG1hbHRlcm5hdGVNYXRjaGVzLmluZGV4T2YoYWx0TWF0Y2gyKSwgMCwgYWx0TWF0Y2gpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRyb3BNYXRjaCB8fCBtYWx0ZXJuYXRlTWF0Y2hlcy5wdXNoKGFsdE1hdGNoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRjaGVzID0gY3VycmVudE1hdGNoZXMuY29uY2F0KG1hbHRlcm5hdGVNYXRjaGVzKSwgdGVzdFBvcyA9IHBvcywgaW5zZXJ0U3RvcCA9IG1hdGNoZXMubGVuZ3RoID4gMCwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRjaCA9IG1hbHRlcm5hdGVNYXRjaGVzLmxlbmd0aCA+IDAsIG5keEluaXRpYWxpemVyID0gbmR4SW5pdGlhbGl6ZXJDbG9uZS5zbGljZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgbWF0Y2ggPSBoYW5kbGVNYXRjaChhbHRlcm5hdGVUb2tlbi5tYXRjaGVzW2FsdEluZGV4XSB8fCBtYXNrVG9rZW4ubWF0Y2hlc1thbHRJbmRleF0sIFsgYWx0SW5kZXggXS5jb25jYXQobG9vcE5keCksIHF1YW50aWZpZXJSZWN1cnNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1hdGNoKSByZXR1cm4gITA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChtYXRjaC5pc1F1YW50aWZpZXIgJiYgcXVhbnRpZmllclJlY3Vyc2UgIT09IG1hc2tUb2tlbi5tYXRjaGVzWyQuaW5BcnJheShtYXRjaCwgbWFza1Rva2VuLm1hdGNoZXMpIC0gMV0pIGZvciAodmFyIHF0ID0gbWF0Y2gsIHFuZHggPSBuZHhJbml0aWFsaXplci5sZW5ndGggPiAwID8gbmR4SW5pdGlhbGl6ZXIuc2hpZnQoKSA6IDA7IHFuZHggPCAoaXNOYU4ocXQucXVhbnRpZmllci5tYXgpID8gcW5keCArIDEgOiBxdC5xdWFudGlmaWVyLm1heCkgJiYgdGVzdFBvcyA8PSBwb3M7IHFuZHgrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG9rZW5Hcm91cCA9IG1hc2tUb2tlbi5tYXRjaGVzWyQuaW5BcnJheShxdCwgbWFza1Rva2VuLm1hdGNoZXMpIC0gMV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCA9IGhhbmRsZU1hdGNoKHRva2VuR3JvdXAsIFsgcW5keCBdLmNvbmNhdChsb29wTmR4KSwgdG9rZW5Hcm91cCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsYXRlc3RNYXRjaCA9IG1hdGNoZXNbbWF0Y2hlcy5sZW5ndGggLSAxXS5tYXRjaCwgbGF0ZXN0TWF0Y2gub3B0aW9uYWxRdWFudGlmaWVyID0gcW5keCA+IHF0LnF1YW50aWZpZXIubWluIC0gMSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0ZpcnN0TWF0Y2gobGF0ZXN0TWF0Y2gsIHRva2VuR3JvdXApKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHFuZHggPiBxdC5xdWFudGlmaWVyLm1pbiAtIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5zZXJ0U3RvcCA9ICEwLCB0ZXN0UG9zID0gcG9zO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICEwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICEwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChtYXRjaCA9IHJlc29sdmVUZXN0RnJvbVRva2VuKG1hdGNoLCBuZHhJbml0aWFsaXplciwgbG9vcE5keCwgcXVhbnRpZmllclJlY3Vyc2UpKSByZXR1cm4gITA7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgdGVzdFBvcysrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHRuZHggPSBuZHhJbml0aWFsaXplci5sZW5ndGggPiAwID8gbmR4SW5pdGlhbGl6ZXIuc2hpZnQoKSA6IDA7IHRuZHggPCBtYXNrVG9rZW4ubWF0Y2hlcy5sZW5ndGg7IHRuZHgrKykgaWYgKCEwICE9PSBtYXNrVG9rZW4ubWF0Y2hlc1t0bmR4XS5pc1F1YW50aWZpZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtYXRjaCA9IGhhbmRsZU1hdGNoKG1hc2tUb2tlbi5tYXRjaGVzW3RuZHhdLCBbIHRuZHggXS5jb25jYXQobG9vcE5keCksIHF1YW50aWZpZXJSZWN1cnNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCAmJiB0ZXN0UG9zID09PSBwb3MpIHJldHVybiBtYXRjaDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0ZXN0UG9zID4gcG9zKSBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBmaWx0ZXJUZXN0cyh0ZXN0cykge1xuICAgICAgICAgICAgICAgICAgICBpZiAob3B0cy5rZWVwU3RhdGljICYmIHBvcyA+IDAgJiYgdGVzdHMubGVuZ3RoID4gMSArIChcIlwiID09PSB0ZXN0c1t0ZXN0cy5sZW5ndGggLSAxXS5tYXRjaC5kZWYgPyAxIDogMCkgJiYgITAgIT09IHRlc3RzWzBdLm1hdGNoLm9wdGlvbmFsaXR5ICYmICEwICE9PSB0ZXN0c1swXS5tYXRjaC5vcHRpb25hbFF1YW50aWZpZXIgJiYgbnVsbCA9PT0gdGVzdHNbMF0ubWF0Y2guZm4gJiYgIS9bMC05YS1iQS1aXS8udGVzdCh0ZXN0c1swXS5tYXRjaC5kZWYpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3BvcyAtIDFdID09PSB1bmRlZmluZWQpIHJldHVybiBbIGRldGVybWluZVRlc3RUZW1wbGF0ZShwb3MsIHRlc3RzKSBdO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3MgLSAxXS5hbHRlcm5hdGlvbiA9PT0gdGVzdHNbMF0uYWx0ZXJuYXRpb24pIHJldHVybiBbIGRldGVybWluZVRlc3RUZW1wbGF0ZShwb3MsIHRlc3RzKSBdO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3MgLSAxXSkgcmV0dXJuIFsgZGV0ZXJtaW5lVGVzdFRlbXBsYXRlKHBvcywgdGVzdHMpIF07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRlc3RzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgbGF0ZXN0TWF0Y2gsIG1hc2tUb2tlbnMgPSBnZXRNYXNrU2V0KCkubWFza1Rva2VuLCB0ZXN0UG9zID0gbmR4SW50bHpyID8gdHN0UHMgOiAwLCBuZHhJbml0aWFsaXplciA9IG5keEludGx6ciA/IG5keEludGx6ci5zbGljZSgpIDogWyAwIF0sIG1hdGNoZXMgPSBbXSwgaW5zZXJ0U3RvcCA9ICExLCBjYWNoZURlcGVuZGVuY3kgPSBuZHhJbnRsenIgPyBuZHhJbnRsenIuam9pbihcIlwiKSA6IFwiXCI7XG4gICAgICAgICAgICAgICAgaWYgKHBvcyA+IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChuZHhJbnRsenIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgdGVzdCwgcHJldmlvdXNQb3MgPSBwb3MgLSAxOyAodGVzdCA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twcmV2aW91c1Bvc10gfHwgZ2V0TWFza1NldCgpLnRlc3RzW3ByZXZpb3VzUG9zXSkgPT09IHVuZGVmaW5lZCAmJiBwcmV2aW91c1BvcyA+IC0xOyApIHByZXZpb3VzUG9zLS07XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXN0ICE9PSB1bmRlZmluZWQgJiYgcHJldmlvdXNQb3MgPiAtMSAmJiAobmR4SW5pdGlhbGl6ZXIgPSBmdW5jdGlvbihwb3MsIHRlc3RzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxvY2F0b3IgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJC5pc0FycmF5KHRlc3RzKSB8fCAodGVzdHMgPSBbIHRlc3RzIF0pLCB0ZXN0cy5sZW5ndGggPiAwICYmICh0ZXN0c1swXS5hbHRlcm5hdGlvbiA9PT0gdW5kZWZpbmVkID8gMCA9PT0gKGxvY2F0b3IgPSBkZXRlcm1pbmVUZXN0VGVtcGxhdGUocG9zLCB0ZXN0cy5zbGljZSgpKS5sb2NhdG9yLnNsaWNlKCkpLmxlbmd0aCAmJiAobG9jYXRvciA9IHRlc3RzWzBdLmxvY2F0b3Iuc2xpY2UoKSkgOiAkLmVhY2godGVzdHMsIGZ1bmN0aW9uKG5keCwgdHN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcIlwiICE9PSB0c3QuZGVmKSBpZiAoMCA9PT0gbG9jYXRvci5sZW5ndGgpIGxvY2F0b3IgPSB0c3QubG9jYXRvci5zbGljZSgpOyBlbHNlIGZvciAodmFyIGkgPSAwOyBpIDwgbG9jYXRvci5sZW5ndGg7IGkrKykgdHN0LmxvY2F0b3JbaV0gJiYgLTEgPT09IGxvY2F0b3JbaV0udG9TdHJpbmcoKS5pbmRleE9mKHRzdC5sb2NhdG9yW2ldKSAmJiAobG9jYXRvcltpXSArPSBcIixcIiArIHRzdC5sb2NhdG9yW2ldKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSksIGxvY2F0b3I7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KHByZXZpb3VzUG9zLCB0ZXN0KSwgY2FjaGVEZXBlbmRlbmN5ID0gbmR4SW5pdGlhbGl6ZXIuam9pbihcIlwiKSwgdGVzdFBvcyA9IHByZXZpb3VzUG9zKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoZ2V0TWFza1NldCgpLnRlc3RzW3Bvc10gJiYgZ2V0TWFza1NldCgpLnRlc3RzW3Bvc11bMF0uY2QgPT09IGNhY2hlRGVwZW5kZW5jeSkgcmV0dXJuIGZpbHRlclRlc3RzKGdldE1hc2tTZXQoKS50ZXN0c1twb3NdKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgbXRuZHggPSBuZHhJbml0aWFsaXplci5zaGlmdCgpOyBtdG5keCA8IG1hc2tUb2tlbnMubGVuZ3RoICYmICEocmVzb2x2ZVRlc3RGcm9tVG9rZW4obWFza1Rva2Vuc1ttdG5keF0sIG5keEluaXRpYWxpemVyLCBbIG10bmR4IF0pICYmIHRlc3RQb3MgPT09IHBvcyB8fCB0ZXN0UG9zID4gcG9zKTsgbXRuZHgrKykgO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gKDAgPT09IG1hdGNoZXMubGVuZ3RoIHx8IGluc2VydFN0b3ApICYmIG1hdGNoZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIG1hdGNoOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmbjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbmFsaXR5OiAhMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2luZzogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZjogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIlwiXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGxvY2F0b3I6IFtdLFxuICAgICAgICAgICAgICAgICAgICBtbG9jOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgY2Q6IGNhY2hlRGVwZW5kZW5jeVxuICAgICAgICAgICAgICAgIH0pLCBuZHhJbnRsenIgIT09IHVuZGVmaW5lZCAmJiBnZXRNYXNrU2V0KCkudGVzdHNbcG9zXSA/IGZpbHRlclRlc3RzKCQuZXh0ZW5kKCEwLCBbXSwgbWF0Y2hlcykpIDogKGdldE1hc2tTZXQoKS50ZXN0c1twb3NdID0gJC5leHRlbmQoITAsIFtdLCBtYXRjaGVzKSwgXG4gICAgICAgICAgICAgICAgZmlsdGVyVGVzdHMoZ2V0TWFza1NldCgpLnRlc3RzW3Bvc10pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIGdldEJ1ZmZlclRlbXBsYXRlKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBnZXRNYXNrU2V0KCkuX2J1ZmZlciA9PT0gdW5kZWZpbmVkICYmIChnZXRNYXNrU2V0KCkuX2J1ZmZlciA9IGdldE1hc2tUZW1wbGF0ZSghMSwgMSksIFxuICAgICAgICAgICAgICAgIGdldE1hc2tTZXQoKS5idWZmZXIgPT09IHVuZGVmaW5lZCAmJiAoZ2V0TWFza1NldCgpLmJ1ZmZlciA9IGdldE1hc2tTZXQoKS5fYnVmZmVyLnNsaWNlKCkpKSwgXG4gICAgICAgICAgICAgICAgZ2V0TWFza1NldCgpLl9idWZmZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBnZXRCdWZmZXIobm9DYWNoZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBnZXRNYXNrU2V0KCkuYnVmZmVyICE9PSB1bmRlZmluZWQgJiYgITAgIT09IG5vQ2FjaGUgfHwgKGdldE1hc2tTZXQoKS5idWZmZXIgPSBnZXRNYXNrVGVtcGxhdGUoITAsIGdldExhc3RWYWxpZFBvc2l0aW9uKCksICEwKSksIFxuICAgICAgICAgICAgICAgIGdldE1hc2tTZXQoKS5idWZmZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiByZWZyZXNoRnJvbUJ1ZmZlcihzdGFydCwgZW5kLCBidWZmZXIpIHtcbiAgICAgICAgICAgICAgICB2YXIgaSwgcDtcbiAgICAgICAgICAgICAgICBpZiAoITAgPT09IHN0YXJ0KSByZXNldE1hc2tTZXQoKSwgc3RhcnQgPSAwLCBlbmQgPSBidWZmZXIubGVuZ3RoOyBlbHNlIGZvciAoaSA9IHN0YXJ0OyBpIDwgZW5kOyBpKyspIGRlbGV0ZSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbaV07XG4gICAgICAgICAgICAgICAgZm9yIChwID0gc3RhcnQsIGkgPSBzdGFydDsgaSA8IGVuZDsgaSsrKSBpZiAocmVzZXRNYXNrU2V0KCEwKSwgYnVmZmVyW2ldICE9PSBvcHRzLnNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZhbFJlc3VsdCA9IGlzVmFsaWQocCwgYnVmZmVyW2ldLCAhMCwgITApO1xuICAgICAgICAgICAgICAgICAgICAhMSAhPT0gdmFsUmVzdWx0ICYmIChyZXNldE1hc2tTZXQoITApLCBwID0gdmFsUmVzdWx0LmNhcmV0ICE9PSB1bmRlZmluZWQgPyB2YWxSZXN1bHQuY2FyZXQgOiB2YWxSZXN1bHQucG9zICsgMSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gY2FzaW5nKGVsZW0sIHRlc3QsIHBvcykge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAob3B0cy5jYXNpbmcgfHwgdGVzdC5jYXNpbmcpIHtcbiAgICAgICAgICAgICAgICAgIGNhc2UgXCJ1cHBlclwiOlxuICAgICAgICAgICAgICAgICAgICBlbGVtID0gZWxlbS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgY2FzZSBcImxvd2VyXCI6XG4gICAgICAgICAgICAgICAgICAgIGVsZW0gPSBlbGVtLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBjYXNlIFwidGl0bGVcIjpcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBvc0JlZm9yZSA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3MgLSAxXTtcbiAgICAgICAgICAgICAgICAgICAgZWxlbSA9IDAgPT09IHBvcyB8fCBwb3NCZWZvcmUgJiYgcG9zQmVmb3JlLmlucHV0ID09PSBTdHJpbmcuZnJvbUNoYXJDb2RlKElucHV0bWFzay5rZXlDb2RlLlNQQUNFKSA/IGVsZW0udG9VcHBlckNhc2UoKSA6IGVsZW0udG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGlmICgkLmlzRnVuY3Rpb24ob3B0cy5jYXNpbmcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBhcmdzLnB1c2goZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zKSwgZWxlbSA9IG9wdHMuY2FzaW5nLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBlbGVtO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gY2hlY2tBbHRlcm5hdGlvbk1hdGNoKGFsdEFycjEsIGFsdEFycjIsIG5hKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgbmFOZHgsIGFsdEFyckMgPSBvcHRzLmdyZWVkeSA/IGFsdEFycjIgOiBhbHRBcnIyLnNsaWNlKDAsIDEpLCBpc01hdGNoID0gITEsIG5hQXJyID0gbmEgIT09IHVuZGVmaW5lZCA/IG5hLnNwbGl0KFwiLFwiKSA6IFtdLCBpID0gMDsgaSA8IG5hQXJyLmxlbmd0aDsgaSsrKSAtMSAhPT0gKG5hTmR4ID0gYWx0QXJyMS5pbmRleE9mKG5hQXJyW2ldKSkgJiYgYWx0QXJyMS5zcGxpY2UobmFOZHgsIDEpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGFsbmR4ID0gMDsgYWxuZHggPCBhbHRBcnIxLmxlbmd0aDsgYWxuZHgrKykgaWYgKC0xICE9PSAkLmluQXJyYXkoYWx0QXJyMVthbG5keF0sIGFsdEFyckMpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlzTWF0Y2ggPSAhMDtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBpc01hdGNoO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gaXNWYWxpZChwb3MsIGMsIHN0cmljdCwgZnJvbVNldFZhbGlkLCBmcm9tQWx0ZXJuYXRlLCB2YWxpZGF0ZU9ubHkpIHtcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBpc1NlbGVjdGlvbihwb3NPYmopIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlbGVjdGlvbiA9IGlzUlRMID8gcG9zT2JqLmJlZ2luIC0gcG9zT2JqLmVuZCA+IDEgfHwgcG9zT2JqLmJlZ2luIC0gcG9zT2JqLmVuZCA9PSAxIDogcG9zT2JqLmVuZCAtIHBvc09iai5iZWdpbiA+IDEgfHwgcG9zT2JqLmVuZCAtIHBvc09iai5iZWdpbiA9PSAxO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VsZWN0aW9uICYmIDAgPT09IHBvc09iai5iZWdpbiAmJiBwb3NPYmouZW5kID09PSBnZXRNYXNrU2V0KCkubWFza0xlbmd0aCA/IFwiZnVsbFwiIDogc2VsZWN0aW9uO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBfaXNWYWxpZChwb3NpdGlvbiwgYywgc3RyaWN0KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByc2x0ID0gITE7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAkLmVhY2goZ2V0VGVzdHMocG9zaXRpb24pLCBmdW5jdGlvbihuZHgsIHRzdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRlc3QgPSB0c3QubWF0Y2g7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZ2V0QnVmZmVyKCEwKSwgITEgIT09IChyc2x0ID0gbnVsbCAhPSB0ZXN0LmZuID8gdGVzdC5mbi50ZXN0KGMsIGdldE1hc2tTZXQoKSwgcG9zaXRpb24sIHN0cmljdCwgb3B0cywgaXNTZWxlY3Rpb24ocG9zKSkgOiAoYyA9PT0gdGVzdC5kZWYgfHwgYyA9PT0gb3B0cy5za2lwT3B0aW9uYWxQYXJ0Q2hhcmFjdGVyKSAmJiBcIlwiICE9PSB0ZXN0LmRlZiAmJiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYzogZ2V0UGxhY2Vob2xkZXIocG9zaXRpb24sIHRlc3QsICEwKSB8fCB0ZXN0LmRlZixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3M6IHBvc2l0aW9uXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlbGVtID0gcnNsdC5jICE9PSB1bmRlZmluZWQgPyByc2x0LmMgOiBjO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW0gPSBlbGVtID09PSBvcHRzLnNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXIgJiYgbnVsbCA9PT0gdGVzdC5mbiA/IGdldFBsYWNlaG9sZGVyKHBvc2l0aW9uLCB0ZXN0LCAhMCkgfHwgdGVzdC5kZWYgOiBlbGVtO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2YWxpZGF0ZWRQb3MgPSBwb3NpdGlvbiwgcG9zc2libGVNb2RpZmllZEJ1ZmZlciA9IGdldEJ1ZmZlcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyc2x0LnJlbW92ZSAhPT0gdW5kZWZpbmVkICYmICgkLmlzQXJyYXkocnNsdC5yZW1vdmUpIHx8IChyc2x0LnJlbW92ZSA9IFsgcnNsdC5yZW1vdmUgXSksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQuZWFjaChyc2x0LnJlbW92ZS5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGIgLSBhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLCBmdW5jdGlvbihuZHgsIGxtbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyaXBWYWxpZFBvc2l0aW9ucyhsbW50LCBsbW50ICsgMSwgITApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKSwgcnNsdC5pbnNlcnQgIT09IHVuZGVmaW5lZCAmJiAoJC5pc0FycmF5KHJzbHQuaW5zZXJ0KSB8fCAocnNsdC5pbnNlcnQgPSBbIHJzbHQuaW5zZXJ0IF0pLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkLmVhY2gocnNsdC5pbnNlcnQuc29ydChmdW5jdGlvbihhLCBiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhIC0gYjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwgZnVuY3Rpb24obmR4LCBsbW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzVmFsaWQobG1udC5wb3MsIGxtbnQuYywgITAsIGZyb21TZXRWYWxpZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpLCByc2x0LnJlZnJlc2hGcm9tQnVmZmVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZWZyZXNoID0gcnNsdC5yZWZyZXNoRnJvbUJ1ZmZlcjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlZnJlc2hGcm9tQnVmZmVyKCEwID09PSByZWZyZXNoID8gcmVmcmVzaCA6IHJlZnJlc2guc3RhcnQsIHJlZnJlc2guZW5kLCBwb3NzaWJsZU1vZGlmaWVkQnVmZmVyKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJzbHQucG9zID09PSB1bmRlZmluZWQgJiYgcnNsdC5jID09PSB1bmRlZmluZWQpIHJldHVybiByc2x0LnBvcyA9IGdldExhc3RWYWxpZFBvc2l0aW9uKCksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCh2YWxpZGF0ZWRQb3MgPSByc2x0LnBvcyAhPT0gdW5kZWZpbmVkID8gcnNsdC5wb3MgOiBwb3NpdGlvbikgIT09IHBvc2l0aW9uKSByZXR1cm4gcnNsdCA9ICQuZXh0ZW5kKHJzbHQsIGlzVmFsaWQodmFsaWRhdGVkUG9zLCBlbGVtLCAhMCwgZnJvbVNldFZhbGlkKSksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCEwICE9PSByc2x0ICYmIHJzbHQucG9zICE9PSB1bmRlZmluZWQgJiYgcnNsdC5wb3MgIT09IHBvc2l0aW9uICYmICh2YWxpZGF0ZWRQb3MgPSByc2x0LnBvcywgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaEZyb21CdWZmZXIocG9zaXRpb24sIHZhbGlkYXRlZFBvcywgZ2V0QnVmZmVyKCkuc2xpY2UoKSksIHZhbGlkYXRlZFBvcyAhPT0gcG9zaXRpb24pKSByZXR1cm4gcnNsdCA9ICQuZXh0ZW5kKHJzbHQsIGlzVmFsaWQodmFsaWRhdGVkUG9zLCBlbGVtLCAhMCkpLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKCEwID09PSByc2x0IHx8IHJzbHQucG9zICE9PSB1bmRlZmluZWQgfHwgcnNsdC5jICE9PSB1bmRlZmluZWQpICYmIChuZHggPiAwICYmIHJlc2V0TWFza1NldCghMCksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFZhbGlkUG9zaXRpb24odmFsaWRhdGVkUG9zLCAkLmV4dGVuZCh7fSwgdHN0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0OiBjYXNpbmcoZWxlbSwgdGVzdCwgdmFsaWRhdGVkUG9zKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLCBmcm9tU2V0VmFsaWQsIGlzU2VsZWN0aW9uKHBvcykpIHx8IChyc2x0ID0gITEpLCAhMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pLCByc2x0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBzZXRWYWxpZFBvc2l0aW9uKHBvcywgdmFsaWRUZXN0LCBmcm9tU2V0VmFsaWQsIGlzU2VsZWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc1NlbGVjdGlvbiB8fCBvcHRzLmluc2VydE1vZGUgJiYgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvc10gIT09IHVuZGVmaW5lZCAmJiBmcm9tU2V0VmFsaWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGksIHBvc2l0aW9uc0Nsb25lID0gJC5leHRlbmQoITAsIHt9LCBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnMpLCBsdnAgPSBnZXRMYXN0VmFsaWRQb3NpdGlvbih1bmRlZmluZWQsICEwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IHBvczsgaSA8PSBsdnA7IGkrKykgZGVsZXRlIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3NdID0gJC5leHRlbmQoITAsIHt9LCB2YWxpZFRlc3QpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGosIHZhbGlkID0gITAsIHZwcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9ucywgbmVlZHNWYWxpZGF0aW9uID0gITEsIGluaXRpYWxMZW5ndGggPSBnZXRNYXNrU2V0KCkubWFza0xlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IGogPSBwb3M7IGkgPD0gbHZwOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdCA9IHBvc2l0aW9uc0Nsb25lW2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0ICE9PSB1bmRlZmluZWQpIGZvciAodmFyIHBvc01hdGNoID0gajsgcG9zTWF0Y2ggPCBnZXRNYXNrU2V0KCkubWFza0xlbmd0aCAmJiAobnVsbCA9PT0gdC5tYXRjaC5mbiAmJiB2cHNbaV0gJiYgKCEwID09PSB2cHNbaV0ubWF0Y2gub3B0aW9uYWxRdWFudGlmaWVyIHx8ICEwID09PSB2cHNbaV0ubWF0Y2gub3B0aW9uYWxpdHkpIHx8IG51bGwgIT0gdC5tYXRjaC5mbik7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocG9zTWF0Y2grKywgITEgPT09IG5lZWRzVmFsaWRhdGlvbiAmJiBwb3NpdGlvbnNDbG9uZVtwb3NNYXRjaF0gJiYgcG9zaXRpb25zQ2xvbmVbcG9zTWF0Y2hdLm1hdGNoLmRlZiA9PT0gdC5tYXRjaC5kZWYpIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3NNYXRjaF0gPSAkLmV4dGVuZCghMCwge30sIHBvc2l0aW9uc0Nsb25lW3Bvc01hdGNoXSksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbcG9zTWF0Y2hdLmlucHV0ID0gdC5pbnB1dCwgZmlsbE1pc3NpbmdOb25NYXNrKHBvc01hdGNoKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGogPSBwb3NNYXRjaCwgdmFsaWQgPSAhMDsgZWxzZSBpZiAocG9zaXRpb25DYW5NYXRjaERlZmluaXRpb24ocG9zTWF0Y2gsIHQubWF0Y2guZGVmKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IGlzVmFsaWQocG9zTWF0Y2gsIHQuaW5wdXQsICEwLCAhMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWxpZCA9ICExICE9PSByZXN1bHQsIGogPSByZXN1bHQuY2FyZXQgfHwgcmVzdWx0Lmluc2VydCA/IGdldExhc3RWYWxpZFBvc2l0aW9uKCkgOiBwb3NNYXRjaCwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZWVkc1ZhbGlkYXRpb24gPSAhMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICghKHZhbGlkID0gITAgPT09IHQuZ2VuZXJhdGVkSW5wdXQpICYmIHBvc01hdGNoID49IGdldE1hc2tTZXQoKS5tYXNrTGVuZ3RoIC0gMSkgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChnZXRNYXNrU2V0KCkubWFza0xlbmd0aCA8IGluaXRpYWxMZW5ndGggJiYgKGdldE1hc2tTZXQoKS5tYXNrTGVuZ3RoID0gaW5pdGlhbExlbmd0aCksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWxpZCkgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghdmFsaWQpIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF2YWxpZCkgcmV0dXJuIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9ucyA9ICQuZXh0ZW5kKCEwLCB7fSwgcG9zaXRpb25zQ2xvbmUpLCBcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc2V0TWFza1NldCghMCksICExO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvc10gPSAkLmV4dGVuZCghMCwge30sIHZhbGlkVGVzdCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNldE1hc2tTZXQoITApLCAhMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gZmlsbE1pc3NpbmdOb25NYXNrKG1hc2tQb3MpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgcG5keCA9IG1hc2tQb3MgLSAxOyBwbmR4ID4gLTEgJiYgIWdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twbmR4XTsgcG5keC0tKSA7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0ZXN0VGVtcGxhdGUsIHRlc3RzRnJvbVBvcztcbiAgICAgICAgICAgICAgICAgICAgZm9yIChwbmR4Kys7IHBuZHggPCBtYXNrUG9zOyBwbmR4KyspIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twbmR4XSA9PT0gdW5kZWZpbmVkICYmICghMSA9PT0gb3B0cy5qaXRNYXNraW5nIHx8IG9wdHMuaml0TWFza2luZyA+IHBuZHgpICYmIChcIlwiID09PSAodGVzdHNGcm9tUG9zID0gZ2V0VGVzdHMocG5keCwgZ2V0VGVzdFRlbXBsYXRlKHBuZHggLSAxKS5sb2NhdG9yLCBwbmR4IC0gMSkuc2xpY2UoKSlbdGVzdHNGcm9tUG9zLmxlbmd0aCAtIDFdLm1hdGNoLmRlZiAmJiB0ZXN0c0Zyb21Qb3MucG9wKCksIFxuICAgICAgICAgICAgICAgICAgICAodGVzdFRlbXBsYXRlID0gZGV0ZXJtaW5lVGVzdFRlbXBsYXRlKHBuZHgsIHRlc3RzRnJvbVBvcykpICYmICh0ZXN0VGVtcGxhdGUubWF0Y2guZGVmID09PSBvcHRzLnJhZGl4UG9pbnREZWZpbml0aW9uU3ltYm9sIHx8ICFpc01hc2socG5keCwgITApIHx8ICQuaW5BcnJheShvcHRzLnJhZGl4UG9pbnQsIGdldEJ1ZmZlcigpKSA8IHBuZHggJiYgdGVzdFRlbXBsYXRlLm1hdGNoLmZuICYmIHRlc3RUZW1wbGF0ZS5tYXRjaC5mbi50ZXN0KGdldFBsYWNlaG9sZGVyKHBuZHgpLCBnZXRNYXNrU2V0KCksIHBuZHgsICExLCBvcHRzKSkgJiYgITEgIT09IChyZXN1bHQgPSBfaXNWYWxpZChwbmR4LCBnZXRQbGFjZWhvbGRlcihwbmR4LCB0ZXN0VGVtcGxhdGUubWF0Y2gsICEwKSB8fCAobnVsbCA9PSB0ZXN0VGVtcGxhdGUubWF0Y2guZm4gPyB0ZXN0VGVtcGxhdGUubWF0Y2guZGVmIDogXCJcIiAhPT0gZ2V0UGxhY2Vob2xkZXIocG5keCkgPyBnZXRQbGFjZWhvbGRlcihwbmR4KSA6IGdldEJ1ZmZlcigpW3BuZHhdKSwgITApKSAmJiAoZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Jlc3VsdC5wb3MgfHwgcG5keF0uZ2VuZXJhdGVkSW5wdXQgPSAhMCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzdHJpY3QgPSAhMCA9PT0gc3RyaWN0O1xuICAgICAgICAgICAgICAgIHZhciBtYXNrUG9zID0gcG9zO1xuICAgICAgICAgICAgICAgIHBvcy5iZWdpbiAhPT0gdW5kZWZpbmVkICYmIChtYXNrUG9zID0gaXNSVEwgJiYgIWlzU2VsZWN0aW9uKHBvcykgPyBwb3MuZW5kIDogcG9zLmJlZ2luKTtcbiAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gITAsIHBvc2l0aW9uc0Nsb25lID0gJC5leHRlbmQoITAsIHt9LCBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnMpO1xuICAgICAgICAgICAgICAgIGlmICgkLmlzRnVuY3Rpb24ob3B0cy5wcmVWYWxpZGF0aW9uKSAmJiAhc3RyaWN0ICYmICEwICE9PSBmcm9tU2V0VmFsaWQgJiYgITAgIT09IHZhbGlkYXRlT25seSAmJiAocmVzdWx0ID0gb3B0cy5wcmVWYWxpZGF0aW9uKGdldEJ1ZmZlcigpLCBtYXNrUG9zLCBjLCBpc1NlbGVjdGlvbihwb3MpLCBvcHRzKSksIFxuICAgICAgICAgICAgICAgICEwID09PSByZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpbGxNaXNzaW5nTm9uTWFzayhtYXNrUG9zKSwgaXNTZWxlY3Rpb24ocG9zKSAmJiAoaGFuZGxlUmVtb3ZlKHVuZGVmaW5lZCwgSW5wdXRtYXNrLmtleUNvZGUuREVMRVRFLCBwb3MsICEwLCAhMCksIFxuICAgICAgICAgICAgICAgICAgICBtYXNrUG9zID0gZ2V0TWFza1NldCgpLnApLCBtYXNrUG9zIDwgZ2V0TWFza1NldCgpLm1hc2tMZW5ndGggJiYgKG1heExlbmd0aCA9PT0gdW5kZWZpbmVkIHx8IG1hc2tQb3MgPCBtYXhMZW5ndGgpICYmIChyZXN1bHQgPSBfaXNWYWxpZChtYXNrUG9zLCBjLCBzdHJpY3QpLCBcbiAgICAgICAgICAgICAgICAgICAgKCFzdHJpY3QgfHwgITAgPT09IGZyb21TZXRWYWxpZCkgJiYgITEgPT09IHJlc3VsdCAmJiAhMCAhPT0gdmFsaWRhdGVPbmx5KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGN1cnJlbnRQb3NWYWxpZCA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1ttYXNrUG9zXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghY3VycmVudFBvc1ZhbGlkIHx8IG51bGwgIT09IGN1cnJlbnRQb3NWYWxpZC5tYXRjaC5mbiB8fCBjdXJyZW50UG9zVmFsaWQubWF0Y2guZGVmICE9PSBjICYmIGMgIT09IG9wdHMuc2tpcE9wdGlvbmFsUGFydENoYXJhY3Rlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgob3B0cy5pbnNlcnRNb2RlIHx8IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tzZWVrTmV4dChtYXNrUG9zKV0gPT09IHVuZGVmaW5lZCkgJiYgIWlzTWFzayhtYXNrUG9zLCAhMCkpIGZvciAodmFyIG5Qb3MgPSBtYXNrUG9zICsgMSwgc25Qb3MgPSBzZWVrTmV4dChtYXNrUG9zKTsgblBvcyA8PSBzblBvczsgblBvcysrKSBpZiAoITEgIT09IChyZXN1bHQgPSBfaXNWYWxpZChuUG9zLCBjLCBzdHJpY3QpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhZnVuY3Rpb24ob3JpZ2luYWxQb3MsIG5ld1Bvcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZwID0gZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW25ld1Bvc107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodnApIGZvciAodmFyIHRhcmdldExvY2F0b3IgPSB2cC5sb2NhdG9yLCB0bGwgPSB0YXJnZXRMb2NhdG9yLmxlbmd0aCwgcHMgPSBvcmlnaW5hbFBvczsgcHMgPCBuZXdQb3M7IHBzKyspIGlmIChnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbcHNdID09PSB1bmRlZmluZWQgJiYgIWlzTWFzayhwcywgITApKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRlc3RzID0gZ2V0VGVzdHMocHMpLnNsaWNlKCksIGJlc3RNYXRjaCA9IGRldGVybWluZVRlc3RUZW1wbGF0ZShwcywgdGVzdHMsICEwKSwgZXF1YWxpdHkgPSAtMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlwiID09PSB0ZXN0c1t0ZXN0cy5sZW5ndGggLSAxXS5tYXRjaC5kZWYgJiYgdGVzdHMucG9wKCksICQuZWFjaCh0ZXN0cywgZnVuY3Rpb24obmR4LCB0c3QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0bGw7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRzdC5sb2NhdG9yW2ldID09PSB1bmRlZmluZWQgfHwgIWNoZWNrQWx0ZXJuYXRpb25NYXRjaCh0c3QubG9jYXRvcltpXS50b1N0cmluZygpLnNwbGl0KFwiLFwiKSwgdGFyZ2V0TG9jYXRvcltpXS50b1N0cmluZygpLnNwbGl0KFwiLFwiKSwgdHN0Lm5hKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0YXJnZXRBSSA9IHRhcmdldExvY2F0b3JbaV0sIGJlc3RNYXRjaEFJID0gYmVzdE1hdGNoLmxvY2F0b3JbaV0sIHRzdEFJID0gdHN0LmxvY2F0b3JbaV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QUkgLSBiZXN0TWF0Y2hBSSA+IE1hdGguYWJzKHRhcmdldEFJIC0gdHN0QUkpICYmIChiZXN0TWF0Y2ggPSB0c3QpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXF1YWxpdHkgPCBpICYmIChlcXVhbGl0eSA9IGksIGJlc3RNYXRjaCA9IHRzdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwgKGJlc3RNYXRjaCA9ICQuZXh0ZW5kKHt9LCBiZXN0TWF0Y2gsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGdldFBsYWNlaG9sZGVyKHBzLCBiZXN0TWF0Y2gubWF0Y2gsICEwKSB8fCBiZXN0TWF0Y2gubWF0Y2guZGVmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpLmdlbmVyYXRlZElucHV0ID0gITAsIHNldFZhbGlkUG9zaXRpb24ocHMsIGJlc3RNYXRjaCwgITApLCBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbbmV3UG9zXSA9IHVuZGVmaW5lZCwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2lzVmFsaWQobmV3UG9zLCB2cC5pbnB1dCwgITApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KG1hc2tQb3MsIHJlc3VsdC5wb3MgIT09IHVuZGVmaW5lZCA/IHJlc3VsdC5wb3MgOiBuUG9zKSwgbWFza1BvcyA9IG5Qb3M7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSByZXN1bHQgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FyZXQ6IHNlZWtOZXh0KG1hc2tQb3MpXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICExID09PSByZXN1bHQgJiYgb3B0cy5rZWVwU3RhdGljICYmICFzdHJpY3QgJiYgITAgIT09IGZyb21BbHRlcm5hdGUgJiYgKHJlc3VsdCA9IGZ1bmN0aW9uKHBvcywgYywgc3RyaWN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbGFzdEFsdCwgYWx0ZXJuYXRpb24sIGFsdFBvcywgcHJldkFsdFBvcywgaSwgdmFsaWRQb3MsIGFsdE5keHMsIGRlY2lzaW9uUG9zLCB2YWxpZFBzQ2xvbmUgPSAkLmV4dGVuZCghMCwge30sIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9ucyksIGlzVmFsaWRSc2x0ID0gITEsIGxBbHRQb3MgPSBnZXRMYXN0VmFsaWRQb3NpdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChwcmV2QWx0UG9zID0gZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2xBbHRQb3NdOyBsQWx0UG9zID49IDA7IGxBbHRQb3MtLSkgaWYgKChhbHRQb3MgPSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbbEFsdFBvc10pICYmIGFsdFBvcy5hbHRlcm5hdGlvbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxhc3RBbHQgPSBsQWx0UG9zLCBhbHRlcm5hdGlvbiA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tsYXN0QWx0XS5hbHRlcm5hdGlvbiwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldkFsdFBvcy5sb2NhdG9yW2FsdFBvcy5hbHRlcm5hdGlvbl0gIT09IGFsdFBvcy5sb2NhdG9yW2FsdFBvcy5hbHRlcm5hdGlvbl0pIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZBbHRQb3MgPSBhbHRQb3M7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWx0ZXJuYXRpb24gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlY2lzaW9uUG9zID0gcGFyc2VJbnQobGFzdEFsdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRlY2lzaW9uVGFrZXIgPSBwcmV2QWx0UG9zLmxvY2F0b3JbcHJldkFsdFBvcy5hbHRlcm5hdGlvbiB8fCBhbHRlcm5hdGlvbl0gIT09IHVuZGVmaW5lZCA/IHByZXZBbHRQb3MubG9jYXRvcltwcmV2QWx0UG9zLmFsdGVybmF0aW9uIHx8IGFsdGVybmF0aW9uXSA6IGFsdE5keHNbMF07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVjaXNpb25UYWtlci5sZW5ndGggPiAwICYmIChkZWNpc2lvblRha2VyID0gZGVjaXNpb25UYWtlci5zcGxpdChcIixcIilbMF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwb3NzaWJpbGl0eVBvcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tkZWNpc2lvblBvc10sIHByZXZQb3MgPSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbZGVjaXNpb25Qb3MgLSAxXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkLmVhY2goZ2V0VGVzdHMoZGVjaXNpb25Qb3MsIHByZXZQb3MgPyBwcmV2UG9zLmxvY2F0b3IgOiB1bmRlZmluZWQsIGRlY2lzaW9uUG9zIC0gMSksIGZ1bmN0aW9uKG5keCwgdGVzdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHROZHhzID0gdGVzdC5sb2NhdG9yW2FsdGVybmF0aW9uXSA/IHRlc3QubG9jYXRvclthbHRlcm5hdGlvbl0udG9TdHJpbmcoKS5zcGxpdChcIixcIikgOiBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgbW5keCA9IDA7IG1uZHggPCBhbHROZHhzLmxlbmd0aDsgbW5keCsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmFsaWRJbnB1dHMgPSBbXSwgc3RhdGljSW5wdXRzQmVmb3JlUG9zID0gMCwgc3RhdGljSW5wdXRzQmVmb3JlUG9zQWx0ZXJuYXRlID0gMCwgdmVyaWZ5VmFsaWRJbnB1dCA9ICExO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRlY2lzaW9uVGFrZXIgPCBhbHROZHhzW21uZHhdICYmICh0ZXN0Lm5hID09PSB1bmRlZmluZWQgfHwgLTEgPT09ICQuaW5BcnJheShhbHROZHhzW21uZHhdLCB0ZXN0Lm5hLnNwbGl0KFwiLFwiKSkgfHwgLTEgPT09ICQuaW5BcnJheShkZWNpc2lvblRha2VyLnRvU3RyaW5nKCksIGFsdE5keHMpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tkZWNpc2lvblBvc10gPSAkLmV4dGVuZCghMCwge30sIHRlc3QpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwb3NzaWJpbGl0aWVzID0gZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2RlY2lzaW9uUG9zXS5sb2NhdG9yO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2RlY2lzaW9uUG9zXS5sb2NhdG9yW2FsdGVybmF0aW9uXSA9IHBhcnNlSW50KGFsdE5keHNbbW5keF0pLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBudWxsID09IHRlc3QubWF0Y2guZm4gPyAocG9zc2liaWxpdHlQb3MuaW5wdXQgIT09IHRlc3QubWF0Y2guZGVmICYmICh2ZXJpZnlWYWxpZElucHV0ID0gITAsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICEwICE9PSBwb3NzaWJpbGl0eVBvcy5nZW5lcmF0ZWRJbnB1dCAmJiB2YWxpZElucHV0cy5wdXNoKHBvc3NpYmlsaXR5UG9zLmlucHV0KSksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0lucHV0c0JlZm9yZVBvc0FsdGVybmF0ZSsrLCBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbZGVjaXNpb25Qb3NdLmdlbmVyYXRlZElucHV0ID0gIS9bMC05YS1iQS1aXS8udGVzdCh0ZXN0Lm1hdGNoLmRlZiksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tkZWNpc2lvblBvc10uaW5wdXQgPSB0ZXN0Lm1hdGNoLmRlZikgOiBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbZGVjaXNpb25Qb3NdLmlucHV0ID0gcG9zc2liaWxpdHlQb3MuaW5wdXQsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGkgPSBkZWNpc2lvblBvcyArIDE7IGkgPCBnZXRMYXN0VmFsaWRQb3NpdGlvbih1bmRlZmluZWQsICEwKSArIDE7IGkrKykgKHZhbGlkUG9zID0gZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2ldKSAmJiAhMCAhPT0gdmFsaWRQb3MuZ2VuZXJhdGVkSW5wdXQgJiYgL1swLTlhLWJBLVpdLy50ZXN0KHZhbGlkUG9zLmlucHV0KSA/IHZhbGlkSW5wdXRzLnB1c2godmFsaWRQb3MuaW5wdXQpIDogaSA8IHBvcyAmJiBzdGF0aWNJbnB1dHNCZWZvcmVQb3MrKywgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZlcmlmeVZhbGlkSW5wdXQgJiYgdmFsaWRJbnB1dHNbMF0gPT09IHRlc3QubWF0Y2guZGVmICYmIHZhbGlkSW5wdXRzLnNoaWZ0KCksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc2V0TWFza1NldCghMCksIGlzVmFsaWRSc2x0ID0gITA7IHZhbGlkSW5wdXRzLmxlbmd0aCA+IDA7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW5wdXQgPSB2YWxpZElucHV0cy5zaGlmdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXQgIT09IG9wdHMuc2tpcE9wdGlvbmFsUGFydENoYXJhY3RlciAmJiAhKGlzVmFsaWRSc2x0ID0gaXNWYWxpZChnZXRMYXN0VmFsaWRQb3NpdGlvbih1bmRlZmluZWQsICEwKSArIDEsIGlucHV0LCAhMSwgZnJvbVNldFZhbGlkLCAhMCkpKSBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzVmFsaWRSc2x0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tkZWNpc2lvblBvc10ubG9jYXRvciA9IHBvc3NpYmlsaXRpZXM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0YXJnZXRMdnAgPSBnZXRMYXN0VmFsaWRQb3NpdGlvbihwb3MpICsgMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gZGVjaXNpb25Qb3MgKyAxOyBpIDwgZ2V0TGFzdFZhbGlkUG9zaXRpb24oKSArIDE7IGkrKykgKCh2YWxpZFBvcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tpXSkgPT09IHVuZGVmaW5lZCB8fCBudWxsID09IHZhbGlkUG9zLm1hdGNoLmZuKSAmJiBpIDwgcG9zICsgKHN0YXRpY0lucHV0c0JlZm9yZVBvc0FsdGVybmF0ZSAtIHN0YXRpY0lucHV0c0JlZm9yZVBvcykgJiYgc3RhdGljSW5wdXRzQmVmb3JlUG9zQWx0ZXJuYXRlKys7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzVmFsaWRSc2x0ID0gaXNWYWxpZCgocG9zICs9IHN0YXRpY0lucHV0c0JlZm9yZVBvc0FsdGVybmF0ZSAtIHN0YXRpY0lucHV0c0JlZm9yZVBvcykgPiB0YXJnZXRMdnAgPyB0YXJnZXRMdnAgOiBwb3MsIGMsIHN0cmljdCwgZnJvbVNldFZhbGlkLCAhMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1ZhbGlkUnNsdCkgcmV0dXJuICExO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc2V0TWFza1NldCgpLCBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnMgPSAkLmV4dGVuZCghMCwge30sIHZhbGlkUHNDbG9uZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpc1ZhbGlkUnNsdDtcbiAgICAgICAgICAgICAgICAgICAgfShtYXNrUG9zLCBjLCBzdHJpY3QpKSwgITAgPT09IHJlc3VsdCAmJiAocmVzdWx0ID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcG9zOiBtYXNrUG9zXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoJC5pc0Z1bmN0aW9uKG9wdHMucG9zdFZhbGlkYXRpb24pICYmICExICE9PSByZXN1bHQgJiYgIXN0cmljdCAmJiAhMCAhPT0gZnJvbVNldFZhbGlkICYmICEwICE9PSB2YWxpZGF0ZU9ubHkpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBvc3RSZXN1bHQgPSBvcHRzLnBvc3RWYWxpZGF0aW9uKGdldEJ1ZmZlcighMCksIHJlc3VsdCwgb3B0cyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwb3N0UmVzdWx0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwb3N0UmVzdWx0LnJlZnJlc2hGcm9tQnVmZmVyICYmIHBvc3RSZXN1bHQuYnVmZmVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJlZnJlc2ggPSBwb3N0UmVzdWx0LnJlZnJlc2hGcm9tQnVmZmVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZnJlc2hGcm9tQnVmZmVyKCEwID09PSByZWZyZXNoID8gcmVmcmVzaCA6IHJlZnJlc2guc3RhcnQsIHJlZnJlc2guZW5kLCBwb3N0UmVzdWx0LmJ1ZmZlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSAhMCA9PT0gcG9zdFJlc3VsdCA/IHJlc3VsdCA6IHBvc3RSZXN1bHQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCAmJiByZXN1bHQucG9zID09PSB1bmRlZmluZWQgJiYgKHJlc3VsdC5wb3MgPSBtYXNrUG9zKSwgITEgIT09IHJlc3VsdCAmJiAhMCAhPT0gdmFsaWRhdGVPbmx5IHx8IChyZXNldE1hc2tTZXQoITApLCBcbiAgICAgICAgICAgICAgICBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnMgPSAkLmV4dGVuZCghMCwge30sIHBvc2l0aW9uc0Nsb25lKSksIHJlc3VsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIGlzTWFzayhwb3MsIHN0cmljdCkge1xuICAgICAgICAgICAgICAgIHZhciB0ZXN0ID0gZ2V0VGVzdFRlbXBsYXRlKHBvcykubWF0Y2g7XG4gICAgICAgICAgICAgICAgaWYgKFwiXCIgPT09IHRlc3QuZGVmICYmICh0ZXN0ID0gZ2V0VGVzdChwb3MpLm1hdGNoKSwgbnVsbCAhPSB0ZXN0LmZuKSByZXR1cm4gdGVzdC5mbjtcbiAgICAgICAgICAgICAgICBpZiAoITAgIT09IHN0cmljdCAmJiBwb3MgPiAtMSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdGVzdHMgPSBnZXRUZXN0cyhwb3MpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGVzdHMubGVuZ3RoID4gMSArIChcIlwiID09PSB0ZXN0c1t0ZXN0cy5sZW5ndGggLSAxXS5tYXRjaC5kZWYgPyAxIDogMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiAhMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIHNlZWtOZXh0KHBvcywgbmV3QmxvY2spIHtcbiAgICAgICAgICAgICAgICB2YXIgbWFza0wgPSBnZXRNYXNrU2V0KCkubWFza0xlbmd0aDtcbiAgICAgICAgICAgICAgICBpZiAocG9zID49IG1hc2tMKSByZXR1cm4gbWFza0w7XG4gICAgICAgICAgICAgICAgdmFyIHBvc2l0aW9uID0gcG9zO1xuICAgICAgICAgICAgICAgIGZvciAoZ2V0VGVzdHMobWFza0wgKyAxKS5sZW5ndGggPiAxICYmIChtYXNrTCA9IGdldE1hc2tUZW1wbGF0ZSghMCwgbWFza0wgKyAxLCAhMSkua2VuZ3RoKTsgKytwb3NpdGlvbiA8IG1hc2tMICYmICghMCA9PT0gbmV3QmxvY2sgJiYgKCEwICE9PSBnZXRUZXN0KHBvc2l0aW9uKS5tYXRjaC5uZXdCbG9ja01hcmtlciB8fCAhaXNNYXNrKHBvc2l0aW9uKSkgfHwgITAgIT09IG5ld0Jsb2NrICYmICFpc01hc2socG9zaXRpb24pKTsgKSA7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBvc2l0aW9uO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gc2Vla1ByZXZpb3VzKHBvcywgbmV3QmxvY2spIHtcbiAgICAgICAgICAgICAgICB2YXIgdGVzdHMsIHBvc2l0aW9uID0gcG9zO1xuICAgICAgICAgICAgICAgIGlmIChwb3NpdGlvbiA8PSAwKSByZXR1cm4gMDtcbiAgICAgICAgICAgICAgICBmb3IgKDstLXBvc2l0aW9uID4gMCAmJiAoITAgPT09IG5ld0Jsb2NrICYmICEwICE9PSBnZXRUZXN0KHBvc2l0aW9uKS5tYXRjaC5uZXdCbG9ja01hcmtlciB8fCAhMCAhPT0gbmV3QmxvY2sgJiYgIWlzTWFzayhwb3NpdGlvbikgJiYgKCh0ZXN0cyA9IGdldFRlc3RzKHBvc2l0aW9uKSkubGVuZ3RoIDwgMiB8fCAyID09PSB0ZXN0cy5sZW5ndGggJiYgXCJcIiA9PT0gdGVzdHNbMV0ubWF0Y2guZGVmKSk7ICkgO1xuICAgICAgICAgICAgICAgIHJldHVybiBwb3NpdGlvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIHdyaXRlQnVmZmVyKGlucHV0LCBidWZmZXIsIGNhcmV0UG9zLCBldmVudCwgdHJpZ2dlcklucHV0RXZlbnQpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnQgJiYgJC5pc0Z1bmN0aW9uKG9wdHMub25CZWZvcmVXcml0ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IG9wdHMub25CZWZvcmVXcml0ZS5jYWxsKGlucHV0bWFzaywgZXZlbnQsIGJ1ZmZlciwgY2FyZXRQb3MsIG9wdHMpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnJlZnJlc2hGcm9tQnVmZmVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJlZnJlc2ggPSByZXN1bHQucmVmcmVzaEZyb21CdWZmZXI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaEZyb21CdWZmZXIoITAgPT09IHJlZnJlc2ggPyByZWZyZXNoIDogcmVmcmVzaC5zdGFydCwgcmVmcmVzaC5lbmQsIHJlc3VsdC5idWZmZXIgfHwgYnVmZmVyKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnVmZmVyID0gZ2V0QnVmZmVyKCEwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0UG9zICE9PSB1bmRlZmluZWQgJiYgKGNhcmV0UG9zID0gcmVzdWx0LmNhcmV0ICE9PSB1bmRlZmluZWQgPyByZXN1bHQuY2FyZXQgOiBjYXJldFBvcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaW5wdXQgIT09IHVuZGVmaW5lZCAmJiAoaW5wdXQuaW5wdXRtYXNrLl92YWx1ZVNldChidWZmZXIuam9pbihcIlwiKSksIGNhcmV0UG9zID09PSB1bmRlZmluZWQgfHwgZXZlbnQgIT09IHVuZGVmaW5lZCAmJiBcImJsdXJcIiA9PT0gZXZlbnQudHlwZSA/IHJlbmRlckNvbG9yTWFzayhpbnB1dCwgY2FyZXRQb3MsIDAgPT09IGJ1ZmZlci5sZW5ndGgpIDogY2FyZXQoaW5wdXQsIGNhcmV0UG9zKSwgXG4gICAgICAgICAgICAgICAgITAgPT09IHRyaWdnZXJJbnB1dEV2ZW50ICYmIChza2lwSW5wdXRFdmVudCA9ICEwLCAkKGlucHV0KS50cmlnZ2VyKFwiaW5wdXRcIikpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIGdldFBsYWNlaG9sZGVyKHBvcywgdGVzdCwgcmV0dXJuUEwpIHtcbiAgICAgICAgICAgICAgICBpZiAoKHRlc3QgPSB0ZXN0IHx8IGdldFRlc3QocG9zKS5tYXRjaCkucGxhY2Vob2xkZXIgIT09IHVuZGVmaW5lZCB8fCAhMCA9PT0gcmV0dXJuUEwpIHJldHVybiAkLmlzRnVuY3Rpb24odGVzdC5wbGFjZWhvbGRlcikgPyB0ZXN0LnBsYWNlaG9sZGVyKG9wdHMpIDogdGVzdC5wbGFjZWhvbGRlcjtcbiAgICAgICAgICAgICAgICBpZiAobnVsbCA9PT0gdGVzdC5mbikge1xuICAgICAgICAgICAgICAgICAgICBpZiAocG9zID4gLTEgJiYgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvc10gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHByZXZUZXN0LCB0ZXN0cyA9IGdldFRlc3RzKHBvcyksIHN0YXRpY0FsdGVybmF0aW9ucyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRlc3RzLmxlbmd0aCA+IDEgKyAoXCJcIiA9PT0gdGVzdHNbdGVzdHMubGVuZ3RoIC0gMV0ubWF0Y2guZGVmID8gMSA6IDApKSBmb3IgKHZhciBpID0gMDsgaSA8IHRlc3RzLmxlbmd0aDsgaSsrKSBpZiAoITAgIT09IHRlc3RzW2ldLm1hdGNoLm9wdGlvbmFsaXR5ICYmICEwICE9PSB0ZXN0c1tpXS5tYXRjaC5vcHRpb25hbFF1YW50aWZpZXIgJiYgKG51bGwgPT09IHRlc3RzW2ldLm1hdGNoLmZuIHx8IHByZXZUZXN0ID09PSB1bmRlZmluZWQgfHwgITEgIT09IHRlc3RzW2ldLm1hdGNoLmZuLnRlc3QocHJldlRlc3QubWF0Y2guZGVmLCBnZXRNYXNrU2V0KCksIHBvcywgITAsIG9wdHMpKSAmJiAoc3RhdGljQWx0ZXJuYXRpb25zLnB1c2godGVzdHNbaV0pLCBcbiAgICAgICAgICAgICAgICAgICAgICAgIG51bGwgPT09IHRlc3RzW2ldLm1hdGNoLmZuICYmIChwcmV2VGVzdCA9IHRlc3RzW2ldKSwgc3RhdGljQWx0ZXJuYXRpb25zLmxlbmd0aCA+IDEgJiYgL1swLTlhLWJBLVpdLy50ZXN0KHN0YXRpY0FsdGVybmF0aW9uc1swXS5tYXRjaC5kZWYpKSkgcmV0dXJuIG9wdHMucGxhY2Vob2xkZXIuY2hhckF0KHBvcyAlIG9wdHMucGxhY2Vob2xkZXIubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGVzdC5kZWY7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBvcHRzLnBsYWNlaG9sZGVyLmNoYXJBdChwb3MgJSBvcHRzLnBsYWNlaG9sZGVyLmxlbmd0aCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBjaGVja1ZhbChpbnB1dCwgd3JpdGVPdXQsIHN0cmljdCwgbnB0dmwsIGluaXRpYXRpbmdFdmVudCkge1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGlzVGVtcGxhdGVNYXRjaChuZHgsIGNoYXJDb2Rlcykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gLTEgIT09IGdldE1hc2tUZW1wbGF0ZSghMCwgMCwgITEpLnNsaWNlKG5keCwgc2Vla05leHQobmR4KSkuam9pbihcIlwiKS5pbmRleE9mKGNoYXJDb2RlcykgJiYgIWlzTWFzayhuZHgpICYmIChnZXRUZXN0KG5keCkubWF0Y2gubmF0aXZlRGVmID09PSBjaGFyQ29kZXMuY2hhckF0KDApIHx8IFwiIFwiID09PSBnZXRUZXN0KG5keCkubWF0Y2gubmF0aXZlRGVmICYmIGdldFRlc3QobmR4ICsgMSkubWF0Y2gubmF0aXZlRGVmID09PSBjaGFyQ29kZXMuY2hhckF0KDApKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIGlucHV0VmFsdWUgPSBucHR2bC5zbGljZSgpLCBjaGFyQ29kZXMgPSBcIlwiLCBpbml0aWFsTmR4ID0gLTEsIHJlc3VsdCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICBpZiAocmVzZXRNYXNrU2V0KCksIHN0cmljdCB8fCAhMCA9PT0gb3B0cy5hdXRvVW5tYXNrKSBpbml0aWFsTmR4ID0gc2Vla05leHQoaW5pdGlhbE5keCk7IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc3RhdGljSW5wdXQgPSBnZXRCdWZmZXJUZW1wbGF0ZSgpLnNsaWNlKDAsIHNlZWtOZXh0KC0xKSkuam9pbihcIlwiKSwgbWF0Y2hlcyA9IGlucHV0VmFsdWUuam9pbihcIlwiKS5tYXRjaChuZXcgUmVnRXhwKFwiXlwiICsgSW5wdXRtYXNrLmVzY2FwZVJlZ2V4KHN0YXRpY0lucHV0KSwgXCJnXCIpKTtcbiAgICAgICAgICAgICAgICAgICAgbWF0Y2hlcyAmJiBtYXRjaGVzLmxlbmd0aCA+IDAgJiYgKGlucHV0VmFsdWUuc3BsaWNlKDAsIG1hdGNoZXMubGVuZ3RoICogc3RhdGljSW5wdXQubGVuZ3RoKSwgXG4gICAgICAgICAgICAgICAgICAgIGluaXRpYWxOZHggPSBzZWVrTmV4dChpbml0aWFsTmR4KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC0xID09PSBpbml0aWFsTmR4ID8gKGdldE1hc2tTZXQoKS5wID0gc2Vla05leHQoaW5pdGlhbE5keCksIGluaXRpYWxOZHggPSAwKSA6IGdldE1hc2tTZXQoKS5wID0gaW5pdGlhbE5keCwgXG4gICAgICAgICAgICAgICAgJC5lYWNoKGlucHV0VmFsdWUsIGZ1bmN0aW9uKG5keCwgY2hhckNvZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoYXJDb2RlICE9PSB1bmRlZmluZWQpIGlmIChnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbbmR4XSA9PT0gdW5kZWZpbmVkICYmIGlucHV0VmFsdWVbbmR4XSA9PT0gZ2V0UGxhY2Vob2xkZXIobmR4KSAmJiBpc01hc2sobmR4LCAhMCkgJiYgITEgPT09IGlzVmFsaWQobmR4LCBpbnB1dFZhbHVlW25keF0sICEwLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgITApKSBnZXRNYXNrU2V0KCkucCsrOyBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBrZXlwcmVzcyA9IG5ldyAkLkV2ZW50KFwiX2NoZWNrdmFsXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5cHJlc3Mud2hpY2ggPSBjaGFyQ29kZS5jaGFyQ29kZUF0KDApLCBjaGFyQ29kZXMgKz0gY2hhckNvZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbHZwID0gZ2V0TGFzdFZhbGlkUG9zaXRpb24odW5kZWZpbmVkLCAhMCksIHByZXZUZXN0ID0gZ2V0VGVzdChsdnApLCBuZXh0VGVzdCA9IGdldFRlc3RUZW1wbGF0ZShsdnAgKyAxLCBwcmV2VGVzdCA/IHByZXZUZXN0LmxvY2F0b3Iuc2xpY2UoKSA6IHVuZGVmaW5lZCwgbHZwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNUZW1wbGF0ZU1hdGNoKGluaXRpYWxOZHgsIGNoYXJDb2RlcykgfHwgc3RyaWN0IHx8IG9wdHMuYXV0b1VubWFzaykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwb3MgPSBzdHJpY3QgPyBuZHggOiBudWxsID09IG5leHRUZXN0Lm1hdGNoLmZuICYmIG5leHRUZXN0Lm1hdGNoLm9wdGlvbmFsaXR5ICYmIGx2cCArIDEgPCBnZXRNYXNrU2V0KCkucCA/IGx2cCArIDEgOiBnZXRNYXNrU2V0KCkucDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAocmVzdWx0ID0gRXZlbnRIYW5kbGVycy5rZXlwcmVzc0V2ZW50LmNhbGwoaW5wdXQsIGtleXByZXNzLCAhMCwgITEsIHN0cmljdCwgcG9zKSkgJiYgKGluaXRpYWxOZHggPSBwb3MgKyAxLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFyQ29kZXMgPSBcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSByZXN1bHQgPSBFdmVudEhhbmRsZXJzLmtleXByZXNzRXZlbnQuY2FsbChpbnB1dCwga2V5cHJlc3MsICEwLCAhMSwgITAsIGx2cCArIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGVCdWZmZXIodW5kZWZpbmVkLCBnZXRCdWZmZXIoKSwgcmVzdWx0LmZvcndhcmRQb3NpdGlvbiwga2V5cHJlc3MsICExKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLCB3cml0ZU91dCAmJiB3cml0ZUJ1ZmZlcihpbnB1dCwgZ2V0QnVmZmVyKCksIHJlc3VsdCA/IHJlc3VsdC5mb3J3YXJkUG9zaXRpb24gOiB1bmRlZmluZWQsIGluaXRpYXRpbmdFdmVudCB8fCBuZXcgJC5FdmVudChcImNoZWNrdmFsXCIpLCBpbml0aWF0aW5nRXZlbnQgJiYgXCJpbnB1dFwiID09PSBpbml0aWF0aW5nRXZlbnQudHlwZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiB1bm1hc2tlZHZhbHVlKGlucHV0KSB7XG4gICAgICAgICAgICAgICAgaWYgKGlucHV0KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dC5pbnB1dG1hc2sgPT09IHVuZGVmaW5lZCkgcmV0dXJuIGlucHV0LnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICBpbnB1dC5pbnB1dG1hc2sgJiYgaW5wdXQuaW5wdXRtYXNrLnJlZnJlc2hWYWx1ZSAmJiBFdmVudEhhbmRsZXJzLnNldFZhbHVlRXZlbnQuY2FsbChpbnB1dCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciB1bVZhbHVlID0gW10sIHZwcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9ucztcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBwbmR4IGluIHZwcykgdnBzW3BuZHhdLm1hdGNoICYmIG51bGwgIT0gdnBzW3BuZHhdLm1hdGNoLmZuICYmIHVtVmFsdWUucHVzaCh2cHNbcG5keF0uaW5wdXQpO1xuICAgICAgICAgICAgICAgIHZhciB1bm1hc2tlZFZhbHVlID0gMCA9PT0gdW1WYWx1ZS5sZW5ndGggPyBcIlwiIDogKGlzUlRMID8gdW1WYWx1ZS5yZXZlcnNlKCkgOiB1bVZhbHVlKS5qb2luKFwiXCIpO1xuICAgICAgICAgICAgICAgIGlmICgkLmlzRnVuY3Rpb24ob3B0cy5vblVuTWFzaykpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGJ1ZmZlclZhbHVlID0gKGlzUlRMID8gZ2V0QnVmZmVyKCkuc2xpY2UoKS5yZXZlcnNlKCkgOiBnZXRCdWZmZXIoKSkuam9pbihcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgdW5tYXNrZWRWYWx1ZSA9IG9wdHMub25Vbk1hc2suY2FsbChpbnB1dG1hc2ssIGJ1ZmZlclZhbHVlLCB1bm1hc2tlZFZhbHVlLCBvcHRzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVubWFza2VkVmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBjYXJldChpbnB1dCwgYmVnaW4sIGVuZCwgbm90cmFuc2xhdGUpIHtcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiB0cmFuc2xhdGVQb3NpdGlvbihwb3MpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICEwID09PSBub3RyYW5zbGF0ZSB8fCAhaXNSVEwgfHwgXCJudW1iZXJcIiAhPSB0eXBlb2YgcG9zIHx8IG9wdHMuZ3JlZWR5ICYmIFwiXCIgPT09IG9wdHMucGxhY2Vob2xkZXIgfHwgKHBvcyA9IGlucHV0LmlucHV0bWFzay5fX3ZhbHVlR2V0LmNhbGwoaW5wdXQpLmxlbmd0aCAtIHBvcyksIFxuICAgICAgICAgICAgICAgICAgICBwb3M7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciByYW5nZTtcbiAgICAgICAgICAgICAgICBpZiAoYmVnaW4gPT09IHVuZGVmaW5lZCkgcmV0dXJuIGlucHV0LnNldFNlbGVjdGlvblJhbmdlID8gKGJlZ2luID0gaW5wdXQuc2VsZWN0aW9uU3RhcnQsIFxuICAgICAgICAgICAgICAgIGVuZCA9IGlucHV0LnNlbGVjdGlvbkVuZCkgOiB3aW5kb3cuZ2V0U2VsZWN0aW9uID8gKHJhbmdlID0gd2luZG93LmdldFNlbGVjdGlvbigpLmdldFJhbmdlQXQoMCkpLmNvbW1vbkFuY2VzdG9yQ29udGFpbmVyLnBhcmVudE5vZGUgIT09IGlucHV0ICYmIHJhbmdlLmNvbW1vbkFuY2VzdG9yQ29udGFpbmVyICE9PSBpbnB1dCB8fCAoYmVnaW4gPSByYW5nZS5zdGFydE9mZnNldCwgXG4gICAgICAgICAgICAgICAgZW5kID0gcmFuZ2UuZW5kT2Zmc2V0KSA6IGRvY3VtZW50LnNlbGVjdGlvbiAmJiBkb2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UgJiYgKGVuZCA9IChiZWdpbiA9IDAgLSAocmFuZ2UgPSBkb2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UoKSkuZHVwbGljYXRlKCkubW92ZVN0YXJ0KFwiY2hhcmFjdGVyXCIsIC1pbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCkubGVuZ3RoKSkgKyByYW5nZS50ZXh0Lmxlbmd0aCksIFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYmVnaW46IHRyYW5zbGF0ZVBvc2l0aW9uKGJlZ2luKSxcbiAgICAgICAgICAgICAgICAgICAgZW5kOiB0cmFuc2xhdGVQb3NpdGlvbihlbmQpXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZiAoJC5pc0FycmF5KGJlZ2luKSAmJiAoZW5kID0gaXNSVEwgPyBiZWdpblswXSA6IGJlZ2luWzFdLCBiZWdpbiA9IGlzUlRMID8gYmVnaW5bMV0gOiBiZWdpblswXSksIFxuICAgICAgICAgICAgICAgIGJlZ2luLmJlZ2luICE9PSB1bmRlZmluZWQgJiYgKGVuZCA9IGlzUlRMID8gYmVnaW4uYmVnaW4gOiBiZWdpbi5lbmQsIGJlZ2luID0gaXNSVEwgPyBiZWdpbi5lbmQgOiBiZWdpbi5iZWdpbiksIFxuICAgICAgICAgICAgICAgIFwibnVtYmVyXCIgPT0gdHlwZW9mIGJlZ2luKSB7XG4gICAgICAgICAgICAgICAgICAgIGJlZ2luID0gdHJhbnNsYXRlUG9zaXRpb24oYmVnaW4pLCBlbmQgPSBcIm51bWJlclwiID09IHR5cGVvZiAoZW5kID0gdHJhbnNsYXRlUG9zaXRpb24oZW5kKSkgPyBlbmQgOiBiZWdpbjtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNjcm9sbENhbGMgPSBwYXJzZUludCgoKGlucHV0Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcgfHwgd2luZG93KS5nZXRDb21wdXRlZFN0eWxlID8gKGlucHV0Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcgfHwgd2luZG93KS5nZXRDb21wdXRlZFN0eWxlKGlucHV0LCBudWxsKSA6IGlucHV0LmN1cnJlbnRTdHlsZSkuZm9udFNpemUpICogZW5kO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXQuc2Nyb2xsTGVmdCA9IHNjcm9sbENhbGMgPiBpbnB1dC5zY3JvbGxXaWR0aCA/IHNjcm9sbENhbGMgOiAwLCAhMSA9PT0gb3B0cy5pbnNlcnRNb2RlICYmIGJlZ2luID09PSBlbmQgJiYgZW5kKyssIFxuICAgICAgICAgICAgICAgICAgICBpbnB1dC5pbnB1dG1hc2suY2FyZXRQb3MgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBiZWdpbjogYmVnaW4sXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmQ6IGVuZFxuICAgICAgICAgICAgICAgICAgICB9LCBpbnB1dC5zZXRTZWxlY3Rpb25SYW5nZSkgaW5wdXQuc2VsZWN0aW9uU3RhcnQgPSBiZWdpbiwgaW5wdXQuc2VsZWN0aW9uRW5kID0gZW5kOyBlbHNlIGlmICh3aW5kb3cuZ2V0U2VsZWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmFuZ2UgPSBkb2N1bWVudC5jcmVhdGVSYW5nZSgpLCBpbnB1dC5maXJzdENoaWxkID09PSB1bmRlZmluZWQgfHwgbnVsbCA9PT0gaW5wdXQuZmlyc3RDaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0ZXh0Tm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0LmFwcGVuZENoaWxkKHRleHROb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KGlucHV0LmZpcnN0Q2hpbGQsIGJlZ2luIDwgaW5wdXQuaW5wdXRtYXNrLl92YWx1ZUdldCgpLmxlbmd0aCA/IGJlZ2luIDogaW5wdXQuaW5wdXRtYXNrLl92YWx1ZUdldCgpLmxlbmd0aCksIFxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0RW5kKGlucHV0LmZpcnN0Q2hpbGQsIGVuZCA8IGlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoKS5sZW5ndGggPyBlbmQgOiBpbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCkubGVuZ3RoKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5jb2xsYXBzZSghMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc2VsID0gd2luZG93LmdldFNlbGVjdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsLnJlbW92ZUFsbFJhbmdlcygpLCBzZWwuYWRkUmFuZ2UocmFuZ2UpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaW5wdXQuY3JlYXRlVGV4dFJhbmdlICYmICgocmFuZ2UgPSBpbnB1dC5jcmVhdGVUZXh0UmFuZ2UoKSkuY29sbGFwc2UoITApLCBcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2UubW92ZUVuZChcImNoYXJhY3RlclwiLCBlbmQpLCByYW5nZS5tb3ZlU3RhcnQoXCJjaGFyYWN0ZXJcIiwgYmVnaW4pLCByYW5nZS5zZWxlY3QoKSk7XG4gICAgICAgICAgICAgICAgICAgIHJlbmRlckNvbG9yTWFzayhpbnB1dCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgYmVnaW46IGJlZ2luLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kOiBlbmRcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gZGV0ZXJtaW5lTGFzdFJlcXVpcmVkUG9zaXRpb24ocmV0dXJuRGVmaW5pdGlvbikge1xuICAgICAgICAgICAgICAgIHZhciBwb3MsIHRlc3RQb3MsIGJ1ZmZlciA9IGdldEJ1ZmZlcigpLCBibCA9IGJ1ZmZlci5sZW5ndGgsIGx2cCA9IGdldExhc3RWYWxpZFBvc2l0aW9uKCksIHBvc2l0aW9ucyA9IHt9LCBsdlRlc3QgPSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbbHZwXSwgbmR4SW50bHpyID0gbHZUZXN0ICE9PSB1bmRlZmluZWQgPyBsdlRlc3QubG9jYXRvci5zbGljZSgpIDogdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIGZvciAocG9zID0gbHZwICsgMTsgcG9zIDwgYnVmZmVyLmxlbmd0aDsgcG9zKyspIG5keEludGx6ciA9ICh0ZXN0UG9zID0gZ2V0VGVzdFRlbXBsYXRlKHBvcywgbmR4SW50bHpyLCBwb3MgLSAxKSkubG9jYXRvci5zbGljZSgpLCBcbiAgICAgICAgICAgICAgICBwb3NpdGlvbnNbcG9zXSA9ICQuZXh0ZW5kKCEwLCB7fSwgdGVzdFBvcyk7XG4gICAgICAgICAgICAgICAgdmFyIGx2VGVzdEFsdCA9IGx2VGVzdCAmJiBsdlRlc3QuYWx0ZXJuYXRpb24gIT09IHVuZGVmaW5lZCA/IGx2VGVzdC5sb2NhdG9yW2x2VGVzdC5hbHRlcm5hdGlvbl0gOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgZm9yIChwb3MgPSBibCAtIDE7IHBvcyA+IGx2cCAmJiAoKCh0ZXN0UG9zID0gcG9zaXRpb25zW3Bvc10pLm1hdGNoLm9wdGlvbmFsaXR5IHx8IHRlc3RQb3MubWF0Y2gub3B0aW9uYWxRdWFudGlmaWVyICYmIHRlc3RQb3MubWF0Y2gubmV3QmxvY2tNYXJrZXIgfHwgbHZUZXN0QWx0ICYmIChsdlRlc3RBbHQgIT09IHBvc2l0aW9uc1twb3NdLmxvY2F0b3JbbHZUZXN0LmFsdGVybmF0aW9uXSAmJiBudWxsICE9IHRlc3RQb3MubWF0Y2guZm4gfHwgbnVsbCA9PT0gdGVzdFBvcy5tYXRjaC5mbiAmJiB0ZXN0UG9zLmxvY2F0b3JbbHZUZXN0LmFsdGVybmF0aW9uXSAmJiBjaGVja0FsdGVybmF0aW9uTWF0Y2godGVzdFBvcy5sb2NhdG9yW2x2VGVzdC5hbHRlcm5hdGlvbl0udG9TdHJpbmcoKS5zcGxpdChcIixcIiksIGx2VGVzdEFsdC50b1N0cmluZygpLnNwbGl0KFwiLFwiKSkgJiYgXCJcIiAhPT0gZ2V0VGVzdHMocG9zKVswXS5kZWYpKSAmJiBidWZmZXJbcG9zXSA9PT0gZ2V0UGxhY2Vob2xkZXIocG9zLCB0ZXN0UG9zLm1hdGNoKSk7IHBvcy0tKSBibC0tO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXR1cm5EZWZpbml0aW9uID8ge1xuICAgICAgICAgICAgICAgICAgICBsOiBibCxcbiAgICAgICAgICAgICAgICAgICAgZGVmOiBwb3NpdGlvbnNbYmxdID8gcG9zaXRpb25zW2JsXS5tYXRjaCA6IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgIH0gOiBibDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIGNsZWFyT3B0aW9uYWxUYWlsKGJ1ZmZlcikge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIHZhbGlkUG9zLCBybCA9IGRldGVybWluZUxhc3RSZXF1aXJlZFBvc2l0aW9uKCksIGJsID0gYnVmZmVyLmxlbmd0aCwgbHYgPSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbZ2V0TGFzdFZhbGlkUG9zaXRpb24oKV07IHJsIDwgYmwgJiYgIWlzTWFzayhybCwgITApICYmICh2YWxpZFBvcyA9IGx2ICE9PSB1bmRlZmluZWQgPyBnZXRUZXN0VGVtcGxhdGUocmwsIGx2LmxvY2F0b3Iuc2xpY2UoXCJcIiksIGx2KSA6IGdldFRlc3QocmwpKSAmJiAhMCAhPT0gdmFsaWRQb3MubWF0Y2gub3B0aW9uYWxpdHkgJiYgKCEwICE9PSB2YWxpZFBvcy5tYXRjaC5vcHRpb25hbFF1YW50aWZpZXIgJiYgITAgIT09IHZhbGlkUG9zLm1hdGNoLm5ld0Jsb2NrTWFya2VyIHx8IHJsICsgMSA9PT0gYmwgJiYgXCJcIiA9PT0gKGx2ICE9PSB1bmRlZmluZWQgPyBnZXRUZXN0VGVtcGxhdGUocmwgKyAxLCBsdi5sb2NhdG9yLnNsaWNlKFwiXCIpLCBsdikgOiBnZXRUZXN0KHJsICsgMSkpLm1hdGNoLmRlZik7ICkgcmwrKztcbiAgICAgICAgICAgICAgICBmb3IgKDsodmFsaWRQb3MgPSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbcmwgLSAxXSkgJiYgdmFsaWRQb3MgJiYgdmFsaWRQb3MubWF0Y2gub3B0aW9uYWxpdHkgJiYgdmFsaWRQb3MuaW5wdXQgPT09IG9wdHMuc2tpcE9wdGlvbmFsUGFydENoYXJhY3RlcjsgKSBybC0tO1xuICAgICAgICAgICAgICAgIHJldHVybiBidWZmZXIuc3BsaWNlKHJsKSwgYnVmZmVyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gaXNDb21wbGV0ZShidWZmZXIpIHtcbiAgICAgICAgICAgICAgICBpZiAoJC5pc0Z1bmN0aW9uKG9wdHMuaXNDb21wbGV0ZSkpIHJldHVybiBvcHRzLmlzQ29tcGxldGUoYnVmZmVyLCBvcHRzKTtcbiAgICAgICAgICAgICAgICBpZiAoXCIqXCIgPT09IG9wdHMucmVwZWF0KSByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIHZhciBjb21wbGV0ZSA9ICExLCBscnAgPSBkZXRlcm1pbmVMYXN0UmVxdWlyZWRQb3NpdGlvbighMCksIGFtbCA9IHNlZWtQcmV2aW91cyhscnAubCk7XG4gICAgICAgICAgICAgICAgaWYgKGxycC5kZWYgPT09IHVuZGVmaW5lZCB8fCBscnAuZGVmLm5ld0Jsb2NrTWFya2VyIHx8IGxycC5kZWYub3B0aW9uYWxpdHkgfHwgbHJwLmRlZi5vcHRpb25hbFF1YW50aWZpZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgY29tcGxldGUgPSAhMDtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPD0gYW1sOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0ZXN0ID0gZ2V0VGVzdFRlbXBsYXRlKGkpLm1hdGNoO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG51bGwgIT09IHRlc3QuZm4gJiYgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2ldID09PSB1bmRlZmluZWQgJiYgITAgIT09IHRlc3Qub3B0aW9uYWxpdHkgJiYgITAgIT09IHRlc3Qub3B0aW9uYWxRdWFudGlmaWVyIHx8IG51bGwgPT09IHRlc3QuZm4gJiYgYnVmZmVyW2ldICE9PSBnZXRQbGFjZWhvbGRlcihpLCB0ZXN0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlID0gITE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbXBsZXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gaGFuZGxlUmVtb3ZlKGlucHV0LCBrLCBwb3MsIHN0cmljdCwgZnJvbUlzVmFsaWQpIHtcbiAgICAgICAgICAgICAgICBpZiAoKG9wdHMubnVtZXJpY0lucHV0IHx8IGlzUlRMKSAmJiAoayA9PT0gSW5wdXRtYXNrLmtleUNvZGUuQkFDS1NQQUNFID8gayA9IElucHV0bWFzay5rZXlDb2RlLkRFTEVURSA6IGsgPT09IElucHV0bWFzay5rZXlDb2RlLkRFTEVURSAmJiAoayA9IElucHV0bWFzay5rZXlDb2RlLkJBQ0tTUEFDRSksIFxuICAgICAgICAgICAgICAgIGlzUlRMKSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGVuZCA9IHBvcy5lbmQ7XG4gICAgICAgICAgICAgICAgICAgIHBvcy5lbmQgPSBwb3MuYmVnaW4sIHBvcy5iZWdpbiA9IHBlbmQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGsgPT09IElucHV0bWFzay5rZXlDb2RlLkJBQ0tTUEFDRSAmJiAocG9zLmVuZCAtIHBvcy5iZWdpbiA8IDEgfHwgITEgPT09IG9wdHMuaW5zZXJ0TW9kZSkgPyAocG9zLmJlZ2luID0gc2Vla1ByZXZpb3VzKHBvcy5iZWdpbiksIFxuICAgICAgICAgICAgICAgIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3MuYmVnaW5dICE9PSB1bmRlZmluZWQgJiYgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvcy5iZWdpbl0uaW5wdXQgPT09IG9wdHMuZ3JvdXBTZXBhcmF0b3IgJiYgcG9zLmJlZ2luLS0pIDogayA9PT0gSW5wdXRtYXNrLmtleUNvZGUuREVMRVRFICYmIHBvcy5iZWdpbiA9PT0gcG9zLmVuZCAmJiAocG9zLmVuZCA9IGlzTWFzayhwb3MuZW5kLCAhMCkgJiYgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvcy5lbmRdICYmIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3MuZW5kXS5pbnB1dCAhPT0gb3B0cy5yYWRpeFBvaW50ID8gcG9zLmVuZCArIDEgOiBzZWVrTmV4dChwb3MuZW5kKSArIDEsIFxuICAgICAgICAgICAgICAgIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3MuYmVnaW5dICE9PSB1bmRlZmluZWQgJiYgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvcy5iZWdpbl0uaW5wdXQgPT09IG9wdHMuZ3JvdXBTZXBhcmF0b3IgJiYgcG9zLmVuZCsrKSwgXG4gICAgICAgICAgICAgICAgc3RyaXBWYWxpZFBvc2l0aW9ucyhwb3MuYmVnaW4sIHBvcy5lbmQsICExLCBzdHJpY3QpLCAhMCAhPT0gc3RyaWN0ICYmIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAob3B0cy5rZWVwU3RhdGljKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciB2YWxpZElucHV0cyA9IFtdLCBsYXN0QWx0ID0gZ2V0TGFzdFZhbGlkUG9zaXRpb24oLTEsICEwKSwgcG9zaXRpb25zQ2xvbmUgPSAkLmV4dGVuZCghMCwge30sIGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9ucyksIHByZXZBbHRQb3MgPSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbbGFzdEFsdF07IGxhc3RBbHQgPj0gMDsgbGFzdEFsdC0tKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFsdFBvcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1tsYXN0QWx0XTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWx0UG9zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghMCAhPT0gYWx0UG9zLmdlbmVyYXRlZElucHV0ICYmIC9bMC05YS1iQS1aXS8udGVzdChhbHRQb3MuaW5wdXQpICYmIHZhbGlkSW5wdXRzLnB1c2goYWx0UG9zLmlucHV0KSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbbGFzdEFsdF0sIGFsdFBvcy5hbHRlcm5hdGlvbiAhPT0gdW5kZWZpbmVkICYmIGFsdFBvcy5sb2NhdG9yW2FsdFBvcy5hbHRlcm5hdGlvbl0gIT09IHByZXZBbHRQb3MubG9jYXRvclthbHRQb3MuYWx0ZXJuYXRpb25dKSBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldkFsdFBvcyA9IGFsdFBvcztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobGFzdEFsdCA+IC0xKSBmb3IgKGdldE1hc2tTZXQoKS5wID0gc2Vla05leHQoZ2V0TGFzdFZhbGlkUG9zaXRpb24oLTEsICEwKSk7IHZhbGlkSW5wdXRzLmxlbmd0aCA+IDA7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBrZXlwcmVzcyA9IG5ldyAkLkV2ZW50KFwia2V5cHJlc3NcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5cHJlc3Mud2hpY2ggPSB2YWxpZElucHV0cy5wb3AoKS5jaGFyQ29kZUF0KDApLCBFdmVudEhhbmRsZXJzLmtleXByZXNzRXZlbnQuY2FsbChpbnB1dCwga2V5cHJlc3MsICEwLCAhMSwgITEsIGdldE1hc2tTZXQoKS5wKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnMgPSAkLmV4dGVuZCghMCwge30sIHBvc2l0aW9uc0Nsb25lKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0oKTtcbiAgICAgICAgICAgICAgICB2YXIgbHZwID0gZ2V0TGFzdFZhbGlkUG9zaXRpb24ocG9zLmJlZ2luLCAhMCk7XG4gICAgICAgICAgICAgICAgaWYgKGx2cCA8IHBvcy5iZWdpbikgZ2V0TWFza1NldCgpLnAgPSBzZWVrTmV4dChsdnApOyBlbHNlIGlmICghMCAhPT0gc3RyaWN0ICYmIChnZXRNYXNrU2V0KCkucCA9IHBvcy5iZWdpbiwgXG4gICAgICAgICAgICAgICAgITAgIT09IGZyb21Jc1ZhbGlkKSkgZm9yICg7Z2V0TWFza1NldCgpLnAgPCBsdnAgJiYgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW2dldE1hc2tTZXQoKS5wXSA9PT0gdW5kZWZpbmVkOyApIGdldE1hc2tTZXQoKS5wKys7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBpbml0aWFsaXplQ29sb3JNYXNrKGlucHV0KSB7XG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gZmluZENhcmV0UG9zKGNsaWVudHgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNhcmV0UG9zLCBlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHN0eWxlIGluIGNvbXB1dGVkU3R5bGUpIGlzTmFOKHN0eWxlKSAmJiAtMSAhPT0gc3R5bGUuaW5kZXhPZihcImZvbnRcIikgJiYgKGUuc3R5bGVbc3R5bGVdID0gY29tcHV0ZWRTdHlsZVtzdHlsZV0pO1xuICAgICAgICAgICAgICAgICAgICBlLnN0eWxlLnRleHRUcmFuc2Zvcm0gPSBjb21wdXRlZFN0eWxlLnRleHRUcmFuc2Zvcm0sIGUuc3R5bGUubGV0dGVyU3BhY2luZyA9IGNvbXB1dGVkU3R5bGUubGV0dGVyU3BhY2luZywgXG4gICAgICAgICAgICAgICAgICAgIGUuc3R5bGUucG9zaXRpb24gPSBcImFic29sdXRlXCIsIGUuc3R5bGUuaGVpZ2h0ID0gXCJhdXRvXCIsIGUuc3R5bGUud2lkdGggPSBcImF1dG9cIiwgXG4gICAgICAgICAgICAgICAgICAgIGUuc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCIsIGUuc3R5bGUud2hpdGVTcGFjZSA9IFwibm93cmFwXCIsIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZSk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpdGwsIGlucHV0VGV4dCA9IGlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoKSwgcHJldmlvdXNXaWR0aCA9IDA7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY2FyZXRQb3MgPSAwLCBpdGwgPSBpbnB1dFRleHQubGVuZ3RoOyBjYXJldFBvcyA8PSBpdGw7IGNhcmV0UG9zKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLmlubmVySFRNTCArPSBpbnB1dFRleHQuY2hhckF0KGNhcmV0UG9zKSB8fCBcIl9cIiwgZS5vZmZzZXRXaWR0aCA+PSBjbGllbnR4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG9mZnNldDEgPSBjbGllbnR4IC0gcHJldmlvdXNXaWR0aCwgb2Zmc2V0MiA9IGUub2Zmc2V0V2lkdGggLSBjbGllbnR4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUuaW5uZXJIVE1MID0gaW5wdXRUZXh0LmNoYXJBdChjYXJldFBvcyksIGNhcmV0UG9zID0gKG9mZnNldDEgLT0gZS5vZmZzZXRXaWR0aCAvIDMpIDwgb2Zmc2V0MiA/IGNhcmV0UG9zIC0gMSA6IGNhcmV0UG9zO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNXaWR0aCA9IGUub2Zmc2V0V2lkdGg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZSksIGNhcmV0UG9zO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgY29tcHV0ZWRTdHlsZSA9IChpbnB1dC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3IHx8IHdpbmRvdykuZ2V0Q29tcHV0ZWRTdHlsZShpbnB1dCwgbnVsbCksIHRlbXBsYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZS5zdHlsZS53aWR0aCA9IGNvbXB1dGVkU3R5bGUud2lkdGgsIHRlbXBsYXRlLnN0eWxlLnRleHRBbGlnbiA9IGNvbXB1dGVkU3R5bGUudGV4dEFsaWduLCBcbiAgICAgICAgICAgICAgICBjb2xvck1hc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLCBpbnB1dC5pbnB1dG1hc2suY29sb3JNYXNrID0gY29sb3JNYXNrLCBcbiAgICAgICAgICAgICAgICBjb2xvck1hc2suY2xhc3NOYW1lID0gXCJpbS1jb2xvcm1hc2tcIiwgaW5wdXQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoY29sb3JNYXNrLCBpbnB1dCksIFxuICAgICAgICAgICAgICAgIGlucHV0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaW5wdXQpLCBjb2xvck1hc2suYXBwZW5kQ2hpbGQodGVtcGxhdGUpLCBjb2xvck1hc2suYXBwZW5kQ2hpbGQoaW5wdXQpLCBcbiAgICAgICAgICAgICAgICBpbnB1dC5zdHlsZS5sZWZ0ID0gdGVtcGxhdGUub2Zmc2V0TGVmdCArIFwicHhcIiwgJChpbnB1dCkub24oXCJjbGlja1wiLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjYXJldChpbnB1dCwgZmluZENhcmV0UG9zKGUuY2xpZW50WCkpLCBFdmVudEhhbmRsZXJzLmNsaWNrRXZlbnQuY2FsbChpbnB1dCwgWyBlIF0pO1xuICAgICAgICAgICAgICAgIH0pLCAkKGlucHV0KS5vbihcImtleWRvd25cIiwgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgICAgICBlLnNoaWZ0S2V5IHx8ICExID09PSBvcHRzLmluc2VydE1vZGUgfHwgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlbmRlckNvbG9yTWFzayhpbnB1dCk7XG4gICAgICAgICAgICAgICAgICAgIH0sIDApO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gcmVuZGVyQ29sb3JNYXNrKGlucHV0LCBjYXJldFBvcywgY2xlYXIpIHtcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBzZXRFbnRyeShlbnRyeSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZW50cnkgPT09IHVuZGVmaW5lZCAmJiAoZW50cnkgPSBcIlwiKSwgaXNTdGF0aWMgfHwgbnVsbCAhPT0gdGVzdC5mbiAmJiB0ZXN0UG9zLmlucHV0ICE9PSB1bmRlZmluZWQpIGlmIChpc1N0YXRpYyAmJiAobnVsbCAhPT0gdGVzdC5mbiAmJiB0ZXN0UG9zLmlucHV0ICE9PSB1bmRlZmluZWQgfHwgXCJcIiA9PT0gdGVzdC5kZWYpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpc1N0YXRpYyA9ICExO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG10bCA9IG1hc2tUZW1wbGF0ZS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXNrVGVtcGxhdGVbbXRsIC0gMV0gPSBtYXNrVGVtcGxhdGVbbXRsIC0gMV0gKyBcIjwvc3Bhbj5cIiwgbWFza1RlbXBsYXRlLnB1c2goZW50cnkpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgbWFza1RlbXBsYXRlLnB1c2goZW50cnkpOyBlbHNlIGlzU3RhdGljID0gITAsIG1hc2tUZW1wbGF0ZS5wdXNoKFwiPHNwYW4gY2xhc3M9J2ltLXN0YXRpYyc+XCIgKyBlbnRyeSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciB0ZXN0LCB0ZXN0UG9zLCBuZHhJbnRsenIsIG1hc2tUZW1wbGF0ZSA9IFtdLCBpc1N0YXRpYyA9ICExLCBwb3MgPSAwO1xuICAgICAgICAgICAgICAgIGlmIChjb2xvck1hc2sgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgYnVmZmVyID0gZ2V0QnVmZmVyKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjYXJldFBvcyA9PT0gdW5kZWZpbmVkID8gY2FyZXRQb3MgPSBjYXJldChpbnB1dCkgOiBjYXJldFBvcy5iZWdpbiA9PT0gdW5kZWZpbmVkICYmIChjYXJldFBvcyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJlZ2luOiBjYXJldFBvcyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZDogY2FyZXRQb3NcbiAgICAgICAgICAgICAgICAgICAgfSksICEwICE9PSBjbGVhcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGx2cCA9IGdldExhc3RWYWxpZFBvc2l0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBkbyB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0TWFza1NldCgpLnZhbGlkUG9zaXRpb25zW3Bvc10gPyAodGVzdFBvcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9uc1twb3NdLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXN0ID0gdGVzdFBvcy5tYXRjaCwgbmR4SW50bHpyID0gdGVzdFBvcy5sb2NhdG9yLnNsaWNlKCksIHNldEVudHJ5KGJ1ZmZlcltwb3NdKSkgOiAodGVzdFBvcyA9IGdldFRlc3RUZW1wbGF0ZShwb3MsIG5keEludGx6ciwgcG9zIC0gMSksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlc3QgPSB0ZXN0UG9zLm1hdGNoLCBuZHhJbnRsenIgPSB0ZXN0UG9zLmxvY2F0b3Iuc2xpY2UoKSwgKCExID09PSBvcHRzLmppdE1hc2tpbmcgfHwgcG9zIDwgbHZwIHx8IFwibnVtYmVyXCIgPT0gdHlwZW9mIG9wdHMuaml0TWFza2luZyAmJiBpc0Zpbml0ZShvcHRzLmppdE1hc2tpbmcpICYmIG9wdHMuaml0TWFza2luZyA+IHBvcykgJiYgc2V0RW50cnkoZ2V0UGxhY2Vob2xkZXIocG9zLCB0ZXN0KSkpLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3MrKztcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gd2hpbGUgKChtYXhMZW5ndGggPT09IHVuZGVmaW5lZCB8fCBwb3MgPCBtYXhMZW5ndGgpICYmIChudWxsICE9PSB0ZXN0LmZuIHx8IFwiXCIgIT09IHRlc3QuZGVmKSB8fCBsdnAgPiBwb3MgfHwgaXNTdGF0aWMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaXNTdGF0aWMgJiYgc2V0RW50cnkoKSwgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCA9PT0gaW5wdXQgJiYgKG1hc2tUZW1wbGF0ZS5zcGxpY2UoY2FyZXRQb3MuYmVnaW4sIDAsIGNhcmV0UG9zLmJlZ2luID09PSBjYXJldFBvcy5lbmQgPyAnPG1hcmsgY2xhc3M9XCJpbS1jYXJldFwiIHN0eWxlPVwiYm9yZGVyLXJpZ2h0LXdpZHRoOiAxcHg7Ym9yZGVyLXJpZ2h0LXN0eWxlOiBzb2xpZDtcIj4nIDogJzxtYXJrIGNsYXNzPVwiaW0tY2FyZXQtc2VsZWN0XCI+JyksIFxuICAgICAgICAgICAgICAgICAgICAgICAgbWFza1RlbXBsYXRlLnNwbGljZShjYXJldFBvcy5lbmQgKyAxLCAwLCBcIjwvbWFyaz5cIikpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhciB0ZW1wbGF0ZSA9IGNvbG9yTWFzay5nZXRFbGVtZW50c0J5VGFnTmFtZShcImRpdlwiKVswXTtcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGUuaW5uZXJIVE1MID0gbWFza1RlbXBsYXRlLmpvaW4oXCJcIiksIGlucHV0LmlucHV0bWFzay5wb3NpdGlvbkNvbG9yTWFzayhpbnB1dCwgdGVtcGxhdGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG1hc2tzZXQgPSBtYXNrc2V0IHx8IHRoaXMubWFza3NldCwgb3B0cyA9IG9wdHMgfHwgdGhpcy5vcHRzO1xuICAgICAgICAgICAgdmFyIHVuZG9WYWx1ZSwgJGVsLCBtYXhMZW5ndGgsIGNvbG9yTWFzaywgaW5wdXRtYXNrID0gdGhpcywgZWwgPSB0aGlzLmVsLCBpc1JUTCA9IHRoaXMuaXNSVEwsIHNraXBLZXlQcmVzc0V2ZW50ID0gITEsIHNraXBJbnB1dEV2ZW50ID0gITEsIGlnbm9yYWJsZSA9ICExLCBtb3VzZUVudGVyID0gITEsIHRyYWNrQ2FyZXQgPSAhMSwgRXZlbnRSdWxlciA9IHtcbiAgICAgICAgICAgICAgICBvbjogZnVuY3Rpb24oaW5wdXQsIGV2ZW50TmFtZSwgZXZlbnRIYW5kbGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBldiA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGF0LmlucHV0bWFzayA9PT0gdW5kZWZpbmVkICYmIFwiRk9STVwiICE9PSB0aGlzLm5vZGVOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGltT3B0cyA9ICQuZGF0YSh0aGF0LCBcIl9pbnB1dG1hc2tfb3B0c1wiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbU9wdHMgPyBuZXcgSW5wdXRtYXNrKGltT3B0cykubWFzayh0aGF0KSA6IEV2ZW50UnVsZXIub2ZmKHRoYXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXCJzZXR2YWx1ZVwiID09PSBlLnR5cGUgfHwgXCJGT1JNXCIgPT09IHRoaXMubm9kZU5hbWUgfHwgISh0aGF0LmRpc2FibGVkIHx8IHRoYXQucmVhZE9ubHkgJiYgIShcImtleWRvd25cIiA9PT0gZS50eXBlICYmIGUuY3RybEtleSAmJiA2NyA9PT0gZS5rZXlDb2RlIHx8ICExID09PSBvcHRzLnRhYlRocm91Z2ggJiYgZS5rZXlDb2RlID09PSBJbnB1dG1hc2sua2V5Q29kZS5UQUIpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKGUudHlwZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJpbnB1dFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEwID09PSBza2lwSW5wdXRFdmVudCkgcmV0dXJuIHNraXBJbnB1dEV2ZW50ID0gITEsIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vYmlsZSAmJiAodHJhY2tDYXJldCA9ICEwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImtleWRvd25cIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNraXBLZXlQcmVzc0V2ZW50ID0gITEsIHNraXBJbnB1dEV2ZW50ID0gITE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJrZXlwcmVzc1wiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEwID09PSBza2lwS2V5UHJlc3NFdmVudCkgcmV0dXJuIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNraXBLZXlQcmVzc0V2ZW50ID0gITA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJjbGlja1wiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGllbW9iaWxlIHx8IGlwaG9uZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudEhhbmRsZXIuYXBwbHkodGhhdCwgYXJncyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgMCksICExO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZXR1cm5WYWwgPSBldmVudEhhbmRsZXIuYXBwbHkodGhhdCwgYXJndW1lbnRzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRyYWNrQ2FyZXQgJiYgKHRyYWNrQ2FyZXQgPSAhMSwgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0KHRoYXQsIHRoYXQuaW5wdXRtYXNrLmNhcmV0UG9zLCB1bmRlZmluZWQsICEwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpLCAhMSA9PT0gcmV0dXJuVmFsICYmIChlLnByZXZlbnREZWZhdWx0KCksIGUuc3RvcFByb3BhZ2F0aW9uKCkpLCByZXR1cm5WYWw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgaW5wdXQuaW5wdXRtYXNrLmV2ZW50c1tldmVudE5hbWVdID0gaW5wdXQuaW5wdXRtYXNrLmV2ZW50c1tldmVudE5hbWVdIHx8IFtdLCBpbnB1dC5pbnB1dG1hc2suZXZlbnRzW2V2ZW50TmFtZV0ucHVzaChldiksIFxuICAgICAgICAgICAgICAgICAgICAtMSAhPT0gJC5pbkFycmF5KGV2ZW50TmFtZSwgWyBcInN1Ym1pdFwiLCBcInJlc2V0XCIgXSkgPyBudWxsICE9PSBpbnB1dC5mb3JtICYmICQoaW5wdXQuZm9ybSkub24oZXZlbnROYW1lLCBldikgOiAkKGlucHV0KS5vbihldmVudE5hbWUsIGV2KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9mZjogZnVuY3Rpb24oaW5wdXQsIGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dC5pbnB1dG1hc2sgJiYgaW5wdXQuaW5wdXRtYXNrLmV2ZW50cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGV2ZW50cztcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50ID8gKGV2ZW50cyA9IFtdKVtldmVudF0gPSBpbnB1dC5pbnB1dG1hc2suZXZlbnRzW2V2ZW50XSA6IGV2ZW50cyA9IGlucHV0LmlucHV0bWFzay5ldmVudHMsIFxuICAgICAgICAgICAgICAgICAgICAgICAgJC5lYWNoKGV2ZW50cywgZnVuY3Rpb24oZXZlbnROYW1lLCBldkFycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoO2V2QXJyLmxlbmd0aCA+IDA7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZXYgPSBldkFyci5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLTEgIT09ICQuaW5BcnJheShldmVudE5hbWUsIFsgXCJzdWJtaXRcIiwgXCJyZXNldFwiIF0pID8gbnVsbCAhPT0gaW5wdXQuZm9ybSAmJiAkKGlucHV0LmZvcm0pLm9mZihldmVudE5hbWUsIGV2KSA6ICQoaW5wdXQpLm9mZihldmVudE5hbWUsIGV2KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGlucHV0LmlucHV0bWFzay5ldmVudHNbZXZlbnROYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgRXZlbnRIYW5kbGVycyA9IHtcbiAgICAgICAgICAgICAgICBrZXlkb3duRXZlbnQ6IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gdGhpcywgJGlucHV0ID0gJChpbnB1dCksIGsgPSBlLmtleUNvZGUsIHBvcyA9IGNhcmV0KGlucHV0KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGsgPT09IElucHV0bWFzay5rZXlDb2RlLkJBQ0tTUEFDRSB8fCBrID09PSBJbnB1dG1hc2sua2V5Q29kZS5ERUxFVEUgfHwgaXBob25lICYmIGsgPT09IElucHV0bWFzay5rZXlDb2RlLkJBQ0tTUEFDRV9TQUZBUkkgfHwgZS5jdHJsS2V5ICYmIGsgPT09IElucHV0bWFzay5rZXlDb2RlLlggJiYgIWlzSW5wdXRFdmVudFN1cHBvcnRlZChcImN1dFwiKSkgZS5wcmV2ZW50RGVmYXVsdCgpLCBcbiAgICAgICAgICAgICAgICAgICAgaGFuZGxlUmVtb3ZlKGlucHV0LCBrLCBwb3MpLCB3cml0ZUJ1ZmZlcihpbnB1dCwgZ2V0QnVmZmVyKCEwKSwgZ2V0TWFza1NldCgpLnAsIGUsIGlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoKSAhPT0gZ2V0QnVmZmVyKCkuam9pbihcIlwiKSksIFxuICAgICAgICAgICAgICAgICAgICBpbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCkgPT09IGdldEJ1ZmZlclRlbXBsYXRlKCkuam9pbihcIlwiKSA/ICRpbnB1dC50cmlnZ2VyKFwiY2xlYXJlZFwiKSA6ICEwID09PSBpc0NvbXBsZXRlKGdldEJ1ZmZlcigpKSAmJiAkaW5wdXQudHJpZ2dlcihcImNvbXBsZXRlXCIpOyBlbHNlIGlmIChrID09PSBJbnB1dG1hc2sua2V5Q29kZS5FTkQgfHwgayA9PT0gSW5wdXRtYXNrLmtleUNvZGUuUEFHRV9ET1dOKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2FyZXRQb3MgPSBzZWVrTmV4dChnZXRMYXN0VmFsaWRQb3NpdGlvbigpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdHMuaW5zZXJ0TW9kZSB8fCBjYXJldFBvcyAhPT0gZ2V0TWFza1NldCgpLm1hc2tMZW5ndGggfHwgZS5zaGlmdEtleSB8fCBjYXJldFBvcy0tLCBcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0KGlucHV0LCBlLnNoaWZ0S2V5ID8gcG9zLmJlZ2luIDogY2FyZXRQb3MsIGNhcmV0UG9zLCAhMCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBrID09PSBJbnB1dG1hc2sua2V5Q29kZS5IT01FICYmICFlLnNoaWZ0S2V5IHx8IGsgPT09IElucHV0bWFzay5rZXlDb2RlLlBBR0VfVVAgPyAoZS5wcmV2ZW50RGVmYXVsdCgpLCBcbiAgICAgICAgICAgICAgICAgICAgY2FyZXQoaW5wdXQsIDAsIGUuc2hpZnRLZXkgPyBwb3MuYmVnaW4gOiAwLCAhMCkpIDogKG9wdHMudW5kb09uRXNjYXBlICYmIGsgPT09IElucHV0bWFzay5rZXlDb2RlLkVTQ0FQRSB8fCA5MCA9PT0gayAmJiBlLmN0cmxLZXkpICYmICEwICE9PSBlLmFsdEtleSA/IChjaGVja1ZhbChpbnB1dCwgITAsICExLCB1bmRvVmFsdWUuc3BsaXQoXCJcIikpLCBcbiAgICAgICAgICAgICAgICAgICAgJGlucHV0LnRyaWdnZXIoXCJjbGlja1wiKSkgOiBrICE9PSBJbnB1dG1hc2sua2V5Q29kZS5JTlNFUlQgfHwgZS5zaGlmdEtleSB8fCBlLmN0cmxLZXkgPyAhMCA9PT0gb3B0cy50YWJUaHJvdWdoICYmIGsgPT09IElucHV0bWFzay5rZXlDb2RlLlRBQiA/ICghMCA9PT0gZS5zaGlmdEtleSA/IChudWxsID09PSBnZXRUZXN0KHBvcy5iZWdpbikubWF0Y2guZm4gJiYgKHBvcy5iZWdpbiA9IHNlZWtOZXh0KHBvcy5iZWdpbikpLCBcbiAgICAgICAgICAgICAgICAgICAgcG9zLmVuZCA9IHNlZWtQcmV2aW91cyhwb3MuYmVnaW4sICEwKSwgcG9zLmJlZ2luID0gc2Vla1ByZXZpb3VzKHBvcy5lbmQsICEwKSkgOiAocG9zLmJlZ2luID0gc2Vla05leHQocG9zLmJlZ2luLCAhMCksIFxuICAgICAgICAgICAgICAgICAgICBwb3MuZW5kID0gc2Vla05leHQocG9zLmJlZ2luLCAhMCksIHBvcy5lbmQgPCBnZXRNYXNrU2V0KCkubWFza0xlbmd0aCAmJiBwb3MuZW5kLS0pLCBcbiAgICAgICAgICAgICAgICAgICAgcG9zLmJlZ2luIDwgZ2V0TWFza1NldCgpLm1hc2tMZW5ndGggJiYgKGUucHJldmVudERlZmF1bHQoKSwgY2FyZXQoaW5wdXQsIHBvcy5iZWdpbiwgcG9zLmVuZCkpKSA6IGUuc2hpZnRLZXkgfHwgITEgPT09IG9wdHMuaW5zZXJ0TW9kZSAmJiAoayA9PT0gSW5wdXRtYXNrLmtleUNvZGUuUklHSFQgPyBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNhcmV0UG9zID0gY2FyZXQoaW5wdXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FyZXQoaW5wdXQsIGNhcmV0UG9zLmJlZ2luKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgMCkgOiBrID09PSBJbnB1dG1hc2sua2V5Q29kZS5MRUZUICYmIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2FyZXRQb3MgPSBjYXJldChpbnB1dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXJldChpbnB1dCwgaXNSVEwgPyBjYXJldFBvcy5iZWdpbiArIDEgOiBjYXJldFBvcy5iZWdpbiAtIDEpO1xuICAgICAgICAgICAgICAgICAgICB9LCAwKSkgOiAob3B0cy5pbnNlcnRNb2RlID0gIW9wdHMuaW5zZXJ0TW9kZSwgY2FyZXQoaW5wdXQsIG9wdHMuaW5zZXJ0TW9kZSB8fCBwb3MuYmVnaW4gIT09IGdldE1hc2tTZXQoKS5tYXNrTGVuZ3RoID8gcG9zLmJlZ2luIDogcG9zLmJlZ2luIC0gMSkpO1xuICAgICAgICAgICAgICAgICAgICBvcHRzLm9uS2V5RG93bi5jYWxsKHRoaXMsIGUsIGdldEJ1ZmZlcigpLCBjYXJldChpbnB1dCkuYmVnaW4sIG9wdHMpLCBpZ25vcmFibGUgPSAtMSAhPT0gJC5pbkFycmF5KGssIG9wdHMuaWdub3JhYmxlcyk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBrZXlwcmVzc0V2ZW50OiBmdW5jdGlvbihlLCBjaGVja3ZhbCwgd3JpdGVPdXQsIHN0cmljdCwgbmR4KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpbnB1dCA9IHRoaXMsICRpbnB1dCA9ICQoaW5wdXQpLCBrID0gZS53aGljaCB8fCBlLmNoYXJDb2RlIHx8IGUua2V5Q29kZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEoITAgPT09IGNoZWNrdmFsIHx8IGUuY3RybEtleSAmJiBlLmFsdEtleSkgJiYgKGUuY3RybEtleSB8fCBlLm1ldGFLZXkgfHwgaWdub3JhYmxlKSkgcmV0dXJuIGsgPT09IElucHV0bWFzay5rZXlDb2RlLkVOVEVSICYmIHVuZG9WYWx1ZSAhPT0gZ2V0QnVmZmVyKCkuam9pbihcIlwiKSAmJiAodW5kb1ZhbHVlID0gZ2V0QnVmZmVyKCkuam9pbihcIlwiKSwgXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkaW5wdXQudHJpZ2dlcihcImNoYW5nZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgMCkpLCAhMDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIDQ2ID09PSBrICYmICExID09PSBlLnNoaWZ0S2V5ICYmIFwiXCIgIT09IG9wdHMucmFkaXhQb2ludCAmJiAoayA9IG9wdHMucmFkaXhQb2ludC5jaGFyQ29kZUF0KDApKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmb3J3YXJkUG9zaXRpb24sIHBvcyA9IGNoZWNrdmFsID8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlZ2luOiBuZHgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kOiBuZHhcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gOiBjYXJldChpbnB1dCksIGMgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGspO1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0TWFza1NldCgpLndyaXRlT3V0QnVmZmVyID0gITA7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmFsUmVzdWx0ID0gaXNWYWxpZChwb3MsIGMsIHN0cmljdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoITEgIT09IHZhbFJlc3VsdCAmJiAocmVzZXRNYXNrU2V0KCEwKSwgZm9yd2FyZFBvc2l0aW9uID0gdmFsUmVzdWx0LmNhcmV0ICE9PSB1bmRlZmluZWQgPyB2YWxSZXN1bHQuY2FyZXQgOiBzZWVrTmV4dCh2YWxSZXN1bHQucG9zLmJlZ2luID8gdmFsUmVzdWx0LnBvcy5iZWdpbiA6IHZhbFJlc3VsdC5wb3MpLCBcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldE1hc2tTZXQoKS5wID0gZm9yd2FyZFBvc2l0aW9uKSwgZm9yd2FyZFBvc2l0aW9uID0gb3B0cy5udW1lcmljSW5wdXQgJiYgdmFsUmVzdWx0LmNhcmV0ID09PSB1bmRlZmluZWQgPyBzZWVrUHJldmlvdXMoZm9yd2FyZFBvc2l0aW9uKSA6IGZvcndhcmRQb3NpdGlvbiwgXG4gICAgICAgICAgICAgICAgICAgICAgICAhMSAhPT0gd3JpdGVPdXQgJiYgKHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0cy5vbktleVZhbGlkYXRpb24uY2FsbChpbnB1dCwgaywgdmFsUmVzdWx0LCBvcHRzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIDApLCBnZXRNYXNrU2V0KCkud3JpdGVPdXRCdWZmZXIgJiYgITEgIT09IHZhbFJlc3VsdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYnVmZmVyID0gZ2V0QnVmZmVyKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGVCdWZmZXIoaW5wdXQsIGJ1ZmZlciwgZm9yd2FyZFBvc2l0aW9uLCBlLCAhMCAhPT0gY2hlY2t2YWwpLCAhMCAhPT0gY2hlY2t2YWwgJiYgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgITAgPT09IGlzQ29tcGxldGUoYnVmZmVyKSAmJiAkaW5wdXQudHJpZ2dlcihcImNvbXBsZXRlXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGUucHJldmVudERlZmF1bHQoKSwgY2hlY2t2YWwpIHJldHVybiAhMSAhPT0gdmFsUmVzdWx0ICYmICh2YWxSZXN1bHQuZm9yd2FyZFBvc2l0aW9uID0gZm9yd2FyZFBvc2l0aW9uKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxSZXN1bHQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHBhc3RlRXZlbnQ6IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRlbXBWYWx1ZSwgaW5wdXQgPSB0aGlzLCBldiA9IGUub3JpZ2luYWxFdmVudCB8fCBlLCAkaW5wdXQgPSAkKGlucHV0KSwgaW5wdXRWYWx1ZSA9IGlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoITApLCBjYXJldFBvcyA9IGNhcmV0KGlucHV0KTtcbiAgICAgICAgICAgICAgICAgICAgaXNSVEwgJiYgKHRlbXBWYWx1ZSA9IGNhcmV0UG9zLmVuZCwgY2FyZXRQb3MuZW5kID0gY2FyZXRQb3MuYmVnaW4sIGNhcmV0UG9zLmJlZ2luID0gdGVtcFZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlQmVmb3JlQ2FyZXQgPSBpbnB1dFZhbHVlLnN1YnN0cigwLCBjYXJldFBvcy5iZWdpbiksIHZhbHVlQWZ0ZXJDYXJldCA9IGlucHV0VmFsdWUuc3Vic3RyKGNhcmV0UG9zLmVuZCwgaW5wdXRWYWx1ZS5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWVCZWZvcmVDYXJldCA9PT0gKGlzUlRMID8gZ2V0QnVmZmVyVGVtcGxhdGUoKS5yZXZlcnNlKCkgOiBnZXRCdWZmZXJUZW1wbGF0ZSgpKS5zbGljZSgwLCBjYXJldFBvcy5iZWdpbikuam9pbihcIlwiKSAmJiAodmFsdWVCZWZvcmVDYXJldCA9IFwiXCIpLCBcbiAgICAgICAgICAgICAgICAgICAgdmFsdWVBZnRlckNhcmV0ID09PSAoaXNSVEwgPyBnZXRCdWZmZXJUZW1wbGF0ZSgpLnJldmVyc2UoKSA6IGdldEJ1ZmZlclRlbXBsYXRlKCkpLnNsaWNlKGNhcmV0UG9zLmVuZCkuam9pbihcIlwiKSAmJiAodmFsdWVBZnRlckNhcmV0ID0gXCJcIiksIFxuICAgICAgICAgICAgICAgICAgICBpc1JUTCAmJiAodGVtcFZhbHVlID0gdmFsdWVCZWZvcmVDYXJldCwgdmFsdWVCZWZvcmVDYXJldCA9IHZhbHVlQWZ0ZXJDYXJldCwgdmFsdWVBZnRlckNhcmV0ID0gdGVtcFZhbHVlKSwgXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5jbGlwYm9hcmREYXRhICYmIHdpbmRvdy5jbGlwYm9hcmREYXRhLmdldERhdGEpIGlucHV0VmFsdWUgPSB2YWx1ZUJlZm9yZUNhcmV0ICsgd2luZG93LmNsaXBib2FyZERhdGEuZ2V0RGF0YShcIlRleHRcIikgKyB2YWx1ZUFmdGVyQ2FyZXQ7IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFldi5jbGlwYm9hcmREYXRhIHx8ICFldi5jbGlwYm9hcmREYXRhLmdldERhdGEpIHJldHVybiAhMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0VmFsdWUgPSB2YWx1ZUJlZm9yZUNhcmV0ICsgZXYuY2xpcGJvYXJkRGF0YS5nZXREYXRhKFwidGV4dC9wbGFpblwiKSArIHZhbHVlQWZ0ZXJDYXJldDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB2YXIgcGFzdGVWYWx1ZSA9IGlucHV0VmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIGlmICgkLmlzRnVuY3Rpb24ob3B0cy5vbkJlZm9yZVBhc3RlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCExID09PSAocGFzdGVWYWx1ZSA9IG9wdHMub25CZWZvcmVQYXN0ZS5jYWxsKGlucHV0bWFzaywgaW5wdXRWYWx1ZSwgb3B0cykpKSByZXR1cm4gZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFzdGVWYWx1ZSB8fCAocGFzdGVWYWx1ZSA9IGlucHV0VmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjaGVja1ZhbChpbnB1dCwgITEsICExLCBpc1JUTCA/IHBhc3RlVmFsdWUuc3BsaXQoXCJcIikucmV2ZXJzZSgpIDogcGFzdGVWYWx1ZS50b1N0cmluZygpLnNwbGl0KFwiXCIpKSwgXG4gICAgICAgICAgICAgICAgICAgIHdyaXRlQnVmZmVyKGlucHV0LCBnZXRCdWZmZXIoKSwgc2Vla05leHQoZ2V0TGFzdFZhbGlkUG9zaXRpb24oKSksIGUsIHVuZG9WYWx1ZSAhPT0gZ2V0QnVmZmVyKCkuam9pbihcIlwiKSksIFxuICAgICAgICAgICAgICAgICAgICAhMCA9PT0gaXNDb21wbGV0ZShnZXRCdWZmZXIoKSkgJiYgJGlucHV0LnRyaWdnZXIoXCJjb21wbGV0ZVwiKSwgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgaW5wdXRGYWxsQmFja0V2ZW50OiBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpbnB1dCA9IHRoaXMsIGlucHV0VmFsdWUgPSBpbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChnZXRCdWZmZXIoKS5qb2luKFwiXCIpICE9PSBpbnB1dFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2FyZXRQb3MgPSBjYXJldChpbnB1dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXRWYWx1ZSA9IGZ1bmN0aW9uKGlucHV0LCBpbnB1dFZhbHVlLCBjYXJldFBvcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcIi5cIiA9PT0gaW5wdXRWYWx1ZS5jaGFyQXQoY2FyZXRQb3MuYmVnaW4gLSAxKSAmJiBcIlwiICE9PSBvcHRzLnJhZGl4UG9pbnQgJiYgKChpbnB1dFZhbHVlID0gaW5wdXRWYWx1ZS5zcGxpdChcIlwiKSlbY2FyZXRQb3MuYmVnaW4gLSAxXSA9IG9wdHMucmFkaXhQb2ludC5jaGFyQXQoMCksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0VmFsdWUgPSBpbnB1dFZhbHVlLmpvaW4oXCJcIikpLCBpbnB1dFZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSgwLCBpbnB1dFZhbHVlLCBjYXJldFBvcyksIGlucHV0VmFsdWUgPSBmdW5jdGlvbihpbnB1dCwgaW5wdXRWYWx1ZSwgY2FyZXRQb3MpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaWVtb2JpbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0Q2hhciA9IGlucHV0VmFsdWUucmVwbGFjZShnZXRCdWZmZXIoKS5qb2luKFwiXCIpLCBcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKDEgPT09IGlucHV0Q2hhci5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpdiA9IGlucHV0VmFsdWUuc3BsaXQoXCJcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdi5zcGxpY2UoY2FyZXRQb3MuYmVnaW4sIDAsIGlucHV0Q2hhciksIGlucHV0VmFsdWUgPSBpdi5qb2luKFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnB1dFZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSgwLCBpbnB1dFZhbHVlLCBjYXJldFBvcyksIGdldEJ1ZmZlcigpLmpvaW4oXCJcIikgIT09IGlucHV0VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYnVmZmVyID0gZ2V0QnVmZmVyKCkuam9pbihcIlwiKSwgb2Zmc2V0ID0gaW5wdXRWYWx1ZS5sZW5ndGggPiBidWZmZXIubGVuZ3RoID8gLTEgOiAwLCBmcm9udFBhcnQgPSBpbnB1dFZhbHVlLnN1YnN0cigwLCBjYXJldFBvcy5iZWdpbiksIGJhY2tQYXJ0ID0gaW5wdXRWYWx1ZS5zdWJzdHIoY2FyZXRQb3MuYmVnaW4pLCBmcm9udEJ1ZmZlclBhcnQgPSBidWZmZXIuc3Vic3RyKDAsIGNhcmV0UG9zLmJlZ2luICsgb2Zmc2V0KSwgYmFja0J1ZmZlclBhcnQgPSBidWZmZXIuc3Vic3RyKGNhcmV0UG9zLmJlZ2luICsgb2Zmc2V0KSwgc2VsZWN0aW9uID0gY2FyZXRQb3MsIGVudHJpZXMgPSBcIlwiLCBpc0VudHJ5ID0gITE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZyb250UGFydCAhPT0gZnJvbnRCdWZmZXJQYXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGZwbCA9IChpc0VudHJ5ID0gZnJvbnRQYXJ0Lmxlbmd0aCA+PSBmcm9udEJ1ZmZlclBhcnQubGVuZ3RoKSA/IGZyb250UGFydC5sZW5ndGggOiBmcm9udEJ1ZmZlclBhcnQubGVuZ3RoLCBpID0gMDsgZnJvbnRQYXJ0LmNoYXJBdChpKSA9PT0gZnJvbnRCdWZmZXJQYXJ0LmNoYXJBdChpKSAmJiBpIDwgZnBsOyBpKyspIDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNFbnRyeSAmJiAoMCA9PT0gb2Zmc2V0ICYmIChzZWxlY3Rpb24uYmVnaW4gPSBpKSwgZW50cmllcyArPSBmcm9udFBhcnQuc2xpY2UoaSwgc2VsZWN0aW9uLmVuZCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYmFja1BhcnQgIT09IGJhY2tCdWZmZXJQYXJ0ICYmIChiYWNrUGFydC5sZW5ndGggPiBiYWNrQnVmZmVyUGFydC5sZW5ndGggPyBlbnRyaWVzICs9IGJhY2tQYXJ0LnNsaWNlKDAsIDEpIDogYmFja1BhcnQubGVuZ3RoIDwgYmFja0J1ZmZlclBhcnQubGVuZ3RoICYmIChzZWxlY3Rpb24uZW5kICs9IGJhY2tCdWZmZXJQYXJ0Lmxlbmd0aCAtIGJhY2tQYXJ0Lmxlbmd0aCwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNFbnRyeSB8fCBcIlwiID09PSBvcHRzLnJhZGl4UG9pbnQgfHwgXCJcIiAhPT0gYmFja1BhcnQgfHwgZnJvbnRQYXJ0LmNoYXJBdChzZWxlY3Rpb24uYmVnaW4gKyBvZmZzZXQgLSAxKSAhPT0gb3B0cy5yYWRpeFBvaW50IHx8IChzZWxlY3Rpb24uYmVnaW4tLSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW50cmllcyA9IG9wdHMucmFkaXhQb2ludCkpKSwgd3JpdGVCdWZmZXIoaW5wdXQsIGdldEJ1ZmZlcigpLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlZ2luOiBzZWxlY3Rpb24uYmVnaW4gKyBvZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZDogc2VsZWN0aW9uLmVuZCArIG9mZnNldFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLCBlbnRyaWVzLmxlbmd0aCA+IDApICQuZWFjaChlbnRyaWVzLnNwbGl0KFwiXCIpLCBmdW5jdGlvbihuZHgsIGVudHJ5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBrZXlwcmVzcyA9IG5ldyAkLkV2ZW50KFwia2V5cHJlc3NcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleXByZXNzLndoaWNoID0gZW50cnkuY2hhckNvZGVBdCgwKSwgaWdub3JhYmxlID0gITEsIEV2ZW50SGFuZGxlcnMua2V5cHJlc3NFdmVudC5jYWxsKGlucHV0LCBrZXlwcmVzcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Rpb24uYmVnaW4gPT09IHNlbGVjdGlvbi5lbmQgLSAxICYmIChzZWxlY3Rpb24uYmVnaW4gPSBzZWVrUHJldmlvdXMoc2VsZWN0aW9uLmJlZ2luICsgMSksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Rpb24uYmVnaW4gPT09IHNlbGVjdGlvbi5lbmQgLSAxID8gY2FyZXQoaW5wdXQsIHNlbGVjdGlvbi5iZWdpbikgOiBjYXJldChpbnB1dCwgc2VsZWN0aW9uLmJlZ2luLCBzZWxlY3Rpb24uZW5kKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBrZXlkb3duID0gbmV3ICQuRXZlbnQoXCJrZXlkb3duXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXlkb3duLmtleUNvZGUgPSBJbnB1dG1hc2sua2V5Q29kZS5ERUxFVEUsIEV2ZW50SGFuZGxlcnMua2V5ZG93bkV2ZW50LmNhbGwoaW5wdXQsIGtleWRvd24pLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgITEgPT09IG9wdHMuaW5zZXJ0TW9kZSAmJiBjYXJldChpbnB1dCwgY2FyZXQoaW5wdXQpLmJlZ2luIC0gMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgc2V0VmFsdWVFdmVudDogZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmlucHV0bWFzay5yZWZyZXNoVmFsdWUgPSAhMTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gdGhpcywgdmFsdWUgPSBpbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCEwKTtcbiAgICAgICAgICAgICAgICAgICAgJC5pc0Z1bmN0aW9uKG9wdHMub25CZWZvcmVNYXNrKSAmJiAodmFsdWUgPSBvcHRzLm9uQmVmb3JlTWFzay5jYWxsKGlucHV0bWFzaywgdmFsdWUsIG9wdHMpIHx8IHZhbHVlKSwgXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUuc3BsaXQoXCJcIiksIGNoZWNrVmFsKGlucHV0LCAhMCwgITEsIGlzUlRMID8gdmFsdWUucmV2ZXJzZSgpIDogdmFsdWUpLCBcbiAgICAgICAgICAgICAgICAgICAgdW5kb1ZhbHVlID0gZ2V0QnVmZmVyKCkuam9pbihcIlwiKSwgKG9wdHMuY2xlYXJNYXNrT25Mb3N0Rm9jdXMgfHwgb3B0cy5jbGVhckluY29tcGxldGUpICYmIGlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoKSA9PT0gZ2V0QnVmZmVyVGVtcGxhdGUoKS5qb2luKFwiXCIpICYmIGlucHV0LmlucHV0bWFzay5fdmFsdWVTZXQoXCJcIik7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmb2N1c0V2ZW50OiBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpbnB1dCA9IHRoaXMsIG5wdFZhbHVlID0gaW5wdXQuaW5wdXRtYXNrLl92YWx1ZUdldCgpO1xuICAgICAgICAgICAgICAgICAgICBvcHRzLnNob3dNYXNrT25Gb2N1cyAmJiAoIW9wdHMuc2hvd01hc2tPbkhvdmVyIHx8IG9wdHMuc2hvd01hc2tPbkhvdmVyICYmIFwiXCIgPT09IG5wdFZhbHVlKSAmJiAoaW5wdXQuaW5wdXRtYXNrLl92YWx1ZUdldCgpICE9PSBnZXRCdWZmZXIoKS5qb2luKFwiXCIpID8gd3JpdGVCdWZmZXIoaW5wdXQsIGdldEJ1ZmZlcigpLCBzZWVrTmV4dChnZXRMYXN0VmFsaWRQb3NpdGlvbigpKSkgOiAhMSA9PT0gbW91c2VFbnRlciAmJiBjYXJldChpbnB1dCwgc2Vla05leHQoZ2V0TGFzdFZhbGlkUG9zaXRpb24oKSkpKSwgXG4gICAgICAgICAgICAgICAgICAgICEwID09PSBvcHRzLnBvc2l0aW9uQ2FyZXRPblRhYiAmJiAhMSA9PT0gbW91c2VFbnRlciAmJiBcIlwiICE9PSBucHRWYWx1ZSAmJiAod3JpdGVCdWZmZXIoaW5wdXQsIGdldEJ1ZmZlcigpLCBjYXJldChpbnB1dCkpLCBcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRIYW5kbGVycy5jbGlja0V2ZW50LmFwcGx5KGlucHV0LCBbIGUsICEwIF0pKSwgdW5kb1ZhbHVlID0gZ2V0QnVmZmVyKCkuam9pbihcIlwiKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG1vdXNlbGVhdmVFdmVudDogZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgaW5wdXQgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICBpZiAobW91c2VFbnRlciA9ICExLCBvcHRzLmNsZWFyTWFza09uTG9zdEZvY3VzICYmIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgIT09IGlucHV0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYnVmZmVyID0gZ2V0QnVmZmVyKCkuc2xpY2UoKSwgbnB0VmFsdWUgPSBpbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBucHRWYWx1ZSAhPT0gaW5wdXQuZ2V0QXR0cmlidXRlKFwicGxhY2Vob2xkZXJcIikgJiYgXCJcIiAhPT0gbnB0VmFsdWUgJiYgKC0xID09PSBnZXRMYXN0VmFsaWRQb3NpdGlvbigpICYmIG5wdFZhbHVlID09PSBnZXRCdWZmZXJUZW1wbGF0ZSgpLmpvaW4oXCJcIikgPyBidWZmZXIgPSBbXSA6IGNsZWFyT3B0aW9uYWxUYWlsKGJ1ZmZlciksIFxuICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGVCdWZmZXIoaW5wdXQsIGJ1ZmZlcikpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjbGlja0V2ZW50OiBmdW5jdGlvbihlLCB0YWJiZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gZG9SYWRpeEZvY3VzKGNsaWNrUG9zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoXCJcIiAhPT0gb3B0cy5yYWRpeFBvaW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZwcyA9IGdldE1hc2tTZXQoKS52YWxpZFBvc2l0aW9ucztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodnBzW2NsaWNrUG9zXSA9PT0gdW5kZWZpbmVkIHx8IHZwc1tjbGlja1Bvc10uaW5wdXQgPT09IGdldFBsYWNlaG9sZGVyKGNsaWNrUG9zKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2xpY2tQb3MgPCBzZWVrTmV4dCgtMSkpIHJldHVybiAhMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJhZGl4UG9zID0gJC5pbkFycmF5KG9wdHMucmFkaXhQb2ludCwgZ2V0QnVmZmVyKCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoLTEgIT09IHJhZGl4UG9zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciB2cCBpbiB2cHMpIGlmIChyYWRpeFBvcyA8IHZwICYmIHZwc1t2cF0uaW5wdXQgIT09IGdldFBsYWNlaG9sZGVyKHZwKSkgcmV0dXJuICExO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICEwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICExO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhciBpbnB1dCA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCA9PT0gaW5wdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc2VsZWN0ZWRDYXJldCA9IGNhcmV0KGlucHV0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGFiYmVkICYmIChpc1JUTCA/IHNlbGVjdGVkQ2FyZXQuZW5kID0gc2VsZWN0ZWRDYXJldC5iZWdpbiA6IHNlbGVjdGVkQ2FyZXQuYmVnaW4gPSBzZWxlY3RlZENhcmV0LmVuZCksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkQ2FyZXQuYmVnaW4gPT09IHNlbGVjdGVkQ2FyZXQuZW5kKSBzd2l0Y2ggKG9wdHMucG9zaXRpb25DYXJldE9uQ2xpY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJub25lXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwicmFkaXhGb2N1c1wiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9SYWRpeEZvY3VzKHNlbGVjdGVkQ2FyZXQuYmVnaW4pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmFkaXhQb3MgPSBnZXRCdWZmZXIoKS5qb2luKFwiXCIpLmluZGV4T2Yob3B0cy5yYWRpeFBvaW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0KGlucHV0LCBvcHRzLm51bWVyaWNJbnB1dCA/IHNlZWtOZXh0KHJhZGl4UG9zKSA6IHJhZGl4UG9zKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjbGlja1Bvc2l0aW9uID0gc2VsZWN0ZWRDYXJldC5iZWdpbiwgbHZjbGlja1Bvc2l0aW9uID0gZ2V0TGFzdFZhbGlkUG9zaXRpb24oY2xpY2tQb3NpdGlvbiwgITApLCBsYXN0UG9zaXRpb24gPSBzZWVrTmV4dChsdmNsaWNrUG9zaXRpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2xpY2tQb3NpdGlvbiA8IGxhc3RQb3NpdGlvbikgY2FyZXQoaW5wdXQsIGlzTWFzayhjbGlja1Bvc2l0aW9uLCAhMCkgfHwgaXNNYXNrKGNsaWNrUG9zaXRpb24gLSAxLCAhMCkgPyBjbGlja1Bvc2l0aW9uIDogc2Vla05leHQoY2xpY2tQb3NpdGlvbikpOyBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBsdnAgPSBnZXRNYXNrU2V0KCkudmFsaWRQb3NpdGlvbnNbbHZjbGlja1Bvc2l0aW9uXSwgdHQgPSBnZXRUZXN0VGVtcGxhdGUobGFzdFBvc2l0aW9uLCBsdnAgPyBsdnAubWF0Y2gubG9jYXRvciA6IHVuZGVmaW5lZCwgbHZwKSwgcGxhY2Vob2xkZXIgPSBnZXRQbGFjZWhvbGRlcihsYXN0UG9zaXRpb24sIHR0Lm1hdGNoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcIlwiICE9PSBwbGFjZWhvbGRlciAmJiBnZXRCdWZmZXIoKVtsYXN0UG9zaXRpb25dICE9PSBwbGFjZWhvbGRlciAmJiAhMCAhPT0gdHQubWF0Y2gub3B0aW9uYWxRdWFudGlmaWVyICYmICEwICE9PSB0dC5tYXRjaC5uZXdCbG9ja01hcmtlciB8fCAhaXNNYXNrKGxhc3RQb3NpdGlvbiwgITApICYmIHR0Lm1hdGNoLmRlZiA9PT0gcGxhY2Vob2xkZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmV3UG9zID0gc2Vla05leHQobGFzdFBvc2l0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoY2xpY2tQb3NpdGlvbiA+PSBuZXdQb3MgfHwgY2xpY2tQb3NpdGlvbiA9PT0gbGFzdFBvc2l0aW9uKSAmJiAobGFzdFBvc2l0aW9uID0gbmV3UG9zKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0KGlucHV0LCBsYXN0UG9zaXRpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGRibGNsaWNrRXZlbnQ6IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0KGlucHV0LCAwLCBzZWVrTmV4dChnZXRMYXN0VmFsaWRQb3NpdGlvbigpKSk7XG4gICAgICAgICAgICAgICAgICAgIH0sIDApO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY3V0RXZlbnQ6IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gdGhpcywgJGlucHV0ID0gJChpbnB1dCksIHBvcyA9IGNhcmV0KGlucHV0KSwgZXYgPSBlLm9yaWdpbmFsRXZlbnQgfHwgZSwgY2xpcGJvYXJkRGF0YSA9IHdpbmRvdy5jbGlwYm9hcmREYXRhIHx8IGV2LmNsaXBib2FyZERhdGEsIGNsaXBEYXRhID0gaXNSVEwgPyBnZXRCdWZmZXIoKS5zbGljZShwb3MuZW5kLCBwb3MuYmVnaW4pIDogZ2V0QnVmZmVyKCkuc2xpY2UocG9zLmJlZ2luLCBwb3MuZW5kKTtcbiAgICAgICAgICAgICAgICAgICAgY2xpcGJvYXJkRGF0YS5zZXREYXRhKFwidGV4dFwiLCBpc1JUTCA/IGNsaXBEYXRhLnJldmVyc2UoKS5qb2luKFwiXCIpIDogY2xpcERhdGEuam9pbihcIlwiKSksIFxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5leGVjQ29tbWFuZCAmJiBkb2N1bWVudC5leGVjQ29tbWFuZChcImNvcHlcIiksIGhhbmRsZVJlbW92ZShpbnB1dCwgSW5wdXRtYXNrLmtleUNvZGUuREVMRVRFLCBwb3MpLCBcbiAgICAgICAgICAgICAgICAgICAgd3JpdGVCdWZmZXIoaW5wdXQsIGdldEJ1ZmZlcigpLCBnZXRNYXNrU2V0KCkucCwgZSwgdW5kb1ZhbHVlICE9PSBnZXRCdWZmZXIoKS5qb2luKFwiXCIpKSwgXG4gICAgICAgICAgICAgICAgICAgIGlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoKSA9PT0gZ2V0QnVmZmVyVGVtcGxhdGUoKS5qb2luKFwiXCIpICYmICRpbnB1dC50cmlnZ2VyKFwiY2xlYXJlZFwiKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGJsdXJFdmVudDogZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgJGlucHV0ID0gJCh0aGlzKSwgaW5wdXQgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXQuaW5wdXRtYXNrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbnB0VmFsdWUgPSBpbnB1dC5pbnB1dG1hc2suX3ZhbHVlR2V0KCksIGJ1ZmZlciA9IGdldEJ1ZmZlcigpLnNsaWNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBcIlwiID09PSBucHRWYWx1ZSAmJiBjb2xvck1hc2sgPT09IHVuZGVmaW5lZCB8fCAob3B0cy5jbGVhck1hc2tPbkxvc3RGb2N1cyAmJiAoLTEgPT09IGdldExhc3RWYWxpZFBvc2l0aW9uKCkgJiYgbnB0VmFsdWUgPT09IGdldEJ1ZmZlclRlbXBsYXRlKCkuam9pbihcIlwiKSA/IGJ1ZmZlciA9IFtdIDogY2xlYXJPcHRpb25hbFRhaWwoYnVmZmVyKSksIFxuICAgICAgICAgICAgICAgICAgICAgICAgITEgPT09IGlzQ29tcGxldGUoYnVmZmVyKSAmJiAoc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaW5wdXQudHJpZ2dlcihcImluY29tcGxldGVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCAwKSwgb3B0cy5jbGVhckluY29tcGxldGUgJiYgKHJlc2V0TWFza1NldCgpLCBidWZmZXIgPSBvcHRzLmNsZWFyTWFza09uTG9zdEZvY3VzID8gW10gOiBnZXRCdWZmZXJUZW1wbGF0ZSgpLnNsaWNlKCkpKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICB3cml0ZUJ1ZmZlcihpbnB1dCwgYnVmZmVyLCB1bmRlZmluZWQsIGUpKSwgdW5kb1ZhbHVlICE9PSBnZXRCdWZmZXIoKS5qb2luKFwiXCIpICYmICh1bmRvVmFsdWUgPSBidWZmZXIuam9pbihcIlwiKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAkaW5wdXQudHJpZ2dlcihcImNoYW5nZVwiKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG1vdXNlZW50ZXJFdmVudDogZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgaW5wdXQgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICBtb3VzZUVudGVyID0gITAsIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgIT09IGlucHV0ICYmIG9wdHMuc2hvd01hc2tPbkhvdmVyICYmIGlucHV0LmlucHV0bWFzay5fdmFsdWVHZXQoKSAhPT0gZ2V0QnVmZmVyKCkuam9pbihcIlwiKSAmJiB3cml0ZUJ1ZmZlcihpbnB1dCwgZ2V0QnVmZmVyKCkpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgc3VibWl0RXZlbnQ6IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdW5kb1ZhbHVlICE9PSBnZXRCdWZmZXIoKS5qb2luKFwiXCIpICYmICRlbC50cmlnZ2VyKFwiY2hhbmdlXCIpLCBvcHRzLmNsZWFyTWFza09uTG9zdEZvY3VzICYmIC0xID09PSBnZXRMYXN0VmFsaWRQb3NpdGlvbigpICYmIGVsLmlucHV0bWFzay5fdmFsdWVHZXQgJiYgZWwuaW5wdXRtYXNrLl92YWx1ZUdldCgpID09PSBnZXRCdWZmZXJUZW1wbGF0ZSgpLmpvaW4oXCJcIikgJiYgZWwuaW5wdXRtYXNrLl92YWx1ZVNldChcIlwiKSwgXG4gICAgICAgICAgICAgICAgICAgIG9wdHMucmVtb3ZlTWFza09uU3VibWl0ICYmIChlbC5pbnB1dG1hc2suX3ZhbHVlU2V0KGVsLmlucHV0bWFzay51bm1hc2tlZHZhbHVlKCksICEwKSwgXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3cml0ZUJ1ZmZlcihlbCwgZ2V0QnVmZmVyKCkpO1xuICAgICAgICAgICAgICAgICAgICB9LCAwKSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICByZXNldEV2ZW50OiBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgICAgICAgIGVsLmlucHV0bWFzay5yZWZyZXNoVmFsdWUgPSAhMCwgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRlbC50cmlnZ2VyKFwic2V0dmFsdWVcIik7XG4gICAgICAgICAgICAgICAgICAgIH0sIDApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBJbnB1dG1hc2sucHJvdG90eXBlLnBvc2l0aW9uQ29sb3JNYXNrID0gZnVuY3Rpb24oaW5wdXQsIHRlbXBsYXRlKSB7XG4gICAgICAgICAgICAgICAgaW5wdXQuc3R5bGUubGVmdCA9IHRlbXBsYXRlLm9mZnNldExlZnQgKyBcInB4XCI7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdmFyIHZhbHVlQnVmZmVyO1xuICAgICAgICAgICAgaWYgKGFjdGlvbk9iaiAhPT0gdW5kZWZpbmVkKSBzd2l0Y2ggKGFjdGlvbk9iai5hY3Rpb24pIHtcbiAgICAgICAgICAgICAgY2FzZSBcImlzQ29tcGxldGVcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gZWwgPSBhY3Rpb25PYmouZWwsIGlzQ29tcGxldGUoZ2V0QnVmZmVyKCkpO1xuXG4gICAgICAgICAgICAgIGNhc2UgXCJ1bm1hc2tlZHZhbHVlXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsICE9PSB1bmRlZmluZWQgJiYgYWN0aW9uT2JqLnZhbHVlID09PSB1bmRlZmluZWQgfHwgKHZhbHVlQnVmZmVyID0gYWN0aW9uT2JqLnZhbHVlLCBcbiAgICAgICAgICAgICAgICB2YWx1ZUJ1ZmZlciA9ICgkLmlzRnVuY3Rpb24ob3B0cy5vbkJlZm9yZU1hc2spID8gb3B0cy5vbkJlZm9yZU1hc2suY2FsbChpbnB1dG1hc2ssIHZhbHVlQnVmZmVyLCBvcHRzKSB8fCB2YWx1ZUJ1ZmZlciA6IHZhbHVlQnVmZmVyKS5zcGxpdChcIlwiKSwgXG4gICAgICAgICAgICAgICAgY2hlY2tWYWwodW5kZWZpbmVkLCAhMSwgITEsIGlzUlRMID8gdmFsdWVCdWZmZXIucmV2ZXJzZSgpIDogdmFsdWVCdWZmZXIpLCAkLmlzRnVuY3Rpb24ob3B0cy5vbkJlZm9yZVdyaXRlKSAmJiBvcHRzLm9uQmVmb3JlV3JpdGUuY2FsbChpbnB1dG1hc2ssIHVuZGVmaW5lZCwgZ2V0QnVmZmVyKCksIDAsIG9wdHMpKSwgXG4gICAgICAgICAgICAgICAgdW5tYXNrZWR2YWx1ZShlbCk7XG5cbiAgICAgICAgICAgICAgY2FzZSBcIm1hc2tcIjpcbiAgICAgICAgICAgICAgICAhZnVuY3Rpb24oZWxlbSkge1xuICAgICAgICAgICAgICAgICAgICBFdmVudFJ1bGVyLm9mZihlbGVtKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlzU3VwcG9ydGVkID0gZnVuY3Rpb24oaW5wdXQsIG9wdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlbGVtZW50VHlwZSA9IGlucHV0LmdldEF0dHJpYnV0ZShcInR5cGVcIiksIGlzU3VwcG9ydGVkID0gXCJJTlBVVFwiID09PSBpbnB1dC50YWdOYW1lICYmIC0xICE9PSAkLmluQXJyYXkoZWxlbWVudFR5cGUsIG9wdHMuc3VwcG9ydHNJbnB1dFR5cGUpIHx8IGlucHV0LmlzQ29udGVudEVkaXRhYmxlIHx8IFwiVEVYVEFSRUFcIiA9PT0gaW5wdXQudGFnTmFtZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNTdXBwb3J0ZWQpIGlmIChcIklOUFVUXCIgPT09IGlucHV0LnRhZ05hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWwuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBlbGVtZW50VHlwZSksIGlzU3VwcG9ydGVkID0gXCJ0ZXh0XCIgPT09IGVsLnR5cGUsIGVsID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpc1N1cHBvcnRlZCA9IFwicGFydGlhbFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICExICE9PSBpc1N1cHBvcnRlZCA/IGZ1bmN0aW9uKG5wdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGdldHRlcigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuaW5wdXRtYXNrID8gdGhpcy5pbnB1dG1hc2sub3B0cy5hdXRvVW5tYXNrID8gdGhpcy5pbnB1dG1hc2sudW5tYXNrZWR2YWx1ZSgpIDogLTEgIT09IGdldExhc3RWYWxpZFBvc2l0aW9uKCkgfHwgITAgIT09IG9wdHMubnVsbGFibGUgPyBkb2N1bWVudC5hY3RpdmVFbGVtZW50ID09PSB0aGlzICYmIG9wdHMuY2xlYXJNYXNrT25Mb3N0Rm9jdXMgPyAoaXNSVEwgPyBjbGVhck9wdGlvbmFsVGFpbChnZXRCdWZmZXIoKS5zbGljZSgpKS5yZXZlcnNlKCkgOiBjbGVhck9wdGlvbmFsVGFpbChnZXRCdWZmZXIoKS5zbGljZSgpKSkuam9pbihcIlwiKSA6IHZhbHVlR2V0LmNhbGwodGhpcykgOiBcIlwiIDogdmFsdWVHZXQuY2FsbCh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gc2V0dGVyKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlU2V0LmNhbGwodGhpcywgdmFsdWUpLCB0aGlzLmlucHV0bWFzayAmJiAkKHRoaXMpLnRyaWdnZXIoXCJzZXR2YWx1ZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlR2V0LCB2YWx1ZVNldDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIW5wdC5pbnB1dG1hc2suX192YWx1ZUdldCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoITAgIT09IG9wdHMubm9WYWx1ZVBhdGNoaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgT2JqZWN0LmdldFByb3RvdHlwZU9mICYmIChPYmplY3QuZ2V0UHJvdG90eXBlT2YgPSBcIm9iamVjdFwiID09PSBfdHlwZW9mKFwidGVzdFwiLl9fcHJvdG9fXykgPyBmdW5jdGlvbihvYmplY3QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9iamVjdC5fX3Byb3RvX187XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSA6IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gb2JqZWN0LmNvbnN0cnVjdG9yLnByb3RvdHlwZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWVQcm9wZXJ0eSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoT2JqZWN0LmdldFByb3RvdHlwZU9mKG5wdCksIFwidmFsdWVcIikgOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVQcm9wZXJ0eSAmJiB2YWx1ZVByb3BlcnR5LmdldCAmJiB2YWx1ZVByb3BlcnR5LnNldCA/ICh2YWx1ZUdldCA9IHZhbHVlUHJvcGVydHkuZ2V0LCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZVNldCA9IHZhbHVlUHJvcGVydHkuc2V0LCBPYmplY3QuZGVmaW5lUHJvcGVydHkobnB0LCBcInZhbHVlXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0OiBnZXR0ZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldDogc2V0dGVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6ICEwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpIDogXCJJTlBVVFwiICE9PSBucHQudGFnTmFtZSAmJiAodmFsdWVHZXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudGV4dENvbnRlbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgdmFsdWVTZXQgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5wdCwgXCJ2YWx1ZVwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldDogZ2V0dGVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXQ6IHNldHRlcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiAhMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBkb2N1bWVudC5fX2xvb2t1cEdldHRlcl9fICYmIG5wdC5fX2xvb2t1cEdldHRlcl9fKFwidmFsdWVcIikgJiYgKHZhbHVlR2V0ID0gbnB0Ll9fbG9va3VwR2V0dGVyX18oXCJ2YWx1ZVwiKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZVNldCA9IG5wdC5fX2xvb2t1cFNldHRlcl9fKFwidmFsdWVcIiksIG5wdC5fX2RlZmluZUdldHRlcl9fKFwidmFsdWVcIiwgZ2V0dGVyKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBucHQuX19kZWZpbmVTZXR0ZXJfXyhcInZhbHVlXCIsIHNldHRlcikpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbnB0LmlucHV0bWFzay5fX3ZhbHVlR2V0ID0gdmFsdWVHZXQsIG5wdC5pbnB1dG1hc2suX192YWx1ZVNldCA9IHZhbHVlU2V0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5wdC5pbnB1dG1hc2suX3ZhbHVlR2V0ID0gZnVuY3Rpb24ob3ZlcnJ1bGVSVEwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpc1JUTCAmJiAhMCAhPT0gb3ZlcnJ1bGVSVEwgPyB2YWx1ZUdldC5jYWxsKHRoaXMuZWwpLnNwbGl0KFwiXCIpLnJldmVyc2UoKS5qb2luKFwiXCIpIDogdmFsdWVHZXQuY2FsbCh0aGlzLmVsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgbnB0LmlucHV0bWFzay5fdmFsdWVTZXQgPSBmdW5jdGlvbih2YWx1ZSwgb3ZlcnJ1bGVSVEwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlU2V0LmNhbGwodGhpcy5lbCwgbnVsbCA9PT0gdmFsdWUgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCA/IFwiXCIgOiAhMCAhPT0gb3ZlcnJ1bGVSVEwgJiYgaXNSVEwgPyB2YWx1ZS5zcGxpdChcIlwiKS5yZXZlcnNlKCkuam9pbihcIlwiKSA6IHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgdmFsdWVHZXQgPT09IHVuZGVmaW5lZCAmJiAodmFsdWVHZXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB2YWx1ZVNldCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uKHR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkLnZhbEhvb2tzICYmICgkLnZhbEhvb2tzW3R5cGVdID09PSB1bmRlZmluZWQgfHwgITAgIT09ICQudmFsSG9va3NbdHlwZV0uaW5wdXRtYXNrcGF0Y2gpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZhbGhvb2tHZXQgPSAkLnZhbEhvb2tzW3R5cGVdICYmICQudmFsSG9va3NbdHlwZV0uZ2V0ID8gJC52YWxIb29rc1t0eXBlXS5nZXQgOiBmdW5jdGlvbihlbGVtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlbGVtLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHZhbGhvb2tTZXQgPSAkLnZhbEhvb2tzW3R5cGVdICYmICQudmFsSG9va3NbdHlwZV0uc2V0ID8gJC52YWxIb29rc1t0eXBlXS5zZXQgOiBmdW5jdGlvbihlbGVtLCB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbS52YWx1ZSA9IHZhbHVlLCBlbGVtO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJC52YWxIb29rc1t0eXBlXSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbihlbGVtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbS5pbnB1dG1hc2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbS5pbnB1dG1hc2sub3B0cy5hdXRvVW5tYXNrKSByZXR1cm4gZWxlbS5pbnB1dG1hc2sudW5tYXNrZWR2YWx1ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSB2YWxob29rR2V0KGVsZW0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAtMSAhPT0gZ2V0TGFzdFZhbGlkUG9zaXRpb24odW5kZWZpbmVkLCB1bmRlZmluZWQsIGVsZW0uaW5wdXRtYXNrLm1hc2tzZXQudmFsaWRQb3NpdGlvbnMpIHx8ICEwICE9PSBvcHRzLm51bGxhYmxlID8gcmVzdWx0IDogXCJcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWxob29rR2V0KGVsZW0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKGVsZW0sIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVzdWx0LCAkZWxlbSA9ICQoZWxlbSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ID0gdmFsaG9va1NldChlbGVtLCB2YWx1ZSksIGVsZW0uaW5wdXRtYXNrICYmICRlbGVtLnRyaWdnZXIoXCJzZXR2YWx1ZVwiKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0bWFza3BhdGNoOiAhMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0obnB0LnR5cGUpLCBmdW5jdGlvbihucHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV2ZW50UnVsZXIub24obnB0LCBcIm1vdXNlZW50ZXJcIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgJGlucHV0ID0gJCh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmlucHV0bWFzay5fdmFsdWVHZXQoKSAhPT0gZ2V0QnVmZmVyKCkuam9pbihcIlwiKSAmJiAkaW5wdXQudHJpZ2dlcihcInNldHZhbHVlXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0obnB0KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfShpbnB1dCkgOiBpbnB1dC5pbnB1dG1hc2sgPSB1bmRlZmluZWQsIGlzU3VwcG9ydGVkO1xuICAgICAgICAgICAgICAgICAgICB9KGVsZW0sIG9wdHMpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoITEgIT09IGlzU3VwcG9ydGVkICYmIChlbCA9IGVsZW0sICRlbCA9ICQoZWwpLCAtMSA9PT0gKG1heExlbmd0aCA9IGVsICE9PSB1bmRlZmluZWQgPyBlbC5tYXhMZW5ndGggOiB1bmRlZmluZWQpICYmIChtYXhMZW5ndGggPSB1bmRlZmluZWQpLCBcbiAgICAgICAgICAgICAgICAgICAgITAgPT09IG9wdHMuY29sb3JNYXNrICYmIGluaXRpYWxpemVDb2xvck1hc2soZWwpLCBtb2JpbGUgJiYgKFwiaW5wdXRtb2RlXCIgaW4gZWwgJiYgKGVsLmlucHV0bW9kZSA9IG9wdHMuaW5wdXRtb2RlLCBcbiAgICAgICAgICAgICAgICAgICAgZWwuc2V0QXR0cmlidXRlKFwiaW5wdXRtb2RlXCIsIG9wdHMuaW5wdXRtb2RlKSksICEwID09PSBvcHRzLmRpc2FibGVQcmVkaWN0aXZlVGV4dCAmJiAoXCJhdXRvY29ycmVjdFwiIGluIGVsID8gZWwuYXV0b2NvcnJlY3QgPSAhMSA6ICghMCAhPT0gb3B0cy5jb2xvck1hc2sgJiYgaW5pdGlhbGl6ZUNvbG9yTWFzayhlbCksIFxuICAgICAgICAgICAgICAgICAgICBlbC50eXBlID0gXCJwYXNzd29yZFwiKSkpLCAhMCA9PT0gaXNTdXBwb3J0ZWQgJiYgKEV2ZW50UnVsZXIub24oZWwsIFwic3VibWl0XCIsIEV2ZW50SGFuZGxlcnMuc3VibWl0RXZlbnQpLCBcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRSdWxlci5vbihlbCwgXCJyZXNldFwiLCBFdmVudEhhbmRsZXJzLnJlc2V0RXZlbnQpLCBFdmVudFJ1bGVyLm9uKGVsLCBcIm1vdXNlZW50ZXJcIiwgRXZlbnRIYW5kbGVycy5tb3VzZWVudGVyRXZlbnQpLCBcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRSdWxlci5vbihlbCwgXCJibHVyXCIsIEV2ZW50SGFuZGxlcnMuYmx1ckV2ZW50KSwgRXZlbnRSdWxlci5vbihlbCwgXCJmb2N1c1wiLCBFdmVudEhhbmRsZXJzLmZvY3VzRXZlbnQpLCBcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRSdWxlci5vbihlbCwgXCJtb3VzZWxlYXZlXCIsIEV2ZW50SGFuZGxlcnMubW91c2VsZWF2ZUV2ZW50KSwgITAgIT09IG9wdHMuY29sb3JNYXNrICYmIEV2ZW50UnVsZXIub24oZWwsIFwiY2xpY2tcIiwgRXZlbnRIYW5kbGVycy5jbGlja0V2ZW50KSwgXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50UnVsZXIub24oZWwsIFwiZGJsY2xpY2tcIiwgRXZlbnRIYW5kbGVycy5kYmxjbGlja0V2ZW50KSwgRXZlbnRSdWxlci5vbihlbCwgXCJwYXN0ZVwiLCBFdmVudEhhbmRsZXJzLnBhc3RlRXZlbnQpLCBcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRSdWxlci5vbihlbCwgXCJkcmFnZHJvcFwiLCBFdmVudEhhbmRsZXJzLnBhc3RlRXZlbnQpLCBFdmVudFJ1bGVyLm9uKGVsLCBcImRyb3BcIiwgRXZlbnRIYW5kbGVycy5wYXN0ZUV2ZW50KSwgXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50UnVsZXIub24oZWwsIFwiY3V0XCIsIEV2ZW50SGFuZGxlcnMuY3V0RXZlbnQpLCBFdmVudFJ1bGVyLm9uKGVsLCBcImNvbXBsZXRlXCIsIG9wdHMub25jb21wbGV0ZSksIFxuICAgICAgICAgICAgICAgICAgICBFdmVudFJ1bGVyLm9uKGVsLCBcImluY29tcGxldGVcIiwgb3B0cy5vbmluY29tcGxldGUpLCBFdmVudFJ1bGVyLm9uKGVsLCBcImNsZWFyZWRcIiwgb3B0cy5vbmNsZWFyZWQpLCBcbiAgICAgICAgICAgICAgICAgICAgbW9iaWxlIHx8ICEwID09PSBvcHRzLmlucHV0RXZlbnRPbmx5ID8gZWwucmVtb3ZlQXR0cmlidXRlKFwibWF4TGVuZ3RoXCIpIDogKEV2ZW50UnVsZXIub24oZWwsIFwia2V5ZG93blwiLCBFdmVudEhhbmRsZXJzLmtleWRvd25FdmVudCksIFxuICAgICAgICAgICAgICAgICAgICBFdmVudFJ1bGVyLm9uKGVsLCBcImtleXByZXNzXCIsIEV2ZW50SGFuZGxlcnMua2V5cHJlc3NFdmVudCkpLCBFdmVudFJ1bGVyLm9uKGVsLCBcImNvbXBvc2l0aW9uc3RhcnRcIiwgJC5ub29wKSwgXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50UnVsZXIub24oZWwsIFwiY29tcG9zaXRpb251cGRhdGVcIiwgJC5ub29wKSwgRXZlbnRSdWxlci5vbihlbCwgXCJjb21wb3NpdGlvbmVuZFwiLCAkLm5vb3ApLCBcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRSdWxlci5vbihlbCwgXCJrZXl1cFwiLCAkLm5vb3ApLCBFdmVudFJ1bGVyLm9uKGVsLCBcImlucHV0XCIsIEV2ZW50SGFuZGxlcnMuaW5wdXRGYWxsQmFja0V2ZW50KSwgXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50UnVsZXIub24oZWwsIFwiYmVmb3JlaW5wdXRcIiwgJC5ub29wKSksIEV2ZW50UnVsZXIub24oZWwsIFwic2V0dmFsdWVcIiwgRXZlbnRIYW5kbGVycy5zZXRWYWx1ZUV2ZW50KSwgXG4gICAgICAgICAgICAgICAgICAgIHVuZG9WYWx1ZSA9IGdldEJ1ZmZlclRlbXBsYXRlKCkuam9pbihcIlwiKSwgXCJcIiAhPT0gZWwuaW5wdXRtYXNrLl92YWx1ZUdldCghMCkgfHwgITEgPT09IG9wdHMuY2xlYXJNYXNrT25Mb3N0Rm9jdXMgfHwgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCA9PT0gZWwpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW5pdGlhbFZhbHVlID0gJC5pc0Z1bmN0aW9uKG9wdHMub25CZWZvcmVNYXNrKSA/IG9wdHMub25CZWZvcmVNYXNrLmNhbGwoaW5wdXRtYXNrLCBlbC5pbnB1dG1hc2suX3ZhbHVlR2V0KCEwKSwgb3B0cykgfHwgZWwuaW5wdXRtYXNrLl92YWx1ZUdldCghMCkgOiBlbC5pbnB1dG1hc2suX3ZhbHVlR2V0KCEwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiXCIgIT09IGluaXRpYWxWYWx1ZSAmJiBjaGVja1ZhbChlbCwgITAsICExLCBpc1JUTCA/IGluaXRpYWxWYWx1ZS5zcGxpdChcIlwiKS5yZXZlcnNlKCkgOiBpbml0aWFsVmFsdWUuc3BsaXQoXCJcIikpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGJ1ZmZlciA9IGdldEJ1ZmZlcigpLnNsaWNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB1bmRvVmFsdWUgPSBidWZmZXIuam9pbihcIlwiKSwgITEgPT09IGlzQ29tcGxldGUoYnVmZmVyKSAmJiBvcHRzLmNsZWFySW5jb21wbGV0ZSAmJiByZXNldE1hc2tTZXQoKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRzLmNsZWFyTWFza09uTG9zdEZvY3VzICYmIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgIT09IGVsICYmICgtMSA9PT0gZ2V0TGFzdFZhbGlkUG9zaXRpb24oKSA/IGJ1ZmZlciA9IFtdIDogY2xlYXJPcHRpb25hbFRhaWwoYnVmZmVyKSksIFxuICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGVCdWZmZXIoZWwsIGJ1ZmZlciksIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgPT09IGVsICYmIGNhcmV0KGVsLCBzZWVrTmV4dChnZXRMYXN0VmFsaWRQb3NpdGlvbigpKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KGVsKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICBjYXNlIFwiZm9ybWF0XCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlQnVmZmVyID0gKCQuaXNGdW5jdGlvbihvcHRzLm9uQmVmb3JlTWFzaykgPyBvcHRzLm9uQmVmb3JlTWFzay5jYWxsKGlucHV0bWFzaywgYWN0aW9uT2JqLnZhbHVlLCBvcHRzKSB8fCBhY3Rpb25PYmoudmFsdWUgOiBhY3Rpb25PYmoudmFsdWUpLnNwbGl0KFwiXCIpLCBcbiAgICAgICAgICAgICAgICBjaGVja1ZhbCh1bmRlZmluZWQsICEwLCAhMSwgaXNSVEwgPyB2YWx1ZUJ1ZmZlci5yZXZlcnNlKCkgOiB2YWx1ZUJ1ZmZlciksIGFjdGlvbk9iai5tZXRhZGF0YSA/IHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGlzUlRMID8gZ2V0QnVmZmVyKCkuc2xpY2UoKS5yZXZlcnNlKCkuam9pbihcIlwiKSA6IGdldEJ1ZmZlcigpLmpvaW4oXCJcIiksXG4gICAgICAgICAgICAgICAgICAgIG1ldGFkYXRhOiBtYXNrU2NvcGUuY2FsbCh0aGlzLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb246IFwiZ2V0bWV0YWRhdGFcIlxuICAgICAgICAgICAgICAgICAgICB9LCBtYXNrc2V0LCBvcHRzKVxuICAgICAgICAgICAgICAgIH0gOiBpc1JUTCA/IGdldEJ1ZmZlcigpLnNsaWNlKCkucmV2ZXJzZSgpLmpvaW4oXCJcIikgOiBnZXRCdWZmZXIoKS5qb2luKFwiXCIpO1xuXG4gICAgICAgICAgICAgIGNhc2UgXCJpc1ZhbGlkXCI6XG4gICAgICAgICAgICAgICAgYWN0aW9uT2JqLnZhbHVlID8gKHZhbHVlQnVmZmVyID0gYWN0aW9uT2JqLnZhbHVlLnNwbGl0KFwiXCIpLCBjaGVja1ZhbCh1bmRlZmluZWQsICEwLCAhMCwgaXNSVEwgPyB2YWx1ZUJ1ZmZlci5yZXZlcnNlKCkgOiB2YWx1ZUJ1ZmZlcikpIDogYWN0aW9uT2JqLnZhbHVlID0gZ2V0QnVmZmVyKCkuam9pbihcIlwiKTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBidWZmZXIgPSBnZXRCdWZmZXIoKSwgcmwgPSBkZXRlcm1pbmVMYXN0UmVxdWlyZWRQb3NpdGlvbigpLCBsbWliID0gYnVmZmVyLmxlbmd0aCAtIDE7IGxtaWIgPiBybCAmJiAhaXNNYXNrKGxtaWIpOyBsbWliLS0pIDtcbiAgICAgICAgICAgICAgICByZXR1cm4gYnVmZmVyLnNwbGljZShybCwgbG1pYiArIDEgLSBybCksIGlzQ29tcGxldGUoYnVmZmVyKSAmJiBhY3Rpb25PYmoudmFsdWUgPT09IGdldEJ1ZmZlcigpLmpvaW4oXCJcIik7XG5cbiAgICAgICAgICAgICAgY2FzZSBcImdldGVtcHR5bWFza1wiOlxuICAgICAgICAgICAgICAgIHJldHVybiBnZXRCdWZmZXJUZW1wbGF0ZSgpLmpvaW4oXCJcIik7XG5cbiAgICAgICAgICAgICAgY2FzZSBcInJlbW92ZVwiOlxuICAgICAgICAgICAgICAgIGlmIChlbCAmJiBlbC5pbnB1dG1hc2spIHtcbiAgICAgICAgICAgICAgICAgICAgJGVsID0gJChlbCksIGVsLmlucHV0bWFzay5fdmFsdWVTZXQob3B0cy5hdXRvVW5tYXNrID8gdW5tYXNrZWR2YWx1ZShlbCkgOiBlbC5pbnB1dG1hc2suX3ZhbHVlR2V0KCEwKSksIFxuICAgICAgICAgICAgICAgICAgICBFdmVudFJ1bGVyLm9mZihlbCksIGVsLmlucHV0bWFzay5jb2xvck1hc2sgJiYgKChjb2xvck1hc2sgPSBlbC5pbnB1dG1hc2suY29sb3JNYXNrKS5yZW1vdmVDaGlsZChlbCksIFxuICAgICAgICAgICAgICAgICAgICBjb2xvck1hc2sucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWwsIGNvbG9yTWFzayksIGNvbG9yTWFzay5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGNvbG9yTWFzaykpO1xuICAgICAgICAgICAgICAgICAgICBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yICYmIE9iamVjdC5nZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoT2JqZWN0LmdldFByb3RvdHlwZU9mKGVsKSwgXCJ2YWx1ZVwiKSAmJiBlbC5pbnB1dG1hc2suX192YWx1ZUdldCAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkoZWwsIFwidmFsdWVcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0OiBlbC5pbnB1dG1hc2suX192YWx1ZUdldCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldDogZWwuaW5wdXRtYXNrLl9fdmFsdWVTZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6ICEwXG4gICAgICAgICAgICAgICAgICAgIH0pIDogZG9jdW1lbnQuX19sb29rdXBHZXR0ZXJfXyAmJiBlbC5fX2xvb2t1cEdldHRlcl9fKFwidmFsdWVcIikgJiYgZWwuaW5wdXRtYXNrLl9fdmFsdWVHZXQgJiYgKGVsLl9fZGVmaW5lR2V0dGVyX18oXCJ2YWx1ZVwiLCBlbC5pbnB1dG1hc2suX192YWx1ZUdldCksIFxuICAgICAgICAgICAgICAgICAgICBlbC5fX2RlZmluZVNldHRlcl9fKFwidmFsdWVcIiwgZWwuaW5wdXRtYXNrLl9fdmFsdWVTZXQpKSwgZWwuaW5wdXRtYXNrID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gZWw7XG5cbiAgICAgICAgICAgICAgY2FzZSBcImdldG1ldGFkYXRhXCI6XG4gICAgICAgICAgICAgICAgaWYgKCQuaXNBcnJheShtYXNrc2V0Lm1ldGFkYXRhKSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbWFza1RhcmdldCA9IGdldE1hc2tUZW1wbGF0ZSghMCwgMCwgITEpLmpvaW4oXCJcIik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAkLmVhY2gobWFza3NldC5tZXRhZGF0YSwgZnVuY3Rpb24obmR4LCBtdGR0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobXRkdC5tYXNrID09PSBtYXNrVGFyZ2V0KSByZXR1cm4gbWFza1RhcmdldCA9IG10ZHQsICExO1xuICAgICAgICAgICAgICAgICAgICB9KSwgbWFza1RhcmdldDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1hc2tzZXQubWV0YWRhdGE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHVhID0gbmF2aWdhdG9yLnVzZXJBZ2VudCwgbW9iaWxlID0gaXNJbnB1dEV2ZW50U3VwcG9ydGVkKFwidG91Y2hzdGFydFwiKSwgaWVtb2JpbGUgPSAvaWVtb2JpbGUvaS50ZXN0KHVhKSwgaXBob25lID0gL2lwaG9uZS9pLnRlc3QodWEpICYmICFpZW1vYmlsZTtcbiAgICAgICAgcmV0dXJuIElucHV0bWFzay5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICBkYXRhQXR0cmlidXRlOiBcImRhdGEtaW5wdXRtYXNrXCIsXG4gICAgICAgICAgICBkZWZhdWx0czoge1xuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIl9cIixcbiAgICAgICAgICAgICAgICBvcHRpb25hbG1hcmtlcjogWyBcIltcIiwgXCJdXCIgXSxcbiAgICAgICAgICAgICAgICBxdWFudGlmaWVybWFya2VyOiBbIFwie1wiLCBcIn1cIiBdLFxuICAgICAgICAgICAgICAgIGdyb3VwbWFya2VyOiBbIFwiKFwiLCBcIilcIiBdLFxuICAgICAgICAgICAgICAgIGFsdGVybmF0b3JtYXJrZXI6IFwifFwiLFxuICAgICAgICAgICAgICAgIGVzY2FwZUNoYXI6IFwiXFxcXFwiLFxuICAgICAgICAgICAgICAgIG1hc2s6IG51bGwsXG4gICAgICAgICAgICAgICAgcmVnZXg6IG51bGwsXG4gICAgICAgICAgICAgICAgb25jb21wbGV0ZTogJC5ub29wLFxuICAgICAgICAgICAgICAgIG9uaW5jb21wbGV0ZTogJC5ub29wLFxuICAgICAgICAgICAgICAgIG9uY2xlYXJlZDogJC5ub29wLFxuICAgICAgICAgICAgICAgIHJlcGVhdDogMCxcbiAgICAgICAgICAgICAgICBncmVlZHk6ICEwLFxuICAgICAgICAgICAgICAgIGF1dG9Vbm1hc2s6ICExLFxuICAgICAgICAgICAgICAgIHJlbW92ZU1hc2tPblN1Ym1pdDogITEsXG4gICAgICAgICAgICAgICAgY2xlYXJNYXNrT25Mb3N0Rm9jdXM6ICEwLFxuICAgICAgICAgICAgICAgIGluc2VydE1vZGU6ICEwLFxuICAgICAgICAgICAgICAgIGNsZWFySW5jb21wbGV0ZTogITEsXG4gICAgICAgICAgICAgICAgYWxpYXM6IG51bGwsXG4gICAgICAgICAgICAgICAgb25LZXlEb3duOiAkLm5vb3AsXG4gICAgICAgICAgICAgICAgb25CZWZvcmVNYXNrOiBudWxsLFxuICAgICAgICAgICAgICAgIG9uQmVmb3JlUGFzdGU6IGZ1bmN0aW9uKHBhc3RlZFZhbHVlLCBvcHRzKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAkLmlzRnVuY3Rpb24ob3B0cy5vbkJlZm9yZU1hc2spID8gb3B0cy5vbkJlZm9yZU1hc2suY2FsbCh0aGlzLCBwYXN0ZWRWYWx1ZSwgb3B0cykgOiBwYXN0ZWRWYWx1ZTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uQmVmb3JlV3JpdGU6IG51bGwsXG4gICAgICAgICAgICAgICAgb25Vbk1hc2s6IG51bGwsXG4gICAgICAgICAgICAgICAgc2hvd01hc2tPbkZvY3VzOiAhMCxcbiAgICAgICAgICAgICAgICBzaG93TWFza09uSG92ZXI6ICEwLFxuICAgICAgICAgICAgICAgIG9uS2V5VmFsaWRhdGlvbjogJC5ub29wLFxuICAgICAgICAgICAgICAgIHNraXBPcHRpb25hbFBhcnRDaGFyYWN0ZXI6IFwiIFwiLFxuICAgICAgICAgICAgICAgIG51bWVyaWNJbnB1dDogITEsXG4gICAgICAgICAgICAgICAgcmlnaHRBbGlnbjogITEsXG4gICAgICAgICAgICAgICAgdW5kb09uRXNjYXBlOiAhMCxcbiAgICAgICAgICAgICAgICByYWRpeFBvaW50OiBcIlwiLFxuICAgICAgICAgICAgICAgIHJhZGl4UG9pbnREZWZpbml0aW9uU3ltYm9sOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgZ3JvdXBTZXBhcmF0b3I6IFwiXCIsXG4gICAgICAgICAgICAgICAga2VlcFN0YXRpYzogbnVsbCxcbiAgICAgICAgICAgICAgICBwb3NpdGlvbkNhcmV0T25UYWI6ICEwLFxuICAgICAgICAgICAgICAgIHRhYlRocm91Z2g6ICExLFxuICAgICAgICAgICAgICAgIHN1cHBvcnRzSW5wdXRUeXBlOiBbIFwidGV4dFwiLCBcInRlbFwiLCBcInBhc3N3b3JkXCIsIFwic2VhcmNoXCIgXSxcbiAgICAgICAgICAgICAgICBpZ25vcmFibGVzOiBbIDgsIDksIDEzLCAxOSwgMjcsIDMzLCAzNCwgMzUsIDM2LCAzNywgMzgsIDM5LCA0MCwgNDUsIDQ2LCA5MywgMTEyLCAxMTMsIDExNCwgMTE1LCAxMTYsIDExNywgMTE4LCAxMTksIDEyMCwgMTIxLCAxMjIsIDEyMywgMCwgMjI5IF0sXG4gICAgICAgICAgICAgICAgaXNDb21wbGV0ZTogbnVsbCxcbiAgICAgICAgICAgICAgICBjYW5DbGVhclBvc2l0aW9uOiAkLm5vb3AsXG4gICAgICAgICAgICAgICAgcHJlVmFsaWRhdGlvbjogbnVsbCxcbiAgICAgICAgICAgICAgICBwb3N0VmFsaWRhdGlvbjogbnVsbCxcbiAgICAgICAgICAgICAgICBzdGF0aWNEZWZpbml0aW9uU3ltYm9sOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgaml0TWFza2luZzogITEsXG4gICAgICAgICAgICAgICAgbnVsbGFibGU6ICEwLFxuICAgICAgICAgICAgICAgIGlucHV0RXZlbnRPbmx5OiAhMSxcbiAgICAgICAgICAgICAgICBub1ZhbHVlUGF0Y2hpbmc6ICExLFxuICAgICAgICAgICAgICAgIHBvc2l0aW9uQ2FyZXRPbkNsaWNrOiBcImx2cFwiLFxuICAgICAgICAgICAgICAgIGNhc2luZzogbnVsbCxcbiAgICAgICAgICAgICAgICBpbnB1dG1vZGU6IFwidmVyYmF0aW1cIixcbiAgICAgICAgICAgICAgICBjb2xvck1hc2s6ICExLFxuICAgICAgICAgICAgICAgIGRpc2FibGVQcmVkaWN0aXZlVGV4dDogITEsXG4gICAgICAgICAgICAgICAgaW1wb3J0RGF0YUF0dHJpYnV0ZXM6ICEwXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHtcbiAgICAgICAgICAgICAgICBcIjlcIjoge1xuICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IFwiWzAtOe+8kS3vvJldXCIsXG4gICAgICAgICAgICAgICAgICAgIGRlZmluaXRpb25TeW1ib2w6IFwiKlwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBhOiB7XG4gICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogXCJbQS1aYS160JAt0Y/QgdGRw4Atw7/CtV1cIixcbiAgICAgICAgICAgICAgICAgICAgZGVmaW5pdGlvblN5bWJvbDogXCIqXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwiKlwiOiB7XG4gICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogXCJbMC0577yRLe+8mUEtWmEtetCQLdGP0IHRkcOALcO/wrVdXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYWxpYXNlczoge30sXG4gICAgICAgICAgICBtYXNrc0NhY2hlOiB7fSxcbiAgICAgICAgICAgIG1hc2s6IGZ1bmN0aW9uKGVsZW1zKSB7XG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gaW1wb3J0QXR0cmlidXRlT3B0aW9ucyhucHQsIG9wdHMsIHVzZXJPcHRpb25zLCBkYXRhQXR0cmlidXRlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghMCA9PT0gb3B0cy5pbXBvcnREYXRhQXR0cmlidXRlcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG9wdGlvbiwgZGF0YW9wdGlvbnMsIG9wdGlvbkRhdGEsIHAsIGltcG9ydE9wdGlvbiA9IGZ1bmN0aW9uKG9wdGlvbiwgb3B0aW9uRGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bGwgIT09IChvcHRpb25EYXRhID0gb3B0aW9uRGF0YSAhPT0gdW5kZWZpbmVkID8gb3B0aW9uRGF0YSA6IG5wdC5nZXRBdHRyaWJ1dGUoZGF0YUF0dHJpYnV0ZSArIFwiLVwiICsgb3B0aW9uKSkgJiYgKFwic3RyaW5nXCIgPT0gdHlwZW9mIG9wdGlvbkRhdGEgJiYgKDAgPT09IG9wdGlvbi5pbmRleE9mKFwib25cIikgPyBvcHRpb25EYXRhID0gd2luZG93W29wdGlvbkRhdGFdIDogXCJmYWxzZVwiID09PSBvcHRpb25EYXRhID8gb3B0aW9uRGF0YSA9ICExIDogXCJ0cnVlXCIgPT09IG9wdGlvbkRhdGEgJiYgKG9wdGlvbkRhdGEgPSAhMCkpLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyT3B0aW9uc1tvcHRpb25dID0gb3B0aW9uRGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBhdHRyT3B0aW9ucyA9IG5wdC5nZXRBdHRyaWJ1dGUoZGF0YUF0dHJpYnV0ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXR0ck9wdGlvbnMgJiYgXCJcIiAhPT0gYXR0ck9wdGlvbnMgJiYgKGF0dHJPcHRpb25zID0gYXR0ck9wdGlvbnMucmVwbGFjZShuZXcgUmVnRXhwKFwiJ1wiLCBcImdcIiksICdcIicpLCBcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFvcHRpb25zID0gSlNPTi5wYXJzZShcIntcIiArIGF0dHJPcHRpb25zICsgXCJ9XCIpKSwgZGF0YW9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25EYXRhID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAocCBpbiBkYXRhb3B0aW9ucykgaWYgKFwiYWxpYXNcIiA9PT0gcC50b0xvd2VyQ2FzZSgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbkRhdGEgPSBkYXRhb3B0aW9uc1twXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaW1wb3J0T3B0aW9uKFwiYWxpYXNcIiwgb3B0aW9uRGF0YSksIHVzZXJPcHRpb25zLmFsaWFzICYmIHJlc29sdmVBbGlhcyh1c2VyT3B0aW9ucy5hbGlhcywgdXNlck9wdGlvbnMsIG9wdHMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChvcHRpb24gaW4gb3B0cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhb3B0aW9ucykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25EYXRhID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHAgaW4gZGF0YW9wdGlvbnMpIGlmIChwLnRvTG93ZXJDYXNlKCkgPT09IG9wdGlvbi50b0xvd2VyQ2FzZSgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25EYXRhID0gZGF0YW9wdGlvbnNbcF07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbXBvcnRPcHRpb24ob3B0aW9uLCBvcHRpb25EYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJC5leHRlbmQoITAsIG9wdHMsIHVzZXJPcHRpb25zKSwgKFwicnRsXCIgPT09IG5wdC5kaXIgfHwgb3B0cy5yaWdodEFsaWduKSAmJiAobnB0LnN0eWxlLnRleHRBbGlnbiA9IFwicmlnaHRcIiksIFxuICAgICAgICAgICAgICAgICAgICAoXCJydGxcIiA9PT0gbnB0LmRpciB8fCBvcHRzLm51bWVyaWNJbnB1dCkgJiYgKG5wdC5kaXIgPSBcImx0clwiLCBucHQucmVtb3ZlQXR0cmlidXRlKFwiZGlyXCIpLCBcbiAgICAgICAgICAgICAgICAgICAgb3B0cy5pc1JUTCA9ICEwKSwgb3B0cztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHJldHVybiBcInN0cmluZ1wiID09IHR5cGVvZiBlbGVtcyAmJiAoZWxlbXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbGVtcykgfHwgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChlbGVtcykpLCBcbiAgICAgICAgICAgICAgICBlbGVtcyA9IGVsZW1zLm5vZGVOYW1lID8gWyBlbGVtcyBdIDogZWxlbXMsICQuZWFjaChlbGVtcywgZnVuY3Rpb24obmR4LCBlbCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2NvcGVkT3B0cyA9ICQuZXh0ZW5kKCEwLCB7fSwgdGhhdC5vcHRzKTtcbiAgICAgICAgICAgICAgICAgICAgaW1wb3J0QXR0cmlidXRlT3B0aW9ucyhlbCwgc2NvcGVkT3B0cywgJC5leHRlbmQoITAsIHt9LCB0aGF0LnVzZXJPcHRpb25zKSwgdGhhdC5kYXRhQXR0cmlidXRlKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1hc2tzZXQgPSBnZW5lcmF0ZU1hc2tTZXQoc2NvcGVkT3B0cywgdGhhdC5ub01hc2tzQ2FjaGUpO1xuICAgICAgICAgICAgICAgICAgICBtYXNrc2V0ICE9PSB1bmRlZmluZWQgJiYgKGVsLmlucHV0bWFzayAhPT0gdW5kZWZpbmVkICYmIChlbC5pbnB1dG1hc2sub3B0cy5hdXRvVW5tYXNrID0gITAsIFxuICAgICAgICAgICAgICAgICAgICBlbC5pbnB1dG1hc2sucmVtb3ZlKCkpLCBlbC5pbnB1dG1hc2sgPSBuZXcgSW5wdXRtYXNrKHVuZGVmaW5lZCwgdW5kZWZpbmVkLCAhMCksIFxuICAgICAgICAgICAgICAgICAgICBlbC5pbnB1dG1hc2sub3B0cyA9IHNjb3BlZE9wdHMsIGVsLmlucHV0bWFzay5ub01hc2tzQ2FjaGUgPSB0aGF0Lm5vTWFza3NDYWNoZSwgZWwuaW5wdXRtYXNrLnVzZXJPcHRpb25zID0gJC5leHRlbmQoITAsIHt9LCB0aGF0LnVzZXJPcHRpb25zKSwgXG4gICAgICAgICAgICAgICAgICAgIGVsLmlucHV0bWFzay5pc1JUTCA9IHNjb3BlZE9wdHMuaXNSVEwgfHwgc2NvcGVkT3B0cy5udW1lcmljSW5wdXQsIGVsLmlucHV0bWFzay5lbCA9IGVsLCBcbiAgICAgICAgICAgICAgICAgICAgZWwuaW5wdXRtYXNrLm1hc2tzZXQgPSBtYXNrc2V0LCAkLmRhdGEoZWwsIFwiX2lucHV0bWFza19vcHRzXCIsIHNjb3BlZE9wdHMpLCBtYXNrU2NvcGUuY2FsbChlbC5pbnB1dG1hc2ssIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbjogXCJtYXNrXCJcbiAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIH0pLCBlbGVtcyAmJiBlbGVtc1swXSA/IGVsZW1zWzBdLmlucHV0bWFzayB8fCB0aGlzIDogdGhpcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvcHRpb246IGZ1bmN0aW9uKG9wdGlvbnMsIG5vcmVtYXNrKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwic3RyaW5nXCIgPT0gdHlwZW9mIG9wdGlvbnMgPyB0aGlzLm9wdHNbb3B0aW9uc10gOiBcIm9iamVjdFwiID09PSAodm9pZCAwID09PSBvcHRpb25zID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Yob3B0aW9ucykpID8gKCQuZXh0ZW5kKHRoaXMudXNlck9wdGlvbnMsIG9wdGlvbnMpLCBcbiAgICAgICAgICAgICAgICB0aGlzLmVsICYmICEwICE9PSBub3JlbWFzayAmJiB0aGlzLm1hc2sodGhpcy5lbCksIHRoaXMpIDogdm9pZCAwO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHVubWFza2VkdmFsdWU6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFza3NldCA9IHRoaXMubWFza3NldCB8fCBnZW5lcmF0ZU1hc2tTZXQodGhpcy5vcHRzLCB0aGlzLm5vTWFza3NDYWNoZSksIFxuICAgICAgICAgICAgICAgIG1hc2tTY29wZS5jYWxsKHRoaXMsIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBcInVubWFza2VkdmFsdWVcIixcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWFza1Njb3BlLmNhbGwodGhpcywge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb246IFwicmVtb3ZlXCJcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRlbXB0eW1hc2s6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm1hc2tzZXQgPSB0aGlzLm1hc2tzZXQgfHwgZ2VuZXJhdGVNYXNrU2V0KHRoaXMub3B0cywgdGhpcy5ub01hc2tzQ2FjaGUpLCBcbiAgICAgICAgICAgICAgICBtYXNrU2NvcGUuY2FsbCh0aGlzLCB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogXCJnZXRlbXB0eW1hc2tcIlxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGhhc01hc2tlZFZhbHVlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gIXRoaXMub3B0cy5hdXRvVW5tYXNrO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGlzQ29tcGxldGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm1hc2tzZXQgPSB0aGlzLm1hc2tzZXQgfHwgZ2VuZXJhdGVNYXNrU2V0KHRoaXMub3B0cywgdGhpcy5ub01hc2tzQ2FjaGUpLCBcbiAgICAgICAgICAgICAgICBtYXNrU2NvcGUuY2FsbCh0aGlzLCB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogXCJpc0NvbXBsZXRlXCJcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRtZXRhZGF0YTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFza3NldCA9IHRoaXMubWFza3NldCB8fCBnZW5lcmF0ZU1hc2tTZXQodGhpcy5vcHRzLCB0aGlzLm5vTWFza3NDYWNoZSksIFxuICAgICAgICAgICAgICAgIG1hc2tTY29wZS5jYWxsKHRoaXMsIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBcImdldG1ldGFkYXRhXCJcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpc1ZhbGlkOiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm1hc2tzZXQgPSB0aGlzLm1hc2tzZXQgfHwgZ2VuZXJhdGVNYXNrU2V0KHRoaXMub3B0cywgdGhpcy5ub01hc2tzQ2FjaGUpLCBcbiAgICAgICAgICAgICAgICBtYXNrU2NvcGUuY2FsbCh0aGlzLCB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogXCJpc1ZhbGlkXCIsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZvcm1hdDogZnVuY3Rpb24odmFsdWUsIG1ldGFkYXRhKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFza3NldCA9IHRoaXMubWFza3NldCB8fCBnZW5lcmF0ZU1hc2tTZXQodGhpcy5vcHRzLCB0aGlzLm5vTWFza3NDYWNoZSksIFxuICAgICAgICAgICAgICAgIG1hc2tTY29wZS5jYWxsKHRoaXMsIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBcImZvcm1hdFwiLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgICAgICAgICAgIG1ldGFkYXRhOiBtZXRhZGF0YVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFuYWx5c2VNYXNrOiBmdW5jdGlvbihtYXNrLCByZWdleE1hc2ssIG9wdHMpIHtcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBNYXNrVG9rZW4oaXNHcm91cCwgaXNPcHRpb25hbCwgaXNRdWFudGlmaWVyLCBpc0FsdGVybmF0b3IpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXRjaGVzID0gW10sIHRoaXMub3Blbkdyb3VwID0gaXNHcm91cCB8fCAhMSwgdGhpcy5hbHRlcm5hdG9yR3JvdXAgPSAhMSwgdGhpcy5pc0dyb3VwID0gaXNHcm91cCB8fCAhMSwgXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXNPcHRpb25hbCA9IGlzT3B0aW9uYWwgfHwgITEsIHRoaXMuaXNRdWFudGlmaWVyID0gaXNRdWFudGlmaWVyIHx8ICExLCB0aGlzLmlzQWx0ZXJuYXRvciA9IGlzQWx0ZXJuYXRvciB8fCAhMSwgXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucXVhbnRpZmllciA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heDogMVxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBpbnNlcnRUZXN0RGVmaW5pdGlvbihtdG9rZW4sIGVsZW1lbnQsIHBvc2l0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uID0gcG9zaXRpb24gIT09IHVuZGVmaW5lZCA/IHBvc2l0aW9uIDogbXRva2VuLm1hdGNoZXMubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcHJldk1hdGNoID0gbXRva2VuLm1hdGNoZXNbcG9zaXRpb24gLSAxXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlZ2V4TWFzaykgMCA9PT0gZWxlbWVudC5pbmRleE9mKFwiW1wiKSB8fCBlc2NhcGVkICYmIC9cXFxcZHxcXFxcc3xcXFxcd10vaS50ZXN0KGVsZW1lbnQpIHx8IFwiLlwiID09PSBlbGVtZW50ID8gbXRva2VuLm1hdGNoZXMuc3BsaWNlKHBvc2l0aW9uKyssIDAsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZuOiBuZXcgUmVnRXhwKGVsZW1lbnQsIG9wdHMuY2FzaW5nID8gXCJpXCIgOiBcIlwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbmFsaXR5OiBtdG9rZW4uaXNPcHRpb25hbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0Jsb2NrTWFya2VyOiBwcmV2TWF0Y2ggPT09IHVuZGVmaW5lZCB8fCBwcmV2TWF0Y2guZGVmICE9PSBlbGVtZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzaW5nOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGVmOiBlbGVtZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hdGl2ZURlZjogZWxlbWVudFxuICAgICAgICAgICAgICAgICAgICB9KSA6IChlc2NhcGVkICYmIChlbGVtZW50ID0gZWxlbWVudFtlbGVtZW50Lmxlbmd0aCAtIDFdKSwgJC5lYWNoKGVsZW1lbnQuc3BsaXQoXCJcIiksIGZ1bmN0aW9uKG5keCwgbG1udCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJldk1hdGNoID0gbXRva2VuLm1hdGNoZXNbcG9zaXRpb24gLSAxXSwgbXRva2VuLm1hdGNoZXMuc3BsaWNlKHBvc2l0aW9uKyssIDAsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25hbGl0eTogbXRva2VuLmlzT3B0aW9uYWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3QmxvY2tNYXJrZXI6IHByZXZNYXRjaCA9PT0gdW5kZWZpbmVkIHx8IHByZXZNYXRjaC5kZWYgIT09IGxtbnQgJiYgbnVsbCAhPT0gcHJldk1hdGNoLmZuLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2luZzogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWY6IG9wdHMuc3RhdGljRGVmaW5pdGlvblN5bWJvbCB8fCBsbW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBvcHRzLnN0YXRpY0RlZmluaXRpb25TeW1ib2wgIT09IHVuZGVmaW5lZCA/IGxtbnQgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF0aXZlRGVmOiBsbW50XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSkpLCBlc2NhcGVkID0gITE7IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1hc2tkZWYgPSAob3B0cy5kZWZpbml0aW9ucyA/IG9wdHMuZGVmaW5pdGlvbnNbZWxlbWVudF0gOiB1bmRlZmluZWQpIHx8IElucHV0bWFzay5wcm90b3R5cGUuZGVmaW5pdGlvbnNbZWxlbWVudF07XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXNrZGVmICYmICFlc2NhcGVkID8gbXRva2VuLm1hdGNoZXMuc3BsaWNlKHBvc2l0aW9uKyssIDAsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbjogbWFza2RlZi52YWxpZGF0b3IgPyBcInN0cmluZ1wiID09IHR5cGVvZiBtYXNrZGVmLnZhbGlkYXRvciA/IG5ldyBSZWdFeHAobWFza2RlZi52YWxpZGF0b3IsIG9wdHMuY2FzaW5nID8gXCJpXCIgOiBcIlwiKSA6IG5ldyBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50ZXN0ID0gbWFza2RlZi52YWxpZGF0b3I7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSgpIDogbmV3IFJlZ0V4cChcIi5cIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uYWxpdHk6IG10b2tlbi5pc09wdGlvbmFsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0Jsb2NrTWFya2VyOiBwcmV2TWF0Y2ggPT09IHVuZGVmaW5lZCB8fCBwcmV2TWF0Y2guZGVmICE9PSAobWFza2RlZi5kZWZpbml0aW9uU3ltYm9sIHx8IGVsZW1lbnQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2luZzogbWFza2RlZi5jYXNpbmcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmOiBtYXNrZGVmLmRlZmluaXRpb25TeW1ib2wgfHwgZWxlbWVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogbWFza2RlZi5wbGFjZWhvbGRlcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYXRpdmVEZWY6IGVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pIDogKG10b2tlbi5tYXRjaGVzLnNwbGljZShwb3NpdGlvbisrLCAwLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm46IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uYWxpdHk6IG10b2tlbi5pc09wdGlvbmFsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0Jsb2NrTWFya2VyOiBwcmV2TWF0Y2ggPT09IHVuZGVmaW5lZCB8fCBwcmV2TWF0Y2guZGVmICE9PSBlbGVtZW50ICYmIG51bGwgIT09IHByZXZNYXRjaC5mbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNpbmc6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmOiBvcHRzLnN0YXRpY0RlZmluaXRpb25TeW1ib2wgfHwgZWxlbWVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogb3B0cy5zdGF0aWNEZWZpbml0aW9uU3ltYm9sICE9PSB1bmRlZmluZWQgPyBlbGVtZW50IDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hdGl2ZURlZjogZWxlbWVudFxuICAgICAgICAgICAgICAgICAgICAgICAgfSksIGVzY2FwZWQgPSAhMSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gdmVyaWZ5R3JvdXBNYXJrZXIobWFza1Rva2VuKSB7XG4gICAgICAgICAgICAgICAgICAgIG1hc2tUb2tlbiAmJiBtYXNrVG9rZW4ubWF0Y2hlcyAmJiAkLmVhY2gobWFza1Rva2VuLm1hdGNoZXMsIGZ1bmN0aW9uKG5keCwgdG9rZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuZXh0VG9rZW4gPSBtYXNrVG9rZW4ubWF0Y2hlc1tuZHggKyAxXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIChuZXh0VG9rZW4gPT09IHVuZGVmaW5lZCB8fCBuZXh0VG9rZW4ubWF0Y2hlcyA9PT0gdW5kZWZpbmVkIHx8ICExID09PSBuZXh0VG9rZW4uaXNRdWFudGlmaWVyKSAmJiB0b2tlbiAmJiB0b2tlbi5pc0dyb3VwICYmICh0b2tlbi5pc0dyb3VwID0gITEsIFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVnZXhNYXNrIHx8IChpbnNlcnRUZXN0RGVmaW5pdGlvbih0b2tlbiwgb3B0cy5ncm91cG1hcmtlclswXSwgMCksICEwICE9PSB0b2tlbi5vcGVuR3JvdXAgJiYgaW5zZXJ0VGVzdERlZmluaXRpb24odG9rZW4sIG9wdHMuZ3JvdXBtYXJrZXJbMV0pKSksIFxuICAgICAgICAgICAgICAgICAgICAgICAgdmVyaWZ5R3JvdXBNYXJrZXIodG9rZW4pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gZGVmYXVsdENhc2UoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcGVuZW5pbmdzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50T3BlbmluZ1Rva2VuID0gb3BlbmVuaW5nc1tvcGVuZW5pbmdzLmxlbmd0aCAtIDFdLCBpbnNlcnRUZXN0RGVmaW5pdGlvbihjdXJyZW50T3BlbmluZ1Rva2VuLCBtKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50T3BlbmluZ1Rva2VuLmlzQWx0ZXJuYXRvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsdGVybmF0b3IgPSBvcGVuZW5pbmdzLnBvcCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIG1uZHggPSAwOyBtbmR4IDwgYWx0ZXJuYXRvci5tYXRjaGVzLmxlbmd0aDsgbW5keCsrKSBhbHRlcm5hdG9yLm1hdGNoZXNbbW5keF0uaXNHcm91cCA9ICExO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wZW5lbmluZ3MubGVuZ3RoID4gMCA/IChjdXJyZW50T3BlbmluZ1Rva2VuID0gb3BlbmVuaW5nc1tvcGVuZW5pbmdzLmxlbmd0aCAtIDFdKS5tYXRjaGVzLnB1c2goYWx0ZXJuYXRvcikgOiBjdXJyZW50VG9rZW4ubWF0Y2hlcy5wdXNoKGFsdGVybmF0b3IpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaW5zZXJ0VGVzdERlZmluaXRpb24oY3VycmVudFRva2VuLCBtKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gcmV2ZXJzZVRva2VucyhtYXNrVG9rZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgbWFza1Rva2VuLm1hdGNoZXMgPSBtYXNrVG9rZW4ubWF0Y2hlcy5yZXZlcnNlKCk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIG1hdGNoIGluIG1hc2tUb2tlbi5tYXRjaGVzKSBpZiAobWFza1Rva2VuLm1hdGNoZXMuaGFzT3duUHJvcGVydHkobWF0Y2gpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW50TWF0Y2ggPSBwYXJzZUludChtYXRjaCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobWFza1Rva2VuLm1hdGNoZXNbbWF0Y2hdLmlzUXVhbnRpZmllciAmJiBtYXNrVG9rZW4ubWF0Y2hlc1tpbnRNYXRjaCArIDFdICYmIG1hc2tUb2tlbi5tYXRjaGVzW2ludE1hdGNoICsgMV0uaXNHcm91cCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBxdCA9IG1hc2tUb2tlbi5tYXRjaGVzW21hdGNoXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXNrVG9rZW4ubWF0Y2hlcy5zcGxpY2UobWF0Y2gsIDEpLCBtYXNrVG9rZW4ubWF0Y2hlcy5zcGxpY2UoaW50TWF0Y2ggKyAxLCAwLCBxdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXNrVG9rZW4ubWF0Y2hlc1ttYXRjaF0ubWF0Y2hlcyAhPT0gdW5kZWZpbmVkID8gbWFza1Rva2VuLm1hdGNoZXNbbWF0Y2hdID0gcmV2ZXJzZVRva2VucyhtYXNrVG9rZW4ubWF0Y2hlc1ttYXRjaF0pIDogbWFza1Rva2VuLm1hdGNoZXNbbWF0Y2hdID0gZnVuY3Rpb24oc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc3QgPT09IG9wdHMub3B0aW9uYWxtYXJrZXJbMF0gPyBzdCA9IG9wdHMub3B0aW9uYWxtYXJrZXJbMV0gOiBzdCA9PT0gb3B0cy5vcHRpb25hbG1hcmtlclsxXSA/IHN0ID0gb3B0cy5vcHRpb25hbG1hcmtlclswXSA6IHN0ID09PSBvcHRzLmdyb3VwbWFya2VyWzBdID8gc3QgPSBvcHRzLmdyb3VwbWFya2VyWzFdIDogc3QgPT09IG9wdHMuZ3JvdXBtYXJrZXJbMV0gJiYgKHN0ID0gb3B0cy5ncm91cG1hcmtlclswXSksIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0O1xuICAgICAgICAgICAgICAgICAgICAgICAgfShtYXNrVG9rZW4ubWF0Y2hlc1ttYXRjaF0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBtYXNrVG9rZW47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBtYXRjaCwgbSwgb3BlbmluZ1Rva2VuLCBjdXJyZW50T3BlbmluZ1Rva2VuLCBhbHRlcm5hdG9yLCBsYXN0TWF0Y2gsIGdyb3VwVG9rZW4sIHRva2VuaXplciA9IC8oPzpbPyorXXxcXHtbMC05XFwrXFwqXSsoPzosWzAtOVxcK1xcKl0qKT9cXH0pfFteLj8qK14ke1tdKCl8XFxcXF0rfC4vZywgcmVnZXhUb2tlbml6ZXIgPSAvXFxbXFxeP10/KD86W15cXFxcXFxdXSt8XFxcXFtcXFNcXHNdPykqXT98XFxcXCg/OjAoPzpbMC0zXVswLTddezAsMn18WzQtN11bMC03XT8pP3xbMS05XVswLTldKnx4WzAtOUEtRmEtZl17Mn18dVswLTlBLUZhLWZdezR9fGNbQS1aYS16XXxbXFxTXFxzXT8pfFxcKCg/OlxcP1s6PSFdPyk/fCg/Ols/KitdfFxce1swLTldKyg/OixbMC05XSopP1xcfSlcXD8/fFteLj8qK14ke1soKXxcXFxcXSt8Li9nLCBlc2NhcGVkID0gITEsIGN1cnJlbnRUb2tlbiA9IG5ldyBNYXNrVG9rZW4oKSwgb3BlbmVuaW5ncyA9IFtdLCBtYXNrVG9rZW5zID0gW107XG4gICAgICAgICAgICAgICAgZm9yIChyZWdleE1hc2sgJiYgKG9wdHMub3B0aW9uYWxtYXJrZXJbMF0gPSB1bmRlZmluZWQsIG9wdHMub3B0aW9uYWxtYXJrZXJbMV0gPSB1bmRlZmluZWQpOyBtYXRjaCA9IHJlZ2V4TWFzayA/IHJlZ2V4VG9rZW5pemVyLmV4ZWMobWFzaykgOiB0b2tlbml6ZXIuZXhlYyhtYXNrKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChtID0gbWF0Y2hbMF0sIHJlZ2V4TWFzaykgc3dpdGNoIChtLmNoYXJBdCgwKSkge1xuICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCI/XCI6XG4gICAgICAgICAgICAgICAgICAgICAgICBtID0gXCJ7MCwxfVwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiK1wiOlxuICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCIqXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICBtID0gXCJ7XCIgKyBtICsgXCJ9XCI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGVzY2FwZWQpIGRlZmF1bHRDYXNlKCk7IGVsc2Ugc3dpdGNoIChtLmNoYXJBdCgwKSkge1xuICAgICAgICAgICAgICAgICAgICAgIGNhc2Ugb3B0cy5lc2NhcGVDaGFyOlxuICAgICAgICAgICAgICAgICAgICAgICAgZXNjYXBlZCA9ICEwLCByZWdleE1hc2sgJiYgZGVmYXVsdENhc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBvcHRzLm9wdGlvbmFsbWFya2VyWzFdOlxuICAgICAgICAgICAgICAgICAgICAgIGNhc2Ugb3B0cy5ncm91cG1hcmtlclsxXTpcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvcGVuaW5nVG9rZW4gPSBvcGVuZW5pbmdzLnBvcCgpLCBvcGVuaW5nVG9rZW4ub3Blbkdyb3VwID0gITEsIG9wZW5pbmdUb2tlbiAhPT0gdW5kZWZpbmVkKSBpZiAob3BlbmVuaW5ncy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChjdXJyZW50T3BlbmluZ1Rva2VuID0gb3BlbmVuaW5nc1tvcGVuZW5pbmdzLmxlbmd0aCAtIDFdKS5tYXRjaGVzLnB1c2gob3BlbmluZ1Rva2VuKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudE9wZW5pbmdUb2tlbi5pc0FsdGVybmF0b3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0ZXJuYXRvciA9IG9wZW5lbmluZ3MucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIG1uZHggPSAwOyBtbmR4IDwgYWx0ZXJuYXRvci5tYXRjaGVzLmxlbmd0aDsgbW5keCsrKSBhbHRlcm5hdG9yLm1hdGNoZXNbbW5keF0uaXNHcm91cCA9ICExLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0ZXJuYXRvci5tYXRjaGVzW21uZHhdLmFsdGVybmF0b3JHcm91cCA9ICExO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGVuZW5pbmdzLmxlbmd0aCA+IDAgPyAoY3VycmVudE9wZW5pbmdUb2tlbiA9IG9wZW5lbmluZ3Nbb3BlbmVuaW5ncy5sZW5ndGggLSAxXSkubWF0Y2hlcy5wdXNoKGFsdGVybmF0b3IpIDogY3VycmVudFRva2VuLm1hdGNoZXMucHVzaChhbHRlcm5hdG9yKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgY3VycmVudFRva2VuLm1hdGNoZXMucHVzaChvcGVuaW5nVG9rZW4pOyBlbHNlIGRlZmF1bHRDYXNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgICAgIGNhc2Ugb3B0cy5vcHRpb25hbG1hcmtlclswXTpcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wZW5lbmluZ3MucHVzaChuZXcgTWFza1Rva2VuKCExLCAhMCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIG9wdHMuZ3JvdXBtYXJrZXJbMF06XG4gICAgICAgICAgICAgICAgICAgICAgICBvcGVuZW5pbmdzLnB1c2gobmV3IE1hc2tUb2tlbighMCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIG9wdHMucXVhbnRpZmllcm1hcmtlclswXTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBxdWFudGlmaWVyID0gbmV3IE1hc2tUb2tlbighMSwgITEsICEwKSwgbXEgPSAobSA9IG0ucmVwbGFjZSgvW3t9XS9nLCBcIlwiKSkuc3BsaXQoXCIsXCIpLCBtcTAgPSBpc05hTihtcVswXSkgPyBtcVswXSA6IHBhcnNlSW50KG1xWzBdKSwgbXExID0gMSA9PT0gbXEubGVuZ3RoID8gbXEwIDogaXNOYU4obXFbMV0pID8gbXFbMV0gOiBwYXJzZUludChtcVsxXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoXCIqXCIgIT09IG1xMSAmJiBcIitcIiAhPT0gbXExIHx8IChtcTAgPSBcIipcIiA9PT0gbXExID8gMCA6IDEpLCBxdWFudGlmaWVyLnF1YW50aWZpZXIgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluOiBtcTAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4OiBtcTFcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIG9wZW5lbmluZ3MubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtYXRjaGVzID0gb3BlbmVuaW5nc1tvcGVuZW5pbmdzLmxlbmd0aCAtIDFdLm1hdGNoZXM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKG1hdGNoID0gbWF0Y2hlcy5wb3AoKSkuaXNHcm91cCB8fCAoKGdyb3VwVG9rZW4gPSBuZXcgTWFza1Rva2VuKCEwKSkubWF0Y2hlcy5wdXNoKG1hdGNoKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2ggPSBncm91cFRva2VuKSwgbWF0Y2hlcy5wdXNoKG1hdGNoKSwgbWF0Y2hlcy5wdXNoKHF1YW50aWZpZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIChtYXRjaCA9IGN1cnJlbnRUb2tlbi5tYXRjaGVzLnBvcCgpKS5pc0dyb3VwIHx8IChyZWdleE1hc2sgJiYgbnVsbCA9PT0gbWF0Y2guZm4gJiYgXCIuXCIgPT09IG1hdGNoLmRlZiAmJiAobWF0Y2guZm4gPSBuZXcgUmVnRXhwKG1hdGNoLmRlZiwgb3B0cy5jYXNpbmcgPyBcImlcIiA6IFwiXCIpKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAoZ3JvdXBUb2tlbiA9IG5ldyBNYXNrVG9rZW4oITApKS5tYXRjaGVzLnB1c2gobWF0Y2gpLCBtYXRjaCA9IGdyb3VwVG9rZW4pLCBjdXJyZW50VG9rZW4ubWF0Y2hlcy5wdXNoKG1hdGNoKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50VG9rZW4ubWF0Y2hlcy5wdXNoKHF1YW50aWZpZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIG9wdHMuYWx0ZXJuYXRvcm1hcmtlcjpcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvcGVuZW5pbmdzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3ViVG9rZW4gPSAoY3VycmVudE9wZW5pbmdUb2tlbiA9IG9wZW5lbmluZ3Nbb3BlbmVuaW5ncy5sZW5ndGggLSAxXSkubWF0Y2hlc1tjdXJyZW50T3BlbmluZ1Rva2VuLm1hdGNoZXMubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdE1hdGNoID0gY3VycmVudE9wZW5pbmdUb2tlbi5vcGVuR3JvdXAgJiYgKHN1YlRva2VuLm1hdGNoZXMgPT09IHVuZGVmaW5lZCB8fCAhMSA9PT0gc3ViVG9rZW4uaXNHcm91cCAmJiAhMSA9PT0gc3ViVG9rZW4uaXNBbHRlcm5hdG9yKSA/IG9wZW5lbmluZ3MucG9wKCkgOiBjdXJyZW50T3BlbmluZ1Rva2VuLm1hdGNoZXMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgbGFzdE1hdGNoID0gY3VycmVudFRva2VuLm1hdGNoZXMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobGFzdE1hdGNoLmlzQWx0ZXJuYXRvcikgb3BlbmVuaW5ncy5wdXNoKGxhc3RNYXRjaCk7IGVsc2UgaWYgKGxhc3RNYXRjaC5hbHRlcm5hdG9yR3JvdXAgPyAoYWx0ZXJuYXRvciA9IG9wZW5lbmluZ3MucG9wKCksIFxuICAgICAgICAgICAgICAgICAgICAgICAgbGFzdE1hdGNoLmFsdGVybmF0b3JHcm91cCA9ICExKSA6IGFsdGVybmF0b3IgPSBuZXcgTWFza1Rva2VuKCExLCAhMSwgITEsICEwKSwgYWx0ZXJuYXRvci5tYXRjaGVzLnB1c2gobGFzdE1hdGNoKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICBvcGVuZW5pbmdzLnB1c2goYWx0ZXJuYXRvciksIGxhc3RNYXRjaC5vcGVuR3JvdXApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0TWF0Y2gub3Blbkdyb3VwID0gITE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFsdGVybmF0b3JHcm91cCA9IG5ldyBNYXNrVG9rZW4oITApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsdGVybmF0b3JHcm91cC5hbHRlcm5hdG9yR3JvdXAgPSAhMCwgb3BlbmVuaW5ncy5wdXNoKGFsdGVybmF0b3JHcm91cCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0Q2FzZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZvciAoO29wZW5lbmluZ3MubGVuZ3RoID4gMDsgKSBvcGVuaW5nVG9rZW4gPSBvcGVuZW5pbmdzLnBvcCgpLCBjdXJyZW50VG9rZW4ubWF0Y2hlcy5wdXNoKG9wZW5pbmdUb2tlbik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRUb2tlbi5tYXRjaGVzLmxlbmd0aCA+IDAgJiYgKHZlcmlmeUdyb3VwTWFya2VyKGN1cnJlbnRUb2tlbiksIG1hc2tUb2tlbnMucHVzaChjdXJyZW50VG9rZW4pKSwgXG4gICAgICAgICAgICAgICAgKG9wdHMubnVtZXJpY0lucHV0IHx8IG9wdHMuaXNSVEwpICYmIHJldmVyc2VUb2tlbnMobWFza1Rva2Vuc1swXSksIG1hc2tUb2tlbnM7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIElucHV0bWFzay5leHRlbmREZWZhdWx0cyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICQuZXh0ZW5kKCEwLCBJbnB1dG1hc2sucHJvdG90eXBlLmRlZmF1bHRzLCBvcHRpb25zKTtcbiAgICAgICAgfSwgSW5wdXRtYXNrLmV4dGVuZERlZmluaXRpb25zID0gZnVuY3Rpb24oZGVmaW5pdGlvbikge1xuICAgICAgICAgICAgJC5leHRlbmQoITAsIElucHV0bWFzay5wcm90b3R5cGUuZGVmaW5pdGlvbnMsIGRlZmluaXRpb24pO1xuICAgICAgICB9LCBJbnB1dG1hc2suZXh0ZW5kQWxpYXNlcyA9IGZ1bmN0aW9uKGFsaWFzKSB7XG4gICAgICAgICAgICAkLmV4dGVuZCghMCwgSW5wdXRtYXNrLnByb3RvdHlwZS5hbGlhc2VzLCBhbGlhcyk7XG4gICAgICAgIH0sIElucHV0bWFzay5mb3JtYXQgPSBmdW5jdGlvbih2YWx1ZSwgb3B0aW9ucywgbWV0YWRhdGEpIHtcbiAgICAgICAgICAgIHJldHVybiBJbnB1dG1hc2sob3B0aW9ucykuZm9ybWF0KHZhbHVlLCBtZXRhZGF0YSk7XG4gICAgICAgIH0sIElucHV0bWFzay51bm1hc2sgPSBmdW5jdGlvbih2YWx1ZSwgb3B0aW9ucykge1xuICAgICAgICAgICAgcmV0dXJuIElucHV0bWFzayhvcHRpb25zKS51bm1hc2tlZHZhbHVlKHZhbHVlKTtcbiAgICAgICAgfSwgSW5wdXRtYXNrLmlzVmFsaWQgPSBmdW5jdGlvbih2YWx1ZSwgb3B0aW9ucykge1xuICAgICAgICAgICAgcmV0dXJuIElucHV0bWFzayhvcHRpb25zKS5pc1ZhbGlkKHZhbHVlKTtcbiAgICAgICAgfSwgSW5wdXRtYXNrLnJlbW92ZSA9IGZ1bmN0aW9uKGVsZW1zKSB7XG4gICAgICAgICAgICAkLmVhY2goZWxlbXMsIGZ1bmN0aW9uKG5keCwgZWwpIHtcbiAgICAgICAgICAgICAgICBlbC5pbnB1dG1hc2sgJiYgZWwuaW5wdXRtYXNrLnJlbW92ZSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIElucHV0bWFzay5lc2NhcGVSZWdleCA9IGZ1bmN0aW9uKHN0cikge1xuICAgICAgICAgICAgdmFyIHNwZWNpYWxzID0gWyBcIi9cIiwgXCIuXCIsIFwiKlwiLCBcIitcIiwgXCI/XCIsIFwifFwiLCBcIihcIiwgXCIpXCIsIFwiW1wiLCBcIl1cIiwgXCJ7XCIsIFwifVwiLCBcIlxcXFxcIiwgXCIkXCIsIFwiXlwiIF07XG4gICAgICAgICAgICByZXR1cm4gc3RyLnJlcGxhY2UobmV3IFJlZ0V4cChcIihcXFxcXCIgKyBzcGVjaWFscy5qb2luKFwifFxcXFxcIikgKyBcIilcIiwgXCJnaW1cIiksIFwiXFxcXCQxXCIpO1xuICAgICAgICB9LCBJbnB1dG1hc2sua2V5Q29kZSA9IHtcbiAgICAgICAgICAgIEJBQ0tTUEFDRTogOCxcbiAgICAgICAgICAgIEJBQ0tTUEFDRV9TQUZBUkk6IDEyNyxcbiAgICAgICAgICAgIERFTEVURTogNDYsXG4gICAgICAgICAgICBET1dOOiA0MCxcbiAgICAgICAgICAgIEVORDogMzUsXG4gICAgICAgICAgICBFTlRFUjogMTMsXG4gICAgICAgICAgICBFU0NBUEU6IDI3LFxuICAgICAgICAgICAgSE9NRTogMzYsXG4gICAgICAgICAgICBJTlNFUlQ6IDQ1LFxuICAgICAgICAgICAgTEVGVDogMzcsXG4gICAgICAgICAgICBQQUdFX0RPV046IDM0LFxuICAgICAgICAgICAgUEFHRV9VUDogMzMsXG4gICAgICAgICAgICBSSUdIVDogMzksXG4gICAgICAgICAgICBTUEFDRTogMzIsXG4gICAgICAgICAgICBUQUI6IDksXG4gICAgICAgICAgICBVUDogMzgsXG4gICAgICAgICAgICBYOiA4OCxcbiAgICAgICAgICAgIENPTlRST0w6IDE3XG4gICAgICAgIH0sIElucHV0bWFzaztcbiAgICB9KTtcbn0sIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuICAgIG1vZHVsZS5leHBvcnRzID0galF1ZXJ5O1xufSwgZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICAgICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IG9ialxuICAgICAgICB9O1xuICAgIH1cbiAgICBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKDkpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyKSwgX193ZWJwYWNrX3JlcXVpcmVfXygxMyksIFxuICAgIF9fd2VicGFja19yZXF1aXJlX18oMTQpO1xuICAgIHZhciBfaW5wdXRtYXNrMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX193ZWJwYWNrX3JlcXVpcmVfXygxKSksIF9pbnB1dG1hc2s0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfX3dlYnBhY2tfcmVxdWlyZV9fKDApKSwgX2pxdWVyeTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9fd2VicGFja19yZXF1aXJlX18oMikpO1xuICAgIF9pbnB1dG1hc2s0LmRlZmF1bHQgPT09IF9qcXVlcnkyLmRlZmF1bHQgJiYgX193ZWJwYWNrX3JlcXVpcmVfXygxNSksIHdpbmRvdy5JbnB1dG1hc2sgPSBfaW5wdXRtYXNrMi5kZWZhdWx0O1xufSwgZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG4gICAgdmFyIGNvbnRlbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpO1xuICAgIFwic3RyaW5nXCIgPT0gdHlwZW9mIGNvbnRlbnQgJiYgKGNvbnRlbnQgPSBbIFsgbW9kdWxlLmksIGNvbnRlbnQsIFwiXCIgXSBdKTtcbiAgICB2YXIgb3B0aW9ucyA9IHtcbiAgICAgICAgaG1yOiAhMFxuICAgIH07XG4gICAgb3B0aW9ucy50cmFuc2Zvcm0gPSB2b2lkIDA7XG4gICAgX193ZWJwYWNrX3JlcXVpcmVfXyg3KShjb250ZW50LCBvcHRpb25zKTtcbiAgICBjb250ZW50LmxvY2FscyAmJiAobW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscyk7XG59LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcbiAgICAobW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDYpKHZvaWQgMCkpLnB1c2goWyBtb2R1bGUuaSwgXCJtYXJrLmltLWNhcmV0IHtcXG4gICAgLXdlYmtpdC1hbmltYXRpb246IDFzIGJsaW5rIHN0ZXAtZW5kIGluZmluaXRlICFpbXBvcnRhbnQ7XFxuICAgICAgICAgICAgYW5pbWF0aW9uOiAxcyBibGluayBzdGVwLWVuZCBpbmZpbml0ZSAhaW1wb3J0YW50O1xcbn1cXG5cXG5tYXJrLmltLWNhcmV0LXNlbGVjdCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgLjI1KTtcXG59XFxuXFxuQC13ZWJraXQta2V5ZnJhbWVzIGJsaW5rIHtcXG4gICAgZnJvbSwgdG8ge1xcbiAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiBibGFjaztcXG4gICAgfVxcbiAgICA1MCUge1xcbiAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gICAgfVxcbn1cXG5cXG5Aa2V5ZnJhbWVzIGJsaW5rIHtcXG4gICAgZnJvbSwgdG8ge1xcbiAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiBibGFjaztcXG4gICAgfVxcbiAgICA1MCUge1xcbiAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gICAgfVxcbn1cXG5cXG5zcGFuLmltLXN0YXRpYyB7XFxuICAgIGNvbG9yOiBncmV5O1xcbn1cXG5cXG5kaXYuaW0tY29sb3JtYXNrIHtcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgICBib3JkZXItc3R5bGU6IGluc2V0O1xcbiAgICBib3JkZXItd2lkdGg6IDJweDtcXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XFxuICAgICAgIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xcbiAgICAgICAgICAgIGFwcGVhcmFuY2U6IHRleHRmaWVsZDtcXG59XFxuXFxuZGl2LmltLWNvbG9ybWFzayA+IGlucHV0IHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcXG4gICAgY2FyZXQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IGNhcmV0O1xcbiAgICAgICAtbW96LWFwcGVhcmFuY2U6IGNhcmV0O1xcbiAgICAgICAgICAgIGFwcGVhcmFuY2U6IGNhcmV0O1xcbiAgICBib3JkZXItc3R5bGU6IG5vbmU7XFxuICAgIGxlZnQ6IDA7IC8qY2FsY3VsYXRlZCovXFxufVxcblxcbmRpdi5pbS1jb2xvcm1hc2sgPiBpbnB1dDpmb2N1cyB7XFxuICAgIG91dGxpbmU6IG5vbmU7XFxufVxcblxcbmRpdi5pbS1jb2xvcm1hc2sgPiBpbnB1dDo6LW1vei1zZWxlY3Rpb257XFxuICAgIGJhY2tncm91bmQ6IG5vbmU7XFxufVxcblxcbmRpdi5pbS1jb2xvcm1hc2sgPiBpbnB1dDo6c2VsZWN0aW9ue1xcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xcbn1cXG5kaXYuaW0tY29sb3JtYXNrID4gaW5wdXQ6Oi1tb3otc2VsZWN0aW9ue1xcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xcbn1cXG5cXG5kaXYuaW0tY29sb3JtYXNrID4gZGl2IHtcXG4gICAgY29sb3I6IGJsYWNrO1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAgIHdpZHRoOiAxMDBweDsgLypjYWxjdWxhdGVkKi9cXG59XCIsIFwiXCIgXSk7XG59LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcbiAgICBmdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICAgICAgICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgXCJcIiwgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gICAgICAgIGlmICghY3NzTWFwcGluZykgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIGlmICh1c2VTb3VyY2VNYXAgJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBidG9hKSB7XG4gICAgICAgICAgICB2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKSwgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24oc291cmNlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIiArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArIFwiICovXCI7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBbIGNvbnRlbnQgXS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFsgc291cmNlTWFwcGluZyBdKS5qb2luKFwiXFxuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbIGNvbnRlbnQgXS5qb2luKFwiXFxuXCIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybiBcIi8qIyBcIiArIChcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSkgKyBcIiAqL1wiO1xuICAgIH1cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xuICAgICAgICB2YXIgbGlzdCA9IFtdO1xuICAgICAgICByZXR1cm4gbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICAgICAgICAgICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXRlbVsyXSA/IFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiIDogY29udGVudDtcbiAgICAgICAgICAgIH0pLmpvaW4oXCJcIik7XG4gICAgICAgIH0sIGxpc3QuaSA9IGZ1bmN0aW9uKG1vZHVsZXMsIG1lZGlhUXVlcnkpIHtcbiAgICAgICAgICAgIFwic3RyaW5nXCIgPT0gdHlwZW9mIG1vZHVsZXMgJiYgKG1vZHVsZXMgPSBbIFsgbnVsbCwgbW9kdWxlcywgXCJcIiBdIF0pO1xuICAgICAgICAgICAgZm9yICh2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9LCBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuICAgICAgICAgICAgICAgIFwibnVtYmVyXCIgPT0gdHlwZW9mIGlkICYmIChhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9ICEwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSBtb2R1bGVzW2ldO1xuICAgICAgICAgICAgICAgIFwibnVtYmVyXCIgPT0gdHlwZW9mIGl0ZW1bMF0gJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSB8fCAobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSA/IGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5IDogbWVkaWFRdWVyeSAmJiAoaXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiKSwgXG4gICAgICAgICAgICAgICAgbGlzdC5wdXNoKGl0ZW0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgbGlzdDtcbiAgICB9O1xufSwgZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG4gICAgZnVuY3Rpb24gYWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgaXRlbSA9IHN0eWxlc1tpXSwgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcbiAgICAgICAgICAgIGlmIChkb21TdHlsZSkge1xuICAgICAgICAgICAgICAgIGRvbVN0eWxlLnJlZnMrKztcbiAgICAgICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIGRvbVN0eWxlLnBhcnRzW2pdKGl0ZW0ucGFydHNbal0pO1xuICAgICAgICAgICAgICAgIGZvciAoO2ogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSBkb21TdHlsZS5wYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgcGFydHMgPSBbXSwgaiA9IDA7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSBwYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcbiAgICAgICAgICAgICAgICBzdHlsZXNJbkRvbVtpdGVtLmlkXSA9IHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IGl0ZW0uaWQsXG4gICAgICAgICAgICAgICAgICAgIHJlZnM6IDEsXG4gICAgICAgICAgICAgICAgICAgIHBhcnRzOiBwYXJ0c1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gbGlzdFRvU3R5bGVzKGxpc3QsIG9wdGlvbnMpIHtcbiAgICAgICAgZm9yICh2YXIgc3R5bGVzID0gW10sIG5ld1N0eWxlcyA9IHt9LCBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBpdGVtID0gbGlzdFtpXSwgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXSwgcGFydCA9IHtcbiAgICAgICAgICAgICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICAgICAgICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICAgICAgICAgICAgc291cmNlTWFwOiBpdGVtWzNdXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgbmV3U3R5bGVzW2lkXSA/IG5ld1N0eWxlc1tpZF0ucGFydHMucHVzaChwYXJ0KSA6IHN0eWxlcy5wdXNoKG5ld1N0eWxlc1tpZF0gPSB7XG4gICAgICAgICAgICAgICAgaWQ6IGlkLFxuICAgICAgICAgICAgICAgIHBhcnRzOiBbIHBhcnQgXVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN0eWxlcztcbiAgICB9XG4gICAgZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIHN0eWxlKSB7XG4gICAgICAgIHZhciB0YXJnZXQgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50byk7XG4gICAgICAgIGlmICghdGFyZ2V0KSB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydEludG8nIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgICAgICAgdmFyIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcFtzdHlsZXNJbnNlcnRlZEF0VG9wLmxlbmd0aCAtIDFdO1xuICAgICAgICBpZiAoXCJ0b3BcIiA9PT0gb3B0aW9ucy5pbnNlcnRBdCkgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AgPyBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZyA/IHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKSA6IHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSkgOiB0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCB0YXJnZXQuZmlyc3RDaGlsZCksIFxuICAgICAgICBzdHlsZXNJbnNlcnRlZEF0VG9wLnB1c2goc3R5bGUpOyBlbHNlIGlmIChcImJvdHRvbVwiID09PSBvcHRpb25zLmluc2VydEF0KSB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpOyBlbHNlIHtcbiAgICAgICAgICAgIGlmIChcIm9iamVjdFwiICE9IHR5cGVvZiBvcHRpb25zLmluc2VydEF0IHx8ICFvcHRpb25zLmluc2VydEF0LmJlZm9yZSkgdGhyb3cgbmV3IEVycm9yKFwiW1N0eWxlIExvYWRlcl1cXG5cXG4gSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcgKCdvcHRpb25zLmluc2VydEF0JykgZm91bmQuXFxuIE11c3QgYmUgJ3RvcCcsICdib3R0b20nLCBvciBPYmplY3QuXFxuIChodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlciNpbnNlcnRhdClcXG5cIik7XG4gICAgICAgICAgICB2YXIgbmV4dFNpYmxpbmcgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50byArIFwiIFwiICsgb3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUpO1xuICAgICAgICAgICAgdGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbmV4dFNpYmxpbmcpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSkge1xuICAgICAgICBpZiAobnVsbCA9PT0gc3R5bGUucGFyZW50Tm9kZSkgcmV0dXJuICExO1xuICAgICAgICBzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcbiAgICAgICAgdmFyIGlkeCA9IHN0eWxlc0luc2VydGVkQXRUb3AuaW5kZXhPZihzdHlsZSk7XG4gICAgICAgIGlkeCA+PSAwICYmIHN0eWxlc0luc2VydGVkQXRUb3Auc3BsaWNlKGlkeCwgMSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gICAgICAgIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgICAgICAgcmV0dXJuIG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIiwgYWRkQXR0cnMoc3R5bGUsIG9wdGlvbnMuYXR0cnMpLCBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgc3R5bGUpLCBcbiAgICAgICAgc3R5bGU7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcbiAgICAgICAgcmV0dXJuIG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIiwgb3B0aW9ucy5hdHRycy5yZWwgPSBcInN0eWxlc2hlZXRcIiwgYWRkQXR0cnMobGluaywgb3B0aW9ucy5hdHRycyksIFxuICAgICAgICBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgbGluayksIGxpbms7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGFkZEF0dHJzKGVsLCBhdHRycykge1xuICAgICAgICBPYmplY3Qua2V5cyhhdHRycykuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcbiAgICAgICAgICAgIGVsLnNldEF0dHJpYnV0ZShrZXksIGF0dHJzW2tleV0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYWRkU3R5bGUob2JqLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBzdHlsZSwgdXBkYXRlLCByZW1vdmUsIHJlc3VsdDtcbiAgICAgICAgaWYgKG9wdGlvbnMudHJhbnNmb3JtICYmIG9iai5jc3MpIHtcbiAgICAgICAgICAgIGlmICghKHJlc3VsdCA9IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpKSkgcmV0dXJuIGZ1bmN0aW9uKCkge307XG4gICAgICAgICAgICBvYmouY3NzID0gcmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuICAgICAgICAgICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgICAgICAgICBzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKSwgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCAhMSksIFxuICAgICAgICAgICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCAhMCk7XG4gICAgICAgIH0gZWxzZSBvYmouc291cmNlTWFwICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgVVJMICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgVVJMLmNyZWF0ZU9iamVjdFVSTCAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFVSTC5yZXZva2VPYmplY3RVUkwgJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBCbG9iICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgYnRvYSA/IChzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpLCBcbiAgICAgICAgdXBkYXRlID0gdXBkYXRlTGluay5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKSwgcmVtb3ZlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpLCBzdHlsZS5ocmVmICYmIFVSTC5yZXZva2VPYmplY3RVUkwoc3R5bGUuaHJlZik7XG4gICAgICAgIH0pIDogKHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpLCB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUpLCBcbiAgICAgICAgcmVtb3ZlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHVwZGF0ZShvYmopLCBmdW5jdGlvbihuZXdPYmopIHtcbiAgICAgICAgICAgIGlmIChuZXdPYmopIHtcbiAgICAgICAgICAgICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSByZXR1cm47XG4gICAgICAgICAgICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgICAgICAgICB9IGVsc2UgcmVtb3ZlKCk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuICAgICAgICB2YXIgY3NzID0gcmVtb3ZlID8gXCJcIiA6IG9iai5jc3M7XG4gICAgICAgIGlmIChzdHlsZS5zdHlsZVNoZWV0KSBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTsgZWxzZSB7XG4gICAgICAgICAgICB2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyksIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuICAgICAgICAgICAgY2hpbGROb2Rlc1tpbmRleF0gJiYgc3R5bGUucmVtb3ZlQ2hpbGQoY2hpbGROb2Rlc1tpbmRleF0pLCBjaGlsZE5vZGVzLmxlbmd0aCA/IHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSkgOiBzdHlsZS5hcHBlbmRDaGlsZChjc3NOb2RlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvYmopIHtcbiAgICAgICAgdmFyIGNzcyA9IG9iai5jc3MsIG1lZGlhID0gb2JqLm1lZGlhO1xuICAgICAgICBpZiAobWVkaWEgJiYgc3R5bGUuc2V0QXR0cmlidXRlKFwibWVkaWFcIiwgbWVkaWEpLCBzdHlsZS5zdHlsZVNoZWV0KSBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7IGVsc2Uge1xuICAgICAgICAgICAgZm9yICg7c3R5bGUuZmlyc3RDaGlsZDsgKSBzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcbiAgICAgICAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIHVwZGF0ZUxpbmsobGluaywgb3B0aW9ucywgb2JqKSB7XG4gICAgICAgIHZhciBjc3MgPSBvYmouY3NzLCBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwLCBhdXRvRml4VXJscyA9IHZvaWQgMCA9PT0gb3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgJiYgc291cmNlTWFwO1xuICAgICAgICAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpICYmIChjc3MgPSBmaXhVcmxzKGNzcykpLCBzb3VyY2VNYXAgJiYgKGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIgKyBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpICsgXCIgKi9cIik7XG4gICAgICAgIHZhciBibG9iID0gbmV3IEJsb2IoWyBjc3MgXSwge1xuICAgICAgICAgICAgdHlwZTogXCJ0ZXh0L2Nzc1wiXG4gICAgICAgIH0pLCBvbGRTcmMgPSBsaW5rLmhyZWY7XG4gICAgICAgIGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYiksIG9sZFNyYyAmJiBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG4gICAgfVxuICAgIHZhciBzdHlsZXNJbkRvbSA9IHt9LCBpc09sZElFID0gZnVuY3Rpb24oZm4pIHtcbiAgICAgICAgdmFyIG1lbW87XG4gICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiB2b2lkIDAgPT09IG1lbW8gJiYgKG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSwgbWVtbztcbiAgICAgICAgfTtcbiAgICB9KGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gd2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2I7XG4gICAgfSksIGdldEVsZW1lbnQgPSBmdW5jdGlvbihmbikge1xuICAgICAgICB2YXIgbWVtbyA9IHt9O1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgICAgICAgICAgIGlmICh2b2lkIDAgPT09IG1lbW9bc2VsZWN0b3JdKSB7XG4gICAgICAgICAgICAgICAgdmFyIHN0eWxlVGFyZ2V0ID0gZm4uY2FsbCh0aGlzLCBzZWxlY3Rvcik7XG4gICAgICAgICAgICAgICAgaWYgKHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB0cnkge1xuICAgICAgICAgICAgICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBtZW1vW3NlbGVjdG9yXSA9IHN0eWxlVGFyZ2V0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG1lbW9bc2VsZWN0b3JdO1xuICAgICAgICB9O1xuICAgIH0oZnVuY3Rpb24odGFyZ2V0KSB7XG4gICAgICAgIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG4gICAgfSksIHNpbmdsZXRvbiA9IG51bGwsIHNpbmdsZXRvbkNvdW50ZXIgPSAwLCBzdHlsZXNJbnNlcnRlZEF0VG9wID0gW10sIGZpeFVybHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDgpO1xuICAgIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdCwgb3B0aW9ucykge1xuICAgICAgICBpZiAoXCJ1bmRlZmluZWRcIiAhPSB0eXBlb2YgREVCVUcgJiYgREVCVUcgJiYgXCJvYmplY3RcIiAhPSB0eXBlb2YgZG9jdW1lbnQpIHRocm93IG5ldyBFcnJvcihcIlRoZSBzdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTtcbiAgICAgICAgKG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9KS5hdHRycyA9IFwib2JqZWN0XCIgPT0gdHlwZW9mIG9wdGlvbnMuYXR0cnMgPyBvcHRpb25zLmF0dHJzIDoge30sIFxuICAgICAgICBvcHRpb25zLnNpbmdsZXRvbiB8fCAob3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCkpLCBvcHRpb25zLmluc2VydEludG8gfHwgKG9wdGlvbnMuaW5zZXJ0SW50byA9IFwiaGVhZFwiKSwgXG4gICAgICAgIG9wdGlvbnMuaW5zZXJ0QXQgfHwgKG9wdGlvbnMuaW5zZXJ0QXQgPSBcImJvdHRvbVwiKTtcbiAgICAgICAgdmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhsaXN0LCBvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIGFkZFN0eWxlc1RvRG9tKHN0eWxlcywgb3B0aW9ucyksIGZ1bmN0aW9uKG5ld0xpc3QpIHtcbiAgICAgICAgICAgIGZvciAodmFyIG1heVJlbW92ZSA9IFtdLCBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBpdGVtID0gc3R5bGVzW2ldO1xuICAgICAgICAgICAgICAgIChkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdKS5yZWZzLS0sIG1heVJlbW92ZS5wdXNoKGRvbVN0eWxlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5ld0xpc3QgJiYgYWRkU3R5bGVzVG9Eb20obGlzdFRvU3R5bGVzKG5ld0xpc3QsIG9wdGlvbnMpLCBvcHRpb25zKTtcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBtYXlSZW1vdmUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgZG9tU3R5bGUgPSBtYXlSZW1vdmVbaV07XG4gICAgICAgICAgICAgICAgaWYgKDAgPT09IGRvbVN0eWxlLnJlZnMpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykgZG9tU3R5bGUucGFydHNbal0oKTtcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHN0eWxlc0luRG9tW2RvbVN0eWxlLmlkXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfTtcbiAgICB2YXIgcmVwbGFjZVRleHQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHRleHRTdG9yZSA9IFtdO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24oaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50LCB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCJcXG5cIik7XG4gICAgICAgIH07XG4gICAgfSgpO1xufSwgZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihjc3MpIHtcbiAgICAgICAgdmFyIGxvY2F0aW9uID0gXCJ1bmRlZmluZWRcIiAhPSB0eXBlb2Ygd2luZG93ICYmIHdpbmRvdy5sb2NhdGlvbjtcbiAgICAgICAgaWYgKCFsb2NhdGlvbikgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gICAgICAgIGlmICghY3NzIHx8IFwic3RyaW5nXCIgIT0gdHlwZW9mIGNzcykgcmV0dXJuIGNzcztcbiAgICAgICAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3QsIGN1cnJlbnREaXIgPSBiYXNlVXJsICsgbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLCBcIi9cIik7XG4gICAgICAgIHJldHVybiBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuICAgICAgICAgICAgdmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmwudHJpbSgpLnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSkge1xuICAgICAgICAgICAgICAgIHJldHVybiAkMTtcbiAgICAgICAgICAgIH0pLnJlcGxhY2UoL14nKC4qKSckLywgZnVuY3Rpb24obywgJDEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJDE7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcLykvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHJldHVybiBmdWxsTWF0Y2g7XG4gICAgICAgICAgICB2YXIgbmV3VXJsO1xuICAgICAgICAgICAgcmV0dXJuIG5ld1VybCA9IDAgPT09IHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPyB1bnF1b3RlZE9yaWdVcmwgOiAwID09PSB1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPyBiYXNlVXJsICsgdW5xdW90ZWRPcmlnVXJsIDogY3VycmVudERpciArIHVucXVvdGVkT3JpZ1VybC5yZXBsYWNlKC9eXFwuXFwvLywgXCJcIiksIFxuICAgICAgICAgICAgXCJ1cmwoXCIgKyBKU09OLnN0cmluZ2lmeShuZXdVcmwpICsgXCIpXCI7XG4gICAgICAgIH0pO1xuICAgIH07XG59LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICB2YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXztcbiAgICBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBTeW1ib2wuaXRlcmF0b3I7XG4gICAgIWZ1bmN0aW9uKGZhY3RvcnkpIHtcbiAgICAgICAgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFsgX193ZWJwYWNrX3JlcXVpcmVfXygwKSwgX193ZWJwYWNrX3JlcXVpcmVfXygxKSBdLCBcbiAgICAgICAgdm9pZCAwICE9PSAoX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIChfX1dFQlBBQ0tfQU1EX0RFRklORV9GQUNUT1JZX18gPSBmYWN0b3J5KSA/IF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXy5hcHBseShleHBvcnRzLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fKSA6IF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXykgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pO1xuICAgIH0oZnVuY3Rpb24oJCwgSW5wdXRtYXNrKSB7XG4gICAgICAgIGZ1bmN0aW9uIGdldFRva2VuaXplcihvcHRzKSB7XG4gICAgICAgICAgICBpZiAoIW9wdHMudG9rZW5pemVyKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRva2VucyA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIG5keCBpbiBmb3JtYXRDb2RlKSAtMSA9PT0gdG9rZW5zLmluZGV4T2YobmR4WzBdKSAmJiB0b2tlbnMucHVzaChuZHhbMF0pO1xuICAgICAgICAgICAgICAgIG9wdHMudG9rZW5pemVyID0gXCIoXCIgKyB0b2tlbnMuam9pbihcIit8XCIpICsgXCIpKz98LlwiLCBvcHRzLnRva2VuaXplciA9IG5ldyBSZWdFeHAob3B0cy50b2tlbml6ZXIsIFwiZ1wiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBvcHRzLnRva2VuaXplcjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBpc1ZhbGlkRGF0ZShkYXRlUGFydHMsIGN1cnJlbnRSZXN1bHQpIHtcbiAgICAgICAgICAgIHJldHVybiAoIWlzRmluaXRlKGRhdGVQYXJ0cy5kYXkpIHx8IFwiMjlcIiA9PSBkYXRlUGFydHMuZGF5ICYmICFpc0Zpbml0ZShkYXRlUGFydHMucmF3eWVhcikgfHwgbmV3IERhdGUoZGF0ZVBhcnRzLmRhdGUuZ2V0RnVsbFllYXIoKSwgaXNGaW5pdGUoZGF0ZVBhcnRzLm1vbnRoKSA/IGRhdGVQYXJ0cy5tb250aCA6IGRhdGVQYXJ0cy5kYXRlLmdldE1vbnRoKCkgKyAxLCAwKS5nZXREYXRlKCkgPj0gZGF0ZVBhcnRzLmRheSkgJiYgY3VycmVudFJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBpc0RhdGVJblJhbmdlKG1hc2tEYXRlLCBvcHRzKSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gITA7XG4gICAgICAgICAgICByZXR1cm4gb3B0cy5taW4gJiYgb3B0cy5taW4uZGF0ZS5nZXRUaW1lKCkgPT09IG9wdHMubWluLmRhdGUuZ2V0VGltZSgpICYmIChyZXN1bHQgPSByZXN1bHQgJiYgb3B0cy5taW4uZGF0ZS5nZXRUaW1lKCkgPD0gbWFza0RhdGUuZ2V0VGltZSgpKSwgXG4gICAgICAgICAgICBvcHRzLm1heCAmJiBvcHRzLm1heC5kYXRlLmdldFRpbWUoKSA9PT0gb3B0cy5tYXguZGF0ZS5nZXRUaW1lKCkgJiYgKHJlc3VsdCA9IHJlc3VsdCAmJiBvcHRzLm1heC5kYXRlLmdldFRpbWUoKSA+PSBtYXNrRGF0ZS5nZXRUaW1lKCkpLCBcbiAgICAgICAgICAgIHJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBwYXJzZShmb3JtYXQsIGRhdGVPYmpWYWx1ZSwgb3B0cykge1xuICAgICAgICAgICAgZm9yICh2YXIgbWF0Y2gsIG1hc2sgPSBcIlwiOyBtYXRjaCA9IGdldFRva2VuaXplcihvcHRzKS5leGVjKGZvcm1hdCk7ICkgdm9pZCAwID09PSBkYXRlT2JqVmFsdWUgPyBtYXNrICs9IGZvcm1hdENvZGVbbWF0Y2hbMF1dID8gXCIoXCIgKyBmb3JtYXRDb2RlW21hdGNoWzBdXVswXSArIFwiKVwiIDogbWF0Y2hbMF0gOiBmb3JtYXRDb2RlW21hdGNoWzBdXSA/IG1hc2sgKz0gZm9ybWF0Q29kZVttYXRjaFswXV1bM10uY2FsbChkYXRlT2JqVmFsdWUuZGF0ZSkgOiBtYXNrICs9IG1hdGNoWzBdO1xuICAgICAgICAgICAgcmV0dXJuIG1hc2s7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gcGFkKHZhbCwgbGVuKSB7XG4gICAgICAgICAgICBmb3IgKHZhbCA9IFN0cmluZyh2YWwpLCBsZW4gPSBsZW4gfHwgMjsgdmFsLmxlbmd0aCA8IGxlbjsgKSB2YWwgPSBcIjBcIiArIHZhbDtcbiAgICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYW5hbHlzZU1hc2sobWFza1N0cmluZywgZm9ybWF0LCBvcHRzKSB7XG4gICAgICAgICAgICBmdW5jdGlvbiBleHRlbmRZZWFyKHllYXIpIHtcbiAgICAgICAgICAgICAgICB2YXIgY29ycmVjdGVkeWVhciA9IDQgPT09IHllYXIubGVuZ3RoID8geWVhciA6IG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKS50b1N0cmluZygpLnN1YnN0cigwLCA0IC0geWVhci5sZW5ndGgpICsgeWVhcjtcbiAgICAgICAgICAgICAgICByZXR1cm4gb3B0cy5taW4gJiYgb3B0cy5taW4ueWVhciAmJiBvcHRzLm1heCAmJiBvcHRzLm1heC55ZWFyID8gKGNvcnJlY3RlZHllYXIgPSBjb3JyZWN0ZWR5ZWFyLnJlcGxhY2UoL1teMC05XS9nLCBcIlwiKSwgXG4gICAgICAgICAgICAgICAgY29ycmVjdGVkeWVhciA9IHllYXIuY2hhckF0KDApID09PSBvcHRzLm1heC55ZWFyLmNoYXJBdCgwKSA/IHllYXIucmVwbGFjZSgvW14wLTldL2csIFwiMFwiKSA6IGNvcnJlY3RlZHllYXIgKyBvcHRzLm1pbi55ZWFyLnN1YnN0cihjb3JyZWN0ZWR5ZWFyLmxlbmd0aCkpIDogY29ycmVjdGVkeWVhciA9IGNvcnJlY3RlZHllYXIucmVwbGFjZSgvW14wLTldL2csIFwiMFwiKSwgXG4gICAgICAgICAgICAgICAgY29ycmVjdGVkeWVhcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciB0YXJnZXRQcm9wLCBtYXRjaCwgZGF0ZU9wZXJhdGlvbiwgZGF0ZU9iaiA9IHtcbiAgICAgICAgICAgICAgICBkYXRlOiBuZXcgRGF0ZSgxLCAwLCAxKVxuICAgICAgICAgICAgfSwgbWFzayA9IG1hc2tTdHJpbmc7XG4gICAgICAgICAgICBpZiAoXCJzdHJpbmdcIiA9PSB0eXBlb2YgbWFzaykge1xuICAgICAgICAgICAgICAgIGZvciAoO21hdGNoID0gZ2V0VG9rZW5pemVyKG9wdHMpLmV4ZWMoZm9ybWF0KTsgKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IG1hc2suc2xpY2UoMCwgbWF0Y2hbMF0ubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgZm9ybWF0Q29kZS5oYXNPd25Qcm9wZXJ0eShtYXRjaFswXSkgJiYgKHRhcmdldFByb3AgPSBmb3JtYXRDb2RlW21hdGNoWzBdXVsyXSwgZGF0ZU9wZXJhdGlvbiA9IGZvcm1hdENvZGVbbWF0Y2hbMF1dWzFdLCBcbiAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oZGF0ZU9iaiwgdmFsdWUsIG9wdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwieWVhclwiID09PSB0YXJnZXRQcm9wID8gKGRhdGVPYmpbdGFyZ2V0UHJvcF0gPSBleHRlbmRZZWFyKHZhbHVlKSwgZGF0ZU9ialtcInJhd1wiICsgdGFyZ2V0UHJvcF0gPSB2YWx1ZSkgOiBkYXRlT2JqW3RhcmdldFByb3BdID0gb3B0cy5taW4gJiYgdmFsdWUubWF0Y2goL1teMC05XS8pID8gb3B0cy5taW5bdGFyZ2V0UHJvcF0gOiB2YWx1ZSwgXG4gICAgICAgICAgICAgICAgICAgICAgICB2b2lkIDAgIT09IGRhdGVPcGVyYXRpb24gJiYgZGF0ZU9wZXJhdGlvbi5jYWxsKGRhdGVPYmouZGF0ZSwgXCJtb250aFwiID09IHRhcmdldFByb3AgPyBwYXJzZUludChkYXRlT2JqW3RhcmdldFByb3BdKSAtIDEgOiBkYXRlT2JqW3RhcmdldFByb3BdKTtcbiAgICAgICAgICAgICAgICAgICAgfShkYXRlT2JqLCB2YWx1ZSwgb3B0cykpLCBtYXNrID0gbWFzay5zbGljZSh2YWx1ZS5sZW5ndGgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gZGF0ZU9iajtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgZm9ybWF0Q29kZSA9IHtcbiAgICAgICAgICAgIGQ6IFsgXCJbMS05XXxbMTJdWzAtOV18M1swMV1cIiwgRGF0ZS5wcm90b3R5cGUuc2V0RGF0ZSwgXCJkYXlcIiwgRGF0ZS5wcm90b3R5cGUuZ2V0RGF0ZSBdLFxuICAgICAgICAgICAgZGQ6IFsgXCIwWzEtOV18WzEyXVswLTldfDNbMDFdXCIsIERhdGUucHJvdG90eXBlLnNldERhdGUsIFwiZGF5XCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwYWQoRGF0ZS5wcm90b3R5cGUuZ2V0RGF0ZS5jYWxsKHRoaXMpLCAyKTtcbiAgICAgICAgICAgIH0gXSxcbiAgICAgICAgICAgIGRkZDogWyBcIlwiIF0sXG4gICAgICAgICAgICBkZGRkOiBbIFwiXCIgXSxcbiAgICAgICAgICAgIG06IFsgXCJbMS05XXwxWzAxMl1cIiwgRGF0ZS5wcm90b3R5cGUuc2V0TW9udGgsIFwibW9udGhcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIERhdGUucHJvdG90eXBlLmdldE1vbnRoLmNhbGwodGhpcykgKyAxO1xuICAgICAgICAgICAgfSBdLFxuICAgICAgICAgICAgbW06IFsgXCIwWzEtOV18MVswMTJdXCIsIERhdGUucHJvdG90eXBlLnNldE1vbnRoLCBcIm1vbnRoXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwYWQoRGF0ZS5wcm90b3R5cGUuZ2V0TW9udGguY2FsbCh0aGlzKSArIDEsIDIpO1xuICAgICAgICAgICAgfSBdLFxuICAgICAgICAgICAgbW1tOiBbIFwiXCIgXSxcbiAgICAgICAgICAgIG1tbW06IFsgXCJcIiBdLFxuICAgICAgICAgICAgeXk6IFsgXCJbMC05XXsyfVwiLCBEYXRlLnByb3RvdHlwZS5zZXRGdWxsWWVhciwgXCJ5ZWFyXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwYWQoRGF0ZS5wcm90b3R5cGUuZ2V0RnVsbFllYXIuY2FsbCh0aGlzKSwgMik7XG4gICAgICAgICAgICB9IF0sXG4gICAgICAgICAgICB5eXl5OiBbIFwiWzAtOV17NH1cIiwgRGF0ZS5wcm90b3R5cGUuc2V0RnVsbFllYXIsIFwieWVhclwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcGFkKERhdGUucHJvdG90eXBlLmdldEZ1bGxZZWFyLmNhbGwodGhpcyksIDQpO1xuICAgICAgICAgICAgfSBdLFxuICAgICAgICAgICAgaDogWyBcIlsxLTldfDFbMC0yXVwiLCBEYXRlLnByb3RvdHlwZS5zZXRIb3VycywgXCJob3Vyc1wiLCBEYXRlLnByb3RvdHlwZS5nZXRIb3VycyBdLFxuICAgICAgICAgICAgaGg6IFsgXCIwWzEtOV18MVswLTJdXCIsIERhdGUucHJvdG90eXBlLnNldEhvdXJzLCBcImhvdXJzXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwYWQoRGF0ZS5wcm90b3R5cGUuZ2V0SG91cnMuY2FsbCh0aGlzKSwgMik7XG4gICAgICAgICAgICB9IF0sXG4gICAgICAgICAgICBoaGg6IFsgXCJbMC05XStcIiwgRGF0ZS5wcm90b3R5cGUuc2V0SG91cnMsIFwiaG91cnNcIiwgRGF0ZS5wcm90b3R5cGUuZ2V0SG91cnMgXSxcbiAgICAgICAgICAgIEg6IFsgXCIxP1sxLTldfDJbMC0zXVwiLCBEYXRlLnByb3RvdHlwZS5zZXRIb3VycywgXCJob3Vyc1wiLCBEYXRlLnByb3RvdHlwZS5nZXRIb3VycyBdLFxuICAgICAgICAgICAgSEg6IFsgXCJbMDFdWzEtOV18MlswLTNdXCIsIERhdGUucHJvdG90eXBlLnNldEhvdXJzLCBcImhvdXJzXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwYWQoRGF0ZS5wcm90b3R5cGUuZ2V0SG91cnMuY2FsbCh0aGlzKSwgMik7XG4gICAgICAgICAgICB9IF0sXG4gICAgICAgICAgICBISEg6IFsgXCJbMC05XStcIiwgRGF0ZS5wcm90b3R5cGUuc2V0SG91cnMsIFwiaG91cnNcIiwgRGF0ZS5wcm90b3R5cGUuZ2V0SG91cnMgXSxcbiAgICAgICAgICAgIE06IFsgXCJbMS01XT9bMC05XVwiLCBEYXRlLnByb3RvdHlwZS5zZXRNaW51dGVzLCBcIm1pbnV0ZXNcIiwgRGF0ZS5wcm90b3R5cGUuZ2V0TWludXRlcyBdLFxuICAgICAgICAgICAgTU06IFsgXCJbMC01XVswLTldXCIsIERhdGUucHJvdG90eXBlLnNldE1pbnV0ZXMsIFwibWludXRlc1wiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcGFkKERhdGUucHJvdG90eXBlLmdldE1pbnV0ZXMuY2FsbCh0aGlzKSwgMik7XG4gICAgICAgICAgICB9IF0sXG4gICAgICAgICAgICBzOiBbIFwiWzEtNV0/WzAtOV1cIiwgRGF0ZS5wcm90b3R5cGUuc2V0U2Vjb25kcywgXCJzZWNvbmRzXCIsIERhdGUucHJvdG90eXBlLmdldFNlY29uZHMgXSxcbiAgICAgICAgICAgIHNzOiBbIFwiWzAtNV1bMC05XVwiLCBEYXRlLnByb3RvdHlwZS5zZXRTZWNvbmRzLCBcInNlY29uZHNcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhZChEYXRlLnByb3RvdHlwZS5nZXRTZWNvbmRzLmNhbGwodGhpcyksIDIpO1xuICAgICAgICAgICAgfSBdLFxuICAgICAgICAgICAgbDogWyBcIlswLTldezN9XCIsIERhdGUucHJvdG90eXBlLnNldE1pbGxpc2Vjb25kcywgXCJtaWxsaXNlY29uZHNcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhZChEYXRlLnByb3RvdHlwZS5nZXRNaWxsaXNlY29uZHMuY2FsbCh0aGlzKSwgMyk7XG4gICAgICAgICAgICB9IF0sXG4gICAgICAgICAgICBMOiBbIFwiWzAtOV17Mn1cIiwgRGF0ZS5wcm90b3R5cGUuc2V0TWlsbGlzZWNvbmRzLCBcIm1pbGxpc2Vjb25kc1wiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcGFkKERhdGUucHJvdG90eXBlLmdldE1pbGxpc2Vjb25kcy5jYWxsKHRoaXMpLCAyKTtcbiAgICAgICAgICAgIH0gXSxcbiAgICAgICAgICAgIHQ6IFsgXCJcIiBdLFxuICAgICAgICAgICAgdHQ6IFsgXCJcIiBdLFxuICAgICAgICAgICAgVDogWyBcIlwiIF0sXG4gICAgICAgICAgICBUVDogWyBcIlwiIF0sXG4gICAgICAgICAgICBaOiBbIFwiXCIgXSxcbiAgICAgICAgICAgIG86IFsgXCJcIiBdLFxuICAgICAgICAgICAgUzogWyBcIlwiIF1cbiAgICAgICAgfSwgZm9ybWF0QWxpYXMgPSB7XG4gICAgICAgICAgICBpc29EYXRlOiBcInl5eXktbW0tZGRcIixcbiAgICAgICAgICAgIGlzb1RpbWU6IFwiSEg6TU06c3NcIixcbiAgICAgICAgICAgIGlzb0RhdGVUaW1lOiBcInl5eXktbW0tZGQnVCdISDpNTTpzc1wiLFxuICAgICAgICAgICAgaXNvVXRjRGF0ZVRpbWU6IFwiVVRDOnl5eXktbW0tZGQnVCdISDpNTTpzcydaJ1wiXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBJbnB1dG1hc2suZXh0ZW5kQWxpYXNlcyh7XG4gICAgICAgICAgICBkYXRldGltZToge1xuICAgICAgICAgICAgICAgIG1hc2s6IGZ1bmN0aW9uKG9wdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wdHMuaW5wdXRGb3JtYXQgPSBmb3JtYXRBbGlhc1tvcHRzLmlucHV0Rm9ybWF0XSB8fCBvcHRzLmlucHV0Rm9ybWF0LCBvcHRzLmRpc3BsYXlGb3JtYXQgPSBmb3JtYXRBbGlhc1tvcHRzLmRpc3BsYXlGb3JtYXRdIHx8IG9wdHMuZGlzcGxheUZvcm1hdCB8fCBvcHRzLmlucHV0Rm9ybWF0LCBcbiAgICAgICAgICAgICAgICAgICAgb3B0cy5vdXRwdXRGb3JtYXQgPSBmb3JtYXRBbGlhc1tvcHRzLm91dHB1dEZvcm1hdF0gfHwgb3B0cy5vdXRwdXRGb3JtYXQgfHwgb3B0cy5pbnB1dEZvcm1hdCwgXG4gICAgICAgICAgICAgICAgICAgIG9wdHMucGxhY2Vob2xkZXIgPSBvcHRzLnBsYWNlaG9sZGVyICE9PSBJbnB1dG1hc2sucHJvdG90eXBlLmRlZmF1bHRzLnBsYWNlaG9sZGVyID8gb3B0cy5wbGFjZWhvbGRlciA6IG9wdHMuaW5wdXRGb3JtYXQsIFxuICAgICAgICAgICAgICAgICAgICBvcHRzLm1pbiA9IGFuYWx5c2VNYXNrKG9wdHMubWluLCBvcHRzLmlucHV0Rm9ybWF0LCBvcHRzKSwgb3B0cy5tYXggPSBhbmFseXNlTWFzayhvcHRzLm1heCwgb3B0cy5pbnB1dEZvcm1hdCwgb3B0cyksIFxuICAgICAgICAgICAgICAgICAgICBvcHRzLnJlZ2V4ID0gcGFyc2Uob3B0cy5pbnB1dEZvcm1hdCwgdm9pZCAwLCBvcHRzKSwgbnVsbDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGlucHV0Rm9ybWF0OiBcImlzb0RhdGVUaW1lXCIsXG4gICAgICAgICAgICAgICAgZGlzcGxheUZvcm1hdDogdm9pZCAwLFxuICAgICAgICAgICAgICAgIG91dHB1dEZvcm1hdDogdm9pZCAwLFxuICAgICAgICAgICAgICAgIG1pbjogbnVsbCxcbiAgICAgICAgICAgICAgICBtYXg6IG51bGwsXG4gICAgICAgICAgICAgICAgaTE4bjoge1xuICAgICAgICAgICAgICAgICAgICBkYXlOYW1lczogWyBcIk1vblwiLCBcIlR1ZVwiLCBcIldlZFwiLCBcIlRodVwiLCBcIkZyaVwiLCBcIlNhdFwiLCBcIlN1blwiLCBcIk1vbmRheVwiLCBcIlR1ZXNkYXlcIiwgXCJXZWRuZXNkYXlcIiwgXCJUaHVyc2RheVwiLCBcIkZyaWRheVwiLCBcIlNhdHVyZGF5XCIsIFwiU3VuZGF5XCIgXSxcbiAgICAgICAgICAgICAgICAgICAgbW9udGhOYW1lczogWyBcIkphblwiLCBcIkZlYlwiLCBcIk1hclwiLCBcIkFwclwiLCBcIk1heVwiLCBcIkp1blwiLCBcIkp1bFwiLCBcIkF1Z1wiLCBcIlNlcFwiLCBcIk9jdFwiLCBcIk5vdlwiLCBcIkRlY1wiLCBcIkphbnVhcnlcIiwgXCJGZWJydWFyeVwiLCBcIk1hcmNoXCIsIFwiQXByaWxcIiwgXCJNYXlcIiwgXCJKdW5lXCIsIFwiSnVseVwiLCBcIkF1Z3VzdFwiLCBcIlNlcHRlbWJlclwiLCBcIk9jdG9iZXJcIiwgXCJOb3ZlbWJlclwiLCBcIkRlY2VtYmVyXCIgXVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcG9zdFZhbGlkYXRpb246IGZ1bmN0aW9uKGJ1ZmZlciwgY3VycmVudFJlc3VsdCwgb3B0cykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gY3VycmVudFJlc3VsdCwgZGF0ZVBhcnRzID0gYW5hbHlzZU1hc2soYnVmZmVyLmpvaW4oXCJcIiksIG9wdHMuaW5wdXRGb3JtYXQsIG9wdHMpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ICYmIGRhdGVQYXJ0cy5kYXRlLmdldFRpbWUoKSA9PT0gZGF0ZVBhcnRzLmRhdGUuZ2V0VGltZSgpICYmIChyZXN1bHQgPSAocmVzdWx0ID0gaXNWYWxpZERhdGUoZGF0ZVBhcnRzLCByZXN1bHQpKSAmJiBpc0RhdGVJblJhbmdlKGRhdGVQYXJ0cy5kYXRlLCBvcHRzKSksIFxuICAgICAgICAgICAgICAgICAgICByZXN1bHQ7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBvbktleURvd246IGZ1bmN0aW9uKGUsIGJ1ZmZlciwgY2FyZXRQb3MsIG9wdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgaWYgKGUuY3RybEtleSAmJiBlLmtleUNvZGUgPT09IElucHV0bWFzay5rZXlDb2RlLlJJR0hUKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBtYXRjaCwgdG9kYXkgPSBuZXcgRGF0ZSgpLCBkYXRlID0gXCJcIjsgbWF0Y2ggPSBnZXRUb2tlbml6ZXIob3B0cykuZXhlYyhvcHRzLmlucHV0Rm9ybWF0KTsgKSBcImRcIiA9PT0gbWF0Y2hbMF0uY2hhckF0KDApID8gZGF0ZSArPSB0b2RheS5nZXREYXRlKCkudG9TdHJpbmcoKSA6IFwibVwiID09PSBtYXRjaFswXS5jaGFyQXQoMCkgPyBkYXRlICs9ICh0b2RheS5nZXRNb250aCgpICsgMSkudG9TdHJpbmcoKSA6IFwieXl5eVwiID09PSBtYXRjaFswXSA/IGRhdGUgKz0gdG9kYXkuZ2V0RnVsbFllYXIoKS50b1N0cmluZygpIDogXCJ5eVwiID09PSBtYXRjaFswXSAmJiAoZGF0ZSArPSB0b2RheS5nZXRZZWFyKCkudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnB1dC5pbnB1dG1hc2suX3ZhbHVlU2V0KGRhdGUpLCAkKGlucHV0KS50cmlnZ2VyKFwic2V0dmFsdWVcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uVW5NYXNrOiBmdW5jdGlvbihtYXNrZWRWYWx1ZSwgdW5tYXNrZWRWYWx1ZSwgb3B0cykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcGFyc2Uob3B0cy5vdXRwdXRGb3JtYXQsIGFuYWx5c2VNYXNrKG1hc2tlZFZhbHVlLCBvcHRzLmlucHV0Rm9ybWF0LCBvcHRzKSwgb3B0cyk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBpbnNlcnRNb2RlOiAhMVxuICAgICAgICAgICAgfVxuICAgICAgICB9KSwgSW5wdXRtYXNrO1xuICAgIH0pO1xufSwgZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgdmFyIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fO1xuICAgIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFN5bWJvbC5pdGVyYXRvcjtcbiAgICB2b2lkIDAgIT09IChfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gd2luZG93O1xuICAgIH0uY2FsbChleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fLCBleHBvcnRzLCBtb2R1bGUpKSAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyk7XG59LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICB2YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187XG4gICAgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgU3ltYm9sLml0ZXJhdG9yO1xuICAgIHZvaWQgMCAhPT0gKF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBkb2N1bWVudDtcbiAgICB9LmNhbGwoZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXywgZXhwb3J0cywgbW9kdWxlKSkgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pO1xufSwgZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgdmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187XG4gICAgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgU3ltYm9sLml0ZXJhdG9yO1xuICAgICFmdW5jdGlvbihmYWN0b3J5KSB7XG4gICAgICAgIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18gPSBbIF9fd2VicGFja19yZXF1aXJlX18oMCksIF9fd2VicGFja19yZXF1aXJlX18oMSkgXSwgXG4gICAgICAgIHZvaWQgMCAhPT0gKF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiAoX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fID0gZmFjdG9yeSkgPyBfX1dFQlBBQ0tfQU1EX0RFRklORV9GQUNUT1JZX18uYXBwbHkoZXhwb3J0cywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXykgOiBfX1dFQlBBQ0tfQU1EX0RFRklORV9GQUNUT1JZX18pICYmIChtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fKTtcbiAgICB9KGZ1bmN0aW9uKCQsIElucHV0bWFzaykge1xuICAgICAgICByZXR1cm4gSW5wdXRtYXNrLmV4dGVuZERlZmluaXRpb25zKHtcbiAgICAgICAgICAgIEE6IHtcbiAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IFwiW0EtWmEtetCQLdGP0IHRkcOALcO/wrVdXCIsXG4gICAgICAgICAgICAgICAgY2FzaW5nOiBcInVwcGVyXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIiZcIjoge1xuICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogXCJbMC05QS1aYS160JAt0Y/QgdGRw4Atw7/CtV1cIixcbiAgICAgICAgICAgICAgICBjYXNpbmc6IFwidXBwZXJcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiI1wiOiB7XG4gICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBcIlswLTlBLUZhLWZdXCIsXG4gICAgICAgICAgICAgICAgY2FzaW5nOiBcInVwcGVyXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSksIElucHV0bWFzay5leHRlbmRBbGlhc2VzKHtcbiAgICAgICAgICAgIHVybDoge1xuICAgICAgICAgICAgICAgIGRlZmluaXRpb25zOiB7XG4gICAgICAgICAgICAgICAgICAgIGk6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogXCIuXCJcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbWFzazogXCIoXFxcXGh0dHA6Ly8pfChcXFxcaHR0cFxcXFxzOi8vKXwoZnRwOi8vKXwoZnRwXFxcXHM6Ly8paXsrfVwiLFxuICAgICAgICAgICAgICAgIGluc2VydE1vZGU6ICExLFxuICAgICAgICAgICAgICAgIGF1dG9Vbm1hc2s6ICExLFxuICAgICAgICAgICAgICAgIGlucHV0bW9kZTogXCJ1cmxcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGlwOiB7XG4gICAgICAgICAgICAgICAgbWFzazogXCJpW2lbaV1dLmlbaVtpXV0uaVtpW2ldXS5pW2lbaV1dXCIsXG4gICAgICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHtcbiAgICAgICAgICAgICAgICAgICAgaToge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbihjaHJzLCBtYXNrc2V0LCBwb3MsIHN0cmljdCwgb3B0cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwb3MgLSAxID4gLTEgJiYgXCIuXCIgIT09IG1hc2tzZXQuYnVmZmVyW3BvcyAtIDFdID8gKGNocnMgPSBtYXNrc2V0LmJ1ZmZlcltwb3MgLSAxXSArIGNocnMsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNocnMgPSBwb3MgLSAyID4gLTEgJiYgXCIuXCIgIT09IG1hc2tzZXQuYnVmZmVyW3BvcyAtIDJdID8gbWFza3NldC5idWZmZXJbcG9zIC0gMl0gKyBjaHJzIDogXCIwXCIgKyBjaHJzKSA6IGNocnMgPSBcIjAwXCIgKyBjaHJzLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXcgUmVnRXhwKFwiMjVbMC01XXwyWzAtNF1bMC05XXxbMDFdWzAtOV1bMC05XVwiKS50ZXN0KGNocnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBvblVuTWFzazogZnVuY3Rpb24obWFza2VkVmFsdWUsIHVubWFza2VkVmFsdWUsIG9wdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1hc2tlZFZhbHVlO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgaW5wdXRtb2RlOiBcIm51bWVyaWNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVtYWlsOiB7XG4gICAgICAgICAgICAgICAgbWFzazogXCIqezEsNjR9Wy4qezEsNjR9XVsuKnsxLDY0fV1bLip7MSw2M31dQC17MSw2M30uLXsxLDYzfVsuLXsxLDYzfV1bLi17MSw2M31dXCIsXG4gICAgICAgICAgICAgICAgZ3JlZWR5OiAhMSxcbiAgICAgICAgICAgICAgICBvbkJlZm9yZVBhc3RlOiBmdW5jdGlvbihwYXN0ZWRWYWx1ZSwgb3B0cykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKHBhc3RlZFZhbHVlID0gcGFzdGVkVmFsdWUudG9Mb3dlckNhc2UoKSkucmVwbGFjZShcIm1haWx0bzpcIiwgXCJcIik7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBkZWZpbml0aW9uczoge1xuICAgICAgICAgICAgICAgICAgICBcIipcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBcIlswLTlBLVphLXohIyQlJicqKy89P15fYHt8fX4tXVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzaW5nOiBcImxvd2VyXCJcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCItXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogXCJbMC05QS1aYS16LV1cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2luZzogXCJsb3dlclwiXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uVW5NYXNrOiBmdW5jdGlvbihtYXNrZWRWYWx1ZSwgdW5tYXNrZWRWYWx1ZSwgb3B0cykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWFza2VkVmFsdWU7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBpbnB1dG1vZGU6IFwiZW1haWxcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1hYzoge1xuICAgICAgICAgICAgICAgIG1hc2s6IFwiIyM6IyM6IyM6IyM6IyM6IyNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHZpbjoge1xuICAgICAgICAgICAgICAgIG1hc2s6IFwiVnsxM305ezR9XCIsXG4gICAgICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHtcbiAgICAgICAgICAgICAgICAgICAgVjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBcIltBLUhKLU5QUi1aYS1oai1ucHItelxcXFxkXVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzaW5nOiBcInVwcGVyXCJcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2xlYXJJbmNvbXBsZXRlOiAhMCxcbiAgICAgICAgICAgICAgICBhdXRvVW5tYXNrOiAhMFxuICAgICAgICAgICAgfVxuICAgICAgICB9KSwgSW5wdXRtYXNrO1xuICAgIH0pO1xufSwgZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgdmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXywgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187XG4gICAgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgU3ltYm9sLml0ZXJhdG9yO1xuICAgICFmdW5jdGlvbihmYWN0b3J5KSB7XG4gICAgICAgIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18gPSBbIF9fd2VicGFja19yZXF1aXJlX18oMCksIF9fd2VicGFja19yZXF1aXJlX18oMSkgXSwgXG4gICAgICAgIHZvaWQgMCAhPT0gKF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiAoX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fID0gZmFjdG9yeSkgPyBfX1dFQlBBQ0tfQU1EX0RFRklORV9GQUNUT1JZX18uYXBwbHkoZXhwb3J0cywgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXykgOiBfX1dFQlBBQ0tfQU1EX0RFRklORV9GQUNUT1JZX18pICYmIChtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fKTtcbiAgICB9KGZ1bmN0aW9uKCQsIElucHV0bWFzaywgdW5kZWZpbmVkKSB7XG4gICAgICAgIGZ1bmN0aW9uIGF1dG9Fc2NhcGUodHh0LCBvcHRzKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBlc2NhcGVkVHh0ID0gXCJcIiwgaSA9IDA7IGkgPCB0eHQubGVuZ3RoOyBpKyspIElucHV0bWFzay5wcm90b3R5cGUuZGVmaW5pdGlvbnNbdHh0LmNoYXJBdChpKV0gfHwgb3B0cy5kZWZpbml0aW9uc1t0eHQuY2hhckF0KGkpXSB8fCBvcHRzLm9wdGlvbmFsbWFya2VyLnN0YXJ0ID09PSB0eHQuY2hhckF0KGkpIHx8IG9wdHMub3B0aW9uYWxtYXJrZXIuZW5kID09PSB0eHQuY2hhckF0KGkpIHx8IG9wdHMucXVhbnRpZmllcm1hcmtlci5zdGFydCA9PT0gdHh0LmNoYXJBdChpKSB8fCBvcHRzLnF1YW50aWZpZXJtYXJrZXIuZW5kID09PSB0eHQuY2hhckF0KGkpIHx8IG9wdHMuZ3JvdXBtYXJrZXIuc3RhcnQgPT09IHR4dC5jaGFyQXQoaSkgfHwgb3B0cy5ncm91cG1hcmtlci5lbmQgPT09IHR4dC5jaGFyQXQoaSkgfHwgb3B0cy5hbHRlcm5hdG9ybWFya2VyID09PSB0eHQuY2hhckF0KGkpID8gZXNjYXBlZFR4dCArPSBcIlxcXFxcIiArIHR4dC5jaGFyQXQoaSkgOiBlc2NhcGVkVHh0ICs9IHR4dC5jaGFyQXQoaSk7XG4gICAgICAgICAgICByZXR1cm4gZXNjYXBlZFR4dDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gSW5wdXRtYXNrLmV4dGVuZEFsaWFzZXMoe1xuICAgICAgICAgICAgbnVtZXJpYzoge1xuICAgICAgICAgICAgICAgIG1hc2s6IGZ1bmN0aW9uKG9wdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKDAgIT09IG9wdHMucmVwZWF0ICYmIGlzTmFOKG9wdHMuaW50ZWdlckRpZ2l0cykgJiYgKG9wdHMuaW50ZWdlckRpZ2l0cyA9IG9wdHMucmVwZWF0KSwgXG4gICAgICAgICAgICAgICAgICAgIG9wdHMucmVwZWF0ID0gMCwgb3B0cy5ncm91cFNlcGFyYXRvciA9PT0gb3B0cy5yYWRpeFBvaW50ICYmIG9wdHMuZGlnaXRzICYmIFwiMFwiICE9PSBvcHRzLmRpZ2l0cyAmJiAoXCIuXCIgPT09IG9wdHMucmFkaXhQb2ludCA/IG9wdHMuZ3JvdXBTZXBhcmF0b3IgPSBcIixcIiA6IFwiLFwiID09PSBvcHRzLnJhZGl4UG9pbnQgPyBvcHRzLmdyb3VwU2VwYXJhdG9yID0gXCIuXCIgOiBvcHRzLmdyb3VwU2VwYXJhdG9yID0gXCJcIiksIFxuICAgICAgICAgICAgICAgICAgICBcIiBcIiA9PT0gb3B0cy5ncm91cFNlcGFyYXRvciAmJiAob3B0cy5za2lwT3B0aW9uYWxQYXJ0Q2hhcmFjdGVyID0gdW5kZWZpbmVkKSwgb3B0cy5hdXRvR3JvdXAgPSBvcHRzLmF1dG9Hcm91cCAmJiBcIlwiICE9PSBvcHRzLmdyb3VwU2VwYXJhdG9yLCBcbiAgICAgICAgICAgICAgICAgICAgb3B0cy5hdXRvR3JvdXAgJiYgKFwic3RyaW5nXCIgPT0gdHlwZW9mIG9wdHMuZ3JvdXBTaXplICYmIGlzRmluaXRlKG9wdHMuZ3JvdXBTaXplKSAmJiAob3B0cy5ncm91cFNpemUgPSBwYXJzZUludChvcHRzLmdyb3VwU2l6ZSkpLCBcbiAgICAgICAgICAgICAgICAgICAgaXNGaW5pdGUob3B0cy5pbnRlZ2VyRGlnaXRzKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzZXBzID0gTWF0aC5mbG9vcihvcHRzLmludGVnZXJEaWdpdHMgLyBvcHRzLmdyb3VwU2l6ZSksIG1vZCA9IG9wdHMuaW50ZWdlckRpZ2l0cyAlIG9wdHMuZ3JvdXBTaXplO1xuICAgICAgICAgICAgICAgICAgICAgICAgb3B0cy5pbnRlZ2VyRGlnaXRzID0gcGFyc2VJbnQob3B0cy5pbnRlZ2VyRGlnaXRzKSArICgwID09PSBtb2QgPyBzZXBzIC0gMSA6IHNlcHMpLCBcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdHMuaW50ZWdlckRpZ2l0cyA8IDEgJiYgKG9wdHMuaW50ZWdlckRpZ2l0cyA9IFwiKlwiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBvcHRzLnBsYWNlaG9sZGVyLmxlbmd0aCA+IDEgJiYgKG9wdHMucGxhY2Vob2xkZXIgPSBvcHRzLnBsYWNlaG9sZGVyLmNoYXJBdCgwKSksIFxuICAgICAgICAgICAgICAgICAgICBcInJhZGl4Rm9jdXNcIiA9PT0gb3B0cy5wb3NpdGlvbkNhcmV0T25DbGljayAmJiBcIlwiID09PSBvcHRzLnBsYWNlaG9sZGVyICYmICExID09PSBvcHRzLmludGVnZXJPcHRpb25hbCAmJiAob3B0cy5wb3NpdGlvbkNhcmV0T25DbGljayA9IFwibHZwXCIpLCBcbiAgICAgICAgICAgICAgICAgICAgb3B0cy5kZWZpbml0aW9uc1tcIjtcIl0gPSBvcHRzLmRlZmluaXRpb25zW1wiflwiXSwgb3B0cy5kZWZpbml0aW9uc1tcIjtcIl0uZGVmaW5pdGlvblN5bWJvbCA9IFwiflwiLCBcbiAgICAgICAgICAgICAgICAgICAgITAgPT09IG9wdHMubnVtZXJpY0lucHV0ICYmIChvcHRzLnBvc2l0aW9uQ2FyZXRPbkNsaWNrID0gXCJyYWRpeEZvY3VzXCIgPT09IG9wdHMucG9zaXRpb25DYXJldE9uQ2xpY2sgPyBcImx2cFwiIDogb3B0cy5wb3NpdGlvbkNhcmV0T25DbGljaywgXG4gICAgICAgICAgICAgICAgICAgIG9wdHMuZGlnaXRzT3B0aW9uYWwgPSAhMSwgaXNOYU4ob3B0cy5kaWdpdHMpICYmIChvcHRzLmRpZ2l0cyA9IDIpLCBvcHRzLmRlY2ltYWxQcm90ZWN0ID0gITEpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgbWFzayA9IFwiWytdXCI7XG4gICAgICAgICAgICAgICAgICAgIGlmIChtYXNrICs9IGF1dG9Fc2NhcGUob3B0cy5wcmVmaXgsIG9wdHMpLCAhMCA9PT0gb3B0cy5pbnRlZ2VyT3B0aW9uYWwgPyBtYXNrICs9IFwifnsxLFwiICsgb3B0cy5pbnRlZ2VyRGlnaXRzICsgXCJ9XCIgOiBtYXNrICs9IFwifntcIiArIG9wdHMuaW50ZWdlckRpZ2l0cyArIFwifVwiLCBcbiAgICAgICAgICAgICAgICAgICAgb3B0cy5kaWdpdHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgb3B0cy5yYWRpeFBvaW50RGVmaW5pdGlvblN5bWJvbCA9IG9wdHMuZGVjaW1hbFByb3RlY3QgPyBcIjpcIiA6IG9wdHMucmFkaXhQb2ludDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkcSA9IG9wdHMuZGlnaXRzLnRvU3RyaW5nKCkuc3BsaXQoXCIsXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaXNGaW5pdGUoZHFbMF0gJiYgZHFbMV0gJiYgaXNGaW5pdGUoZHFbMV0pKSA/IG1hc2sgKz0gb3B0cy5yYWRpeFBvaW50RGVmaW5pdGlvblN5bWJvbCArIFwiO3tcIiArIG9wdHMuZGlnaXRzICsgXCJ9XCIgOiAoaXNOYU4ob3B0cy5kaWdpdHMpIHx8IHBhcnNlSW50KG9wdHMuZGlnaXRzKSA+IDApICYmIChvcHRzLmRpZ2l0c09wdGlvbmFsID8gbWFzayArPSBcIltcIiArIG9wdHMucmFkaXhQb2ludERlZmluaXRpb25TeW1ib2wgKyBcIjt7MSxcIiArIG9wdHMuZGlnaXRzICsgXCJ9XVwiIDogbWFzayArPSBvcHRzLnJhZGl4UG9pbnREZWZpbml0aW9uU3ltYm9sICsgXCI7e1wiICsgb3B0cy5kaWdpdHMgKyBcIn1cIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1hc2sgKz0gYXV0b0VzY2FwZShvcHRzLnN1ZmZpeCwgb3B0cyksIG1hc2sgKz0gXCJbLV1cIiwgb3B0cy5ncmVlZHkgPSAhMSwgbWFzaztcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIlwiLFxuICAgICAgICAgICAgICAgIGdyZWVkeTogITEsXG4gICAgICAgICAgICAgICAgZGlnaXRzOiBcIipcIixcbiAgICAgICAgICAgICAgICBkaWdpdHNPcHRpb25hbDogITAsXG4gICAgICAgICAgICAgICAgZW5mb3JjZURpZ2l0c09uQmx1cjogITEsXG4gICAgICAgICAgICAgICAgcmFkaXhQb2ludDogXCIuXCIsXG4gICAgICAgICAgICAgICAgcG9zaXRpb25DYXJldE9uQ2xpY2s6IFwicmFkaXhGb2N1c1wiLFxuICAgICAgICAgICAgICAgIGdyb3VwU2l6ZTogMyxcbiAgICAgICAgICAgICAgICBncm91cFNlcGFyYXRvcjogXCJcIixcbiAgICAgICAgICAgICAgICBhdXRvR3JvdXA6ICExLFxuICAgICAgICAgICAgICAgIGFsbG93TWludXM6ICEwLFxuICAgICAgICAgICAgICAgIG5lZ2F0aW9uU3ltYm9sOiB7XG4gICAgICAgICAgICAgICAgICAgIGZyb250OiBcIi1cIixcbiAgICAgICAgICAgICAgICAgICAgYmFjazogXCJcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgaW50ZWdlckRpZ2l0czogXCIrXCIsXG4gICAgICAgICAgICAgICAgaW50ZWdlck9wdGlvbmFsOiAhMCxcbiAgICAgICAgICAgICAgICBwcmVmaXg6IFwiXCIsXG4gICAgICAgICAgICAgICAgc3VmZml4OiBcIlwiLFxuICAgICAgICAgICAgICAgIHJpZ2h0QWxpZ246ICEwLFxuICAgICAgICAgICAgICAgIGRlY2ltYWxQcm90ZWN0OiAhMCxcbiAgICAgICAgICAgICAgICBtaW46IG51bGwsXG4gICAgICAgICAgICAgICAgbWF4OiBudWxsLFxuICAgICAgICAgICAgICAgIHN0ZXA6IDEsXG4gICAgICAgICAgICAgICAgaW5zZXJ0TW9kZTogITAsXG4gICAgICAgICAgICAgICAgYXV0b1VubWFzazogITEsXG4gICAgICAgICAgICAgICAgdW5tYXNrQXNOdW1iZXI6ICExLFxuICAgICAgICAgICAgICAgIGlucHV0bW9kZTogXCJudW1lcmljXCIsXG4gICAgICAgICAgICAgICAgcHJlVmFsaWRhdGlvbjogZnVuY3Rpb24oYnVmZmVyLCBwb3MsIGMsIGlzU2VsZWN0aW9uLCBvcHRzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChcIi1cIiA9PT0gYyB8fCBjID09PSBvcHRzLm5lZ2F0aW9uU3ltYm9sLmZyb250KSByZXR1cm4gITAgPT09IG9wdHMuYWxsb3dNaW51cyAmJiAob3B0cy5pc05lZ2F0aXZlID0gb3B0cy5pc05lZ2F0aXZlID09PSB1bmRlZmluZWQgfHwgIW9wdHMuaXNOZWdhdGl2ZSwgXG4gICAgICAgICAgICAgICAgICAgIFwiXCIgPT09IGJ1ZmZlci5qb2luKFwiXCIpIHx8IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0OiBwb3MsXG4gICAgICAgICAgICAgICAgICAgICAgICBkb3Bvc3Q6ICEwXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBpZiAoITEgPT09IGlzU2VsZWN0aW9uICYmIGMgPT09IG9wdHMucmFkaXhQb2ludCAmJiBvcHRzLmRpZ2l0cyAhPT0gdW5kZWZpbmVkICYmIChpc05hTihvcHRzLmRpZ2l0cykgfHwgcGFyc2VJbnQob3B0cy5kaWdpdHMpID4gMCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByYWRpeFBvcyA9ICQuaW5BcnJheShvcHRzLnJhZGl4UG9pbnQsIGJ1ZmZlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoLTEgIT09IHJhZGl4UG9zKSByZXR1cm4gITAgPT09IG9wdHMubnVtZXJpY0lucHV0ID8gcG9zID09PSByYWRpeFBvcyA6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJldDogcmFkaXhQb3MgKyAxXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAhMDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHBvc3RWYWxpZGF0aW9uOiBmdW5jdGlvbihidWZmZXIsIGN1cnJlbnRSZXN1bHQsIG9wdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN1ZmZpeCA9IG9wdHMuc3VmZml4LnNwbGl0KFwiXCIpLCBwcmVmaXggPSBvcHRzLnByZWZpeC5zcGxpdChcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRSZXN1bHQucG9zID09PSB1bmRlZmluZWQgJiYgY3VycmVudFJlc3VsdC5jYXJldCAhPT0gdW5kZWZpbmVkICYmICEwICE9PSBjdXJyZW50UmVzdWx0LmRvcG9zdCkgcmV0dXJuIGN1cnJlbnRSZXN1bHQ7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjYXJldFBvcyA9IGN1cnJlbnRSZXN1bHQuY2FyZXQgIT09IHVuZGVmaW5lZCA/IGN1cnJlbnRSZXN1bHQuY2FyZXQgOiBjdXJyZW50UmVzdWx0LnBvcywgbWFza2VkVmFsdWUgPSBidWZmZXIuc2xpY2UoKTtcbiAgICAgICAgICAgICAgICAgICAgb3B0cy5udW1lcmljSW5wdXQgJiYgKGNhcmV0UG9zID0gbWFza2VkVmFsdWUubGVuZ3RoIC0gY2FyZXRQb3MgLSAxLCBtYXNrZWRWYWx1ZSA9IG1hc2tlZFZhbHVlLnJldmVyc2UoKSk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjaGFyQXRQb3MgPSBtYXNrZWRWYWx1ZVtjYXJldFBvc107XG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGFyQXRQb3MgPT09IG9wdHMuZ3JvdXBTZXBhcmF0b3IgJiYgKGNoYXJBdFBvcyA9IG1hc2tlZFZhbHVlW2NhcmV0UG9zICs9IDFdKSwgXG4gICAgICAgICAgICAgICAgICAgIGNhcmV0UG9zID09PSBtYXNrZWRWYWx1ZS5sZW5ndGggLSBvcHRzLnN1ZmZpeC5sZW5ndGggLSAxICYmIGNoYXJBdFBvcyA9PT0gb3B0cy5yYWRpeFBvaW50KSByZXR1cm4gY3VycmVudFJlc3VsdDtcbiAgICAgICAgICAgICAgICAgICAgY2hhckF0UG9zICE9PSB1bmRlZmluZWQgJiYgY2hhckF0UG9zICE9PSBvcHRzLnJhZGl4UG9pbnQgJiYgY2hhckF0UG9zICE9PSBvcHRzLm5lZ2F0aW9uU3ltYm9sLmZyb250ICYmIGNoYXJBdFBvcyAhPT0gb3B0cy5uZWdhdGlvblN5bWJvbC5iYWNrICYmIChtYXNrZWRWYWx1ZVtjYXJldFBvc10gPSBcIj9cIiwgXG4gICAgICAgICAgICAgICAgICAgIG9wdHMucHJlZml4Lmxlbmd0aCA+IDAgJiYgY2FyZXRQb3MgPj0gKCExID09PSBvcHRzLmlzTmVnYXRpdmUgPyAxIDogMCkgJiYgY2FyZXRQb3MgPCBvcHRzLnByZWZpeC5sZW5ndGggLSAxICsgKCExID09PSBvcHRzLmlzTmVnYXRpdmUgPyAxIDogMCkgPyBwcmVmaXhbY2FyZXRQb3MgLSAoITEgPT09IG9wdHMuaXNOZWdhdGl2ZSA/IDEgOiAwKV0gPSBcIj9cIiA6IG9wdHMuc3VmZml4Lmxlbmd0aCA+IDAgJiYgY2FyZXRQb3MgPj0gbWFza2VkVmFsdWUubGVuZ3RoIC0gb3B0cy5zdWZmaXgubGVuZ3RoIC0gKCExID09PSBvcHRzLmlzTmVnYXRpdmUgPyAxIDogMCkgJiYgKHN1ZmZpeFtjYXJldFBvcyAtIChtYXNrZWRWYWx1ZS5sZW5ndGggLSBvcHRzLnN1ZmZpeC5sZW5ndGggLSAoITEgPT09IG9wdHMuaXNOZWdhdGl2ZSA/IDEgOiAwKSldID0gXCI/XCIpKSwgXG4gICAgICAgICAgICAgICAgICAgIHByZWZpeCA9IHByZWZpeC5qb2luKFwiXCIpLCBzdWZmaXggPSBzdWZmaXguam9pbihcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHByb2Nlc3NWYWx1ZSA9IG1hc2tlZFZhbHVlLmpvaW4oXCJcIikucmVwbGFjZShwcmVmaXgsIFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLnJlcGxhY2Uoc3VmZml4LCBcIlwiKSwgcHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLnJlcGxhY2UobmV3IFJlZ0V4cChJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5ncm91cFNlcGFyYXRvciksIFwiZ1wiKSwgXCJcIiksIFxuICAgICAgICAgICAgICAgICAgICBwcm9jZXNzVmFsdWUgPSBwcm9jZXNzVmFsdWUucmVwbGFjZShuZXcgUmVnRXhwKFwiWy1cIiArIElucHV0bWFzay5lc2NhcGVSZWdleChvcHRzLm5lZ2F0aW9uU3ltYm9sLmZyb250KSArIFwiXVwiLCBcImdcIiksIFwiXCIpLCBcbiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLnJlcGxhY2UobmV3IFJlZ0V4cChJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5uZWdhdGlvblN5bWJvbC5iYWNrKSArIFwiJFwiKSwgXCJcIiksIFxuICAgICAgICAgICAgICAgICAgICBpc05hTihvcHRzLnBsYWNlaG9sZGVyKSAmJiAocHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLnJlcGxhY2UobmV3IFJlZ0V4cChJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5wbGFjZWhvbGRlciksIFwiZ1wiKSwgXCJcIikpLCBcbiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc1ZhbHVlLmxlbmd0aCA+IDEgJiYgMSAhPT0gcHJvY2Vzc1ZhbHVlLmluZGV4T2Yob3B0cy5yYWRpeFBvaW50KSAmJiAoXCIwXCIgPT09IGNoYXJBdFBvcyAmJiAocHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLnJlcGxhY2UoL15cXD8vZywgXCJcIikpLCBcbiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLnJlcGxhY2UoL14wL2csIFwiXCIpKSwgcHJvY2Vzc1ZhbHVlLmNoYXJBdCgwKSA9PT0gb3B0cy5yYWRpeFBvaW50ICYmIFwiXCIgIT09IG9wdHMucmFkaXhQb2ludCAmJiAhMCAhPT0gb3B0cy5udW1lcmljSW5wdXQgJiYgKHByb2Nlc3NWYWx1ZSA9IFwiMFwiICsgcHJvY2Vzc1ZhbHVlKSwgXG4gICAgICAgICAgICAgICAgICAgIFwiXCIgIT09IHByb2Nlc3NWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByb2Nlc3NWYWx1ZSA9IHByb2Nlc3NWYWx1ZS5zcGxpdChcIlwiKSwgKCFvcHRzLmRpZ2l0c09wdGlvbmFsIHx8IG9wdHMuZW5mb3JjZURpZ2l0c09uQmx1ciAmJiBcImJsdXJcIiA9PT0gY3VycmVudFJlc3VsdC5ldmVudCkgJiYgaXNGaW5pdGUob3B0cy5kaWdpdHMpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJhZGl4UG9zaXRpb24gPSAkLmluQXJyYXkob3B0cy5yYWRpeFBvaW50LCBwcm9jZXNzVmFsdWUpLCBycGIgPSAkLmluQXJyYXkob3B0cy5yYWRpeFBvaW50LCBtYXNrZWRWYWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLTEgPT09IHJhZGl4UG9zaXRpb24gJiYgKHByb2Nlc3NWYWx1ZS5wdXNoKG9wdHMucmFkaXhQb2ludCksIHJhZGl4UG9zaXRpb24gPSBwcm9jZXNzVmFsdWUubGVuZ3RoIC0gMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPD0gb3B0cy5kaWdpdHM7IGkrKykgb3B0cy5kaWdpdHNPcHRpb25hbCAmJiAoIW9wdHMuZW5mb3JjZURpZ2l0c09uQmx1ciB8fCBcImJsdXJcIiAhPT0gY3VycmVudFJlc3VsdC5ldmVudCkgfHwgcHJvY2Vzc1ZhbHVlW3JhZGl4UG9zaXRpb24gKyBpXSAhPT0gdW5kZWZpbmVkICYmIHByb2Nlc3NWYWx1ZVtyYWRpeFBvc2l0aW9uICsgaV0gIT09IG9wdHMucGxhY2Vob2xkZXIuY2hhckF0KDApID8gLTEgIT09IHJwYiAmJiBtYXNrZWRWYWx1ZVtycGIgKyBpXSAhPT0gdW5kZWZpbmVkICYmIChwcm9jZXNzVmFsdWVbcmFkaXhQb3NpdGlvbiArIGldID0gcHJvY2Vzc1ZhbHVlW3JhZGl4UG9zaXRpb24gKyBpXSB8fCBtYXNrZWRWYWx1ZVtycGIgKyBpXSkgOiBwcm9jZXNzVmFsdWVbcmFkaXhQb3NpdGlvbiArIGldID0gY3VycmVudFJlc3VsdC5wbGFjZWhvbGRlciB8fCBvcHRzLnBsYWNlaG9sZGVyLmNoYXJBdCgwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghMCAhPT0gb3B0cy5hdXRvR3JvdXAgfHwgXCJcIiA9PT0gb3B0cy5ncm91cFNlcGFyYXRvciB8fCBjaGFyQXRQb3MgPT09IG9wdHMucmFkaXhQb2ludCAmJiBjdXJyZW50UmVzdWx0LnBvcyA9PT0gdW5kZWZpbmVkICYmICFjdXJyZW50UmVzdWx0LmRvcG9zdCkgcHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLmpvaW4oXCJcIik7IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhZGRSYWRpeCA9IHByb2Nlc3NWYWx1ZVtwcm9jZXNzVmFsdWUubGVuZ3RoIC0gMV0gPT09IG9wdHMucmFkaXhQb2ludCAmJiBjdXJyZW50UmVzdWx0LmMgPT09IG9wdHMucmFkaXhQb2ludDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzVmFsdWUgPSBJbnB1dG1hc2soZnVuY3Rpb24oYnVmZmVyLCBvcHRzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwb3N0TWFzayA9IFwiXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwb3N0TWFzayArPSBcIihcIiArIG9wdHMuZ3JvdXBTZXBhcmF0b3IgKyBcIip7XCIgKyBvcHRzLmdyb3VwU2l6ZSArIFwifSl7Kn1cIiwgXCJcIiAhPT0gb3B0cy5yYWRpeFBvaW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmFkaXhTcGxpdCA9IGJ1ZmZlci5qb2luKFwiXCIpLnNwbGl0KG9wdHMucmFkaXhQb2ludCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYWRpeFNwbGl0WzFdICYmIChwb3N0TWFzayArPSBvcHRzLnJhZGl4UG9pbnQgKyBcIip7XCIgKyByYWRpeFNwbGl0WzFdLm1hdGNoKC9eXFxkKlxcPz9cXGQqLylbMF0ubGVuZ3RoICsgXCJ9XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwb3N0TWFzaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KHByb2Nlc3NWYWx1ZSwgb3B0cyksIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbnVtZXJpY0lucHV0OiAhMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaml0TWFza2luZzogITAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmluaXRpb25zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIipcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogXCJbMC05P11cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJkaW5hbGl0eTogMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkuZm9ybWF0KHByb2Nlc3NWYWx1ZS5qb2luKFwiXCIpKSwgYWRkUmFkaXggJiYgKHByb2Nlc3NWYWx1ZSArPSBvcHRzLnJhZGl4UG9pbnQpLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzVmFsdWUuY2hhckF0KDApID09PSBvcHRzLmdyb3VwU2VwYXJhdG9yICYmIHByb2Nlc3NWYWx1ZS5zdWJzdHIoMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wdHMuaXNOZWdhdGl2ZSAmJiBcImJsdXJcIiA9PT0gY3VycmVudFJlc3VsdC5ldmVudCAmJiAob3B0cy5pc05lZ2F0aXZlID0gXCIwXCIgIT09IHByb2Nlc3NWYWx1ZSksIFxuICAgICAgICAgICAgICAgICAgICBwcm9jZXNzVmFsdWUgPSBwcmVmaXggKyBwcm9jZXNzVmFsdWUsIHByb2Nlc3NWYWx1ZSArPSBzdWZmaXgsIG9wdHMuaXNOZWdhdGl2ZSAmJiAocHJvY2Vzc1ZhbHVlID0gb3B0cy5uZWdhdGlvblN5bWJvbC5mcm9udCArIHByb2Nlc3NWYWx1ZSwgXG4gICAgICAgICAgICAgICAgICAgIHByb2Nlc3NWYWx1ZSArPSBvcHRzLm5lZ2F0aW9uU3ltYm9sLmJhY2spLCBwcm9jZXNzVmFsdWUgPSBwcm9jZXNzVmFsdWUuc3BsaXQoXCJcIiksIFxuICAgICAgICAgICAgICAgICAgICBjaGFyQXRQb3MgIT09IHVuZGVmaW5lZCkgaWYgKGNoYXJBdFBvcyAhPT0gb3B0cy5yYWRpeFBvaW50ICYmIGNoYXJBdFBvcyAhPT0gb3B0cy5uZWdhdGlvblN5bWJvbC5mcm9udCAmJiBjaGFyQXRQb3MgIT09IG9wdHMubmVnYXRpb25TeW1ib2wuYmFjaykgKGNhcmV0UG9zID0gJC5pbkFycmF5KFwiP1wiLCBwcm9jZXNzVmFsdWUpKSA+IC0xID8gcHJvY2Vzc1ZhbHVlW2NhcmV0UG9zXSA9IGNoYXJBdFBvcyA6IGNhcmV0UG9zID0gY3VycmVudFJlc3VsdC5jYXJldCB8fCAwOyBlbHNlIGlmIChjaGFyQXRQb3MgPT09IG9wdHMucmFkaXhQb2ludCB8fCBjaGFyQXRQb3MgPT09IG9wdHMubmVnYXRpb25TeW1ib2wuZnJvbnQgfHwgY2hhckF0UG9zID09PSBvcHRzLm5lZ2F0aW9uU3ltYm9sLmJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuZXdDYXJldFBvcyA9ICQuaW5BcnJheShjaGFyQXRQb3MsIHByb2Nlc3NWYWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAtMSAhPT0gbmV3Q2FyZXRQb3MgJiYgKGNhcmV0UG9zID0gbmV3Q2FyZXRQb3MpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIG9wdHMubnVtZXJpY0lucHV0ICYmIChjYXJldFBvcyA9IHByb2Nlc3NWYWx1ZS5sZW5ndGggLSBjYXJldFBvcyAtIDEsIHByb2Nlc3NWYWx1ZSA9IHByb2Nlc3NWYWx1ZS5yZXZlcnNlKCkpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcnNsdCA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0OiBjaGFyQXRQb3MgPT09IHVuZGVmaW5lZCB8fCBjdXJyZW50UmVzdWx0LnBvcyAhPT0gdW5kZWZpbmVkID8gY2FyZXRQb3MgKyAob3B0cy5udW1lcmljSW5wdXQgPyAtMSA6IDEpIDogY2FyZXRQb3MsXG4gICAgICAgICAgICAgICAgICAgICAgICBidWZmZXI6IHByb2Nlc3NWYWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZnJlc2hGcm9tQnVmZmVyOiBjdXJyZW50UmVzdWx0LmRvcG9zdCB8fCBidWZmZXIuam9pbihcIlwiKSAhPT0gcHJvY2Vzc1ZhbHVlLmpvaW4oXCJcIilcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJzbHQucmVmcmVzaEZyb21CdWZmZXIgPyByc2x0IDogY3VycmVudFJlc3VsdDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uQmVmb3JlV3JpdGU6IGZ1bmN0aW9uKGUsIGJ1ZmZlciwgY2FyZXRQb3MsIG9wdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGUpIHN3aXRjaCAoZS50eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImtleWRvd25cIjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvcHRzLnBvc3RWYWxpZGF0aW9uKGJ1ZmZlciwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0OiBjYXJldFBvcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3Bvc3Q6ICEwXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBvcHRzKTtcblxuICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJibHVyXCI6XG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImNoZWNrdmFsXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdW5tYXNrZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZnVuY3Rpb24ob3B0cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdHMucGFyc2VNaW5NYXhPcHRpb25zID09PSB1bmRlZmluZWQgJiYgKG51bGwgIT09IG9wdHMubWluICYmIChvcHRzLm1pbiA9IG9wdHMubWluLnRvU3RyaW5nKCkucmVwbGFjZShuZXcgUmVnRXhwKElucHV0bWFzay5lc2NhcGVSZWdleChvcHRzLmdyb3VwU2VwYXJhdG9yKSwgXCJnXCIpLCBcIlwiKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIsXCIgPT09IG9wdHMucmFkaXhQb2ludCAmJiAob3B0cy5taW4gPSBvcHRzLm1pbi5yZXBsYWNlKG9wdHMucmFkaXhQb2ludCwgXCIuXCIpKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0cy5taW4gPSBpc0Zpbml0ZShvcHRzLm1pbikgPyBwYXJzZUZsb2F0KG9wdHMubWluKSA6IE5hTiwgaXNOYU4ob3B0cy5taW4pICYmIChvcHRzLm1pbiA9IE51bWJlci5NSU5fVkFMVUUpKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbnVsbCAhPT0gb3B0cy5tYXggJiYgKG9wdHMubWF4ID0gb3B0cy5tYXgudG9TdHJpbmcoKS5yZXBsYWNlKG5ldyBSZWdFeHAoSW5wdXRtYXNrLmVzY2FwZVJlZ2V4KG9wdHMuZ3JvdXBTZXBhcmF0b3IpLCBcImdcIiksIFwiXCIpLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIixcIiA9PT0gb3B0cy5yYWRpeFBvaW50ICYmIChvcHRzLm1heCA9IG9wdHMubWF4LnJlcGxhY2Uob3B0cy5yYWRpeFBvaW50LCBcIi5cIikpLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRzLm1heCA9IGlzRmluaXRlKG9wdHMubWF4KSA/IHBhcnNlRmxvYXQob3B0cy5tYXgpIDogTmFOLCBpc05hTihvcHRzLm1heCkgJiYgKG9wdHMubWF4ID0gTnVtYmVyLk1BWF9WQUxVRSkpLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRzLnBhcnNlTWluTWF4T3B0aW9ucyA9IFwiZG9uZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0ob3B0cyksIG51bGwgIT09IG9wdHMubWluIHx8IG51bGwgIT09IG9wdHMubWF4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHVubWFza2VkID0gb3B0cy5vblVuTWFzayhidWZmZXIuam9pbihcIlwiKSwgdW5kZWZpbmVkLCAkLmV4dGVuZCh7fSwgb3B0cywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bm1hc2tBc051bWJlcjogITBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSksIG51bGwgIT09IG9wdHMubWluICYmIHVubWFza2VkIDwgb3B0cy5taW4pIHJldHVybiBvcHRzLmlzTmVnYXRpdmUgPSBvcHRzLm1pbiA8IDAsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdHMucG9zdFZhbGlkYXRpb24ob3B0cy5taW4udG9TdHJpbmcoKS5yZXBsYWNlKFwiLlwiLCBvcHRzLnJhZGl4UG9pbnQpLnNwbGl0KFwiXCIpLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0OiBjYXJldFBvcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9wb3N0OiAhMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiMFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgb3B0cyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG51bGwgIT09IG9wdHMubWF4ICYmIHVubWFza2VkID4gb3B0cy5tYXgpIHJldHVybiBvcHRzLmlzTmVnYXRpdmUgPSBvcHRzLm1heCA8IDAsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdHMucG9zdFZhbGlkYXRpb24ob3B0cy5tYXgudG9TdHJpbmcoKS5yZXBsYWNlKFwiLlwiLCBvcHRzLnJhZGl4UG9pbnQpLnNwbGl0KFwiXCIpLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0OiBjYXJldFBvcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9wb3N0OiAhMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiMFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgb3B0cyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3B0cy5wb3N0VmFsaWRhdGlvbihidWZmZXIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJldDogY2FyZXRQb3MsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiMFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50OiBcImJsdXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgb3B0cyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiX2NoZWNrdmFsXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmV0OiBjYXJldFBvc1xuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcmVnZXg6IHtcbiAgICAgICAgICAgICAgICAgICAgaW50ZWdlclBhcnQ6IGZ1bmN0aW9uKG9wdHMsIGVtcHR5Q2hlY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlbXB0eUNoZWNrID8gbmV3IFJlZ0V4cChcIltcIiArIElucHV0bWFzay5lc2NhcGVSZWdleChvcHRzLm5lZ2F0aW9uU3ltYm9sLmZyb250KSArIFwiK10/XCIpIDogbmV3IFJlZ0V4cChcIltcIiArIElucHV0bWFzay5lc2NhcGVSZWdleChvcHRzLm5lZ2F0aW9uU3ltYm9sLmZyb250KSArIFwiK10/XFxcXGQrXCIpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBpbnRlZ2VyTlBhcnQ6IGZ1bmN0aW9uKG9wdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmVnRXhwKFwiW1xcXFxkXCIgKyBJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5ncm91cFNlcGFyYXRvcikgKyBJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5wbGFjZWhvbGRlci5jaGFyQXQoMCkpICsgXCJdK1wiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJ+XCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24oY2hycywgbWFza3NldCwgcG9zLCBzdHJpY3QsIG9wdHMsIGlzU2VsZWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlzVmFsaWQgPSBzdHJpY3QgPyBuZXcgUmVnRXhwKFwiWzAtOVwiICsgSW5wdXRtYXNrLmVzY2FwZVJlZ2V4KG9wdHMuZ3JvdXBTZXBhcmF0b3IpICsgXCJdXCIpLnRlc3QoY2hycykgOiBuZXcgUmVnRXhwKFwiWzAtOV1cIikudGVzdChjaHJzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoITAgPT09IGlzVmFsaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEwICE9PSBvcHRzLm51bWVyaWNJbnB1dCAmJiBtYXNrc2V0LnZhbGlkUG9zaXRpb25zW3Bvc10gIT09IHVuZGVmaW5lZCAmJiBcIn5cIiA9PT0gbWFza3NldC52YWxpZFBvc2l0aW9uc1twb3NdLm1hdGNoLmRlZiAmJiAhaXNTZWxlY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwcm9jZXNzVmFsdWUgPSBtYXNrc2V0LmJ1ZmZlci5qb2luKFwiXCIpLCBwdlJhZGl4U3BsaXQgPSAocHJvY2Vzc1ZhbHVlID0gKHByb2Nlc3NWYWx1ZSA9IHByb2Nlc3NWYWx1ZS5yZXBsYWNlKG5ldyBSZWdFeHAoXCJbLVwiICsgSW5wdXRtYXNrLmVzY2FwZVJlZ2V4KG9wdHMubmVnYXRpb25TeW1ib2wuZnJvbnQpICsgXCJdXCIsIFwiZ1wiKSwgXCJcIikpLnJlcGxhY2UobmV3IFJlZ0V4cChJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5uZWdhdGlvblN5bWJvbC5iYWNrKSArIFwiJFwiKSwgXCJcIikpLnNwbGl0KG9wdHMucmFkaXhQb2ludCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwdlJhZGl4U3BsaXQubGVuZ3RoID4gMSAmJiAocHZSYWRpeFNwbGl0WzFdID0gcHZSYWRpeFNwbGl0WzFdLnJlcGxhY2UoLzAvZywgb3B0cy5wbGFjZWhvbGRlci5jaGFyQXQoMCkpKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjBcIiA9PT0gcHZSYWRpeFNwbGl0WzBdICYmIChwdlJhZGl4U3BsaXRbMF0gPSBwdlJhZGl4U3BsaXRbMF0ucmVwbGFjZSgvMC9nLCBvcHRzLnBsYWNlaG9sZGVyLmNoYXJBdCgwKSkpLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2Nlc3NWYWx1ZSA9IHB2UmFkaXhTcGxpdFswXSArIG9wdHMucmFkaXhQb2ludCArIHB2UmFkaXhTcGxpdFsxXSB8fCBcIlwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGJ1ZmZlclRlbXBsYXRlID0gbWFza3NldC5fYnVmZmVyLmpvaW4oXCJcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHByb2Nlc3NWYWx1ZSA9PT0gb3B0cy5yYWRpeFBvaW50ICYmIChwcm9jZXNzVmFsdWUgPSBidWZmZXJUZW1wbGF0ZSk7IG51bGwgPT09IHByb2Nlc3NWYWx1ZS5tYXRjaChJbnB1dG1hc2suZXNjYXBlUmVnZXgoYnVmZmVyVGVtcGxhdGUpICsgXCIkXCIpOyApIGJ1ZmZlclRlbXBsYXRlID0gYnVmZmVyVGVtcGxhdGUuc2xpY2UoMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1ZhbGlkID0gKHByb2Nlc3NWYWx1ZSA9IChwcm9jZXNzVmFsdWUgPSBwcm9jZXNzVmFsdWUucmVwbGFjZShidWZmZXJUZW1wbGF0ZSwgXCJcIikpLnNwbGl0KFwiXCIpKVtwb3NdID09PSB1bmRlZmluZWQgPyB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zOiBwb3MsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3ZlOiBwb3NcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zOiBwb3NcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugc3RyaWN0IHx8IGNocnMgIT09IG9wdHMucmFkaXhQb2ludCB8fCBtYXNrc2V0LnZhbGlkUG9zaXRpb25zW3BvcyAtIDFdICE9PSB1bmRlZmluZWQgfHwgKG1hc2tzZXQuYnVmZmVyW3Bvc10gPSBcIjBcIiwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNWYWxpZCA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zOiBwb3MgKyAxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzVmFsaWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDFcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCIrXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24oY2hycywgbWFza3NldCwgcG9zLCBzdHJpY3QsIG9wdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3B0cy5hbGxvd01pbnVzICYmIChcIi1cIiA9PT0gY2hycyB8fCBjaHJzID09PSBvcHRzLm5lZ2F0aW9uU3ltYm9sLmZyb250KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXJkaW5hbGl0eTogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIlwiXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFwiLVwiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uKGNocnMsIG1hc2tzZXQsIHBvcywgc3RyaWN0LCBvcHRzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wdHMuYWxsb3dNaW51cyAmJiBjaHJzID09PSBvcHRzLm5lZ2F0aW9uU3ltYm9sLmJhY2s7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgY2FyZGluYWxpdHk6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJcIlxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBcIjpcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbihjaHJzLCBtYXNrc2V0LCBwb3MsIHN0cmljdCwgb3B0cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByYWRpeCA9IFwiW1wiICsgSW5wdXRtYXNrLmVzY2FwZVJlZ2V4KG9wdHMucmFkaXhQb2ludCkgKyBcIl1cIiwgaXNWYWxpZCA9IG5ldyBSZWdFeHAocmFkaXgpLnRlc3QoY2hycyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzVmFsaWQgJiYgbWFza3NldC52YWxpZFBvc2l0aW9uc1twb3NdICYmIG1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zXS5tYXRjaC5wbGFjZWhvbGRlciA9PT0gb3B0cy5yYWRpeFBvaW50ICYmIChpc1ZhbGlkID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJldDogcG9zICsgMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLCBpc1ZhbGlkO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmRpbmFsaXR5OiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IGZ1bmN0aW9uKG9wdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3B0cy5yYWRpeFBvaW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBvblVuTWFzazogZnVuY3Rpb24obWFza2VkVmFsdWUsIHVubWFza2VkVmFsdWUsIG9wdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKFwiXCIgPT09IHVubWFza2VkVmFsdWUgJiYgITAgPT09IG9wdHMubnVsbGFibGUpIHJldHVybiB1bm1hc2tlZFZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcHJvY2Vzc1ZhbHVlID0gbWFza2VkVmFsdWUucmVwbGFjZShvcHRzLnByZWZpeCwgXCJcIik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9jZXNzVmFsdWUgPSBwcm9jZXNzVmFsdWUucmVwbGFjZShvcHRzLnN1ZmZpeCwgXCJcIiksIHByb2Nlc3NWYWx1ZSA9IHByb2Nlc3NWYWx1ZS5yZXBsYWNlKG5ldyBSZWdFeHAoSW5wdXRtYXNrLmVzY2FwZVJlZ2V4KG9wdHMuZ3JvdXBTZXBhcmF0b3IpLCBcImdcIiksIFwiXCIpLCBcbiAgICAgICAgICAgICAgICAgICAgXCJcIiAhPT0gb3B0cy5wbGFjZWhvbGRlci5jaGFyQXQoMCkgJiYgKHByb2Nlc3NWYWx1ZSA9IHByb2Nlc3NWYWx1ZS5yZXBsYWNlKG5ldyBSZWdFeHAob3B0cy5wbGFjZWhvbGRlci5jaGFyQXQoMCksIFwiZ1wiKSwgXCIwXCIpKSwgXG4gICAgICAgICAgICAgICAgICAgIG9wdHMudW5tYXNrQXNOdW1iZXIgPyAoXCJcIiAhPT0gb3B0cy5yYWRpeFBvaW50ICYmIC0xICE9PSBwcm9jZXNzVmFsdWUuaW5kZXhPZihvcHRzLnJhZGl4UG9pbnQpICYmIChwcm9jZXNzVmFsdWUgPSBwcm9jZXNzVmFsdWUucmVwbGFjZShJbnB1dG1hc2suZXNjYXBlUmVnZXguY2FsbCh0aGlzLCBvcHRzLnJhZGl4UG9pbnQpLCBcIi5cIikpLCBcbiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLnJlcGxhY2UobmV3IFJlZ0V4cChcIl5cIiArIElucHV0bWFzay5lc2NhcGVSZWdleChvcHRzLm5lZ2F0aW9uU3ltYm9sLmZyb250KSksIFwiLVwiKSwgXG4gICAgICAgICAgICAgICAgICAgIHByb2Nlc3NWYWx1ZSA9IHByb2Nlc3NWYWx1ZS5yZXBsYWNlKG5ldyBSZWdFeHAoSW5wdXRtYXNrLmVzY2FwZVJlZ2V4KG9wdHMubmVnYXRpb25TeW1ib2wuYmFjaykgKyBcIiRcIiksIFwiXCIpLCBcbiAgICAgICAgICAgICAgICAgICAgTnVtYmVyKHByb2Nlc3NWYWx1ZSkpIDogcHJvY2Vzc1ZhbHVlO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgaXNDb21wbGV0ZTogZnVuY3Rpb24oYnVmZmVyLCBvcHRzKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtYXNrZWRWYWx1ZSA9IGJ1ZmZlci5qb2luKFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoYnVmZmVyLnNsaWNlKCkuam9pbihcIlwiKSAhPT0gbWFza2VkVmFsdWUpIHJldHVybiAhMTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHByb2Nlc3NWYWx1ZSA9IG1hc2tlZFZhbHVlLnJlcGxhY2Uob3B0cy5wcmVmaXgsIFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvY2Vzc1ZhbHVlID0gcHJvY2Vzc1ZhbHVlLnJlcGxhY2Uob3B0cy5zdWZmaXgsIFwiXCIpLCBwcm9jZXNzVmFsdWUgPSBwcm9jZXNzVmFsdWUucmVwbGFjZShuZXcgUmVnRXhwKElucHV0bWFzay5lc2NhcGVSZWdleChvcHRzLmdyb3VwU2VwYXJhdG9yKSArIFwiKFswLTldezN9KVwiLCBcImdcIiksIFwiJDFcIiksIFxuICAgICAgICAgICAgICAgICAgICBcIixcIiA9PT0gb3B0cy5yYWRpeFBvaW50ICYmIChwcm9jZXNzVmFsdWUgPSBwcm9jZXNzVmFsdWUucmVwbGFjZShJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5yYWRpeFBvaW50KSwgXCIuXCIpKSwgXG4gICAgICAgICAgICAgICAgICAgIGlzRmluaXRlKHByb2Nlc3NWYWx1ZSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBvbkJlZm9yZU1hc2s6IGZ1bmN0aW9uKGluaXRpYWxWYWx1ZSwgb3B0cykge1xuICAgICAgICAgICAgICAgICAgICBpZiAob3B0cy5pc05lZ2F0aXZlID0gdW5kZWZpbmVkLCBpbml0aWFsVmFsdWUgPSBpbml0aWFsVmFsdWUudG9TdHJpbmcoKS5jaGFyQXQoaW5pdGlhbFZhbHVlLmxlbmd0aCAtIDEpID09PSBvcHRzLnJhZGl4UG9pbnQgPyBpbml0aWFsVmFsdWUudG9TdHJpbmcoKS5zdWJzdHIoMCwgaW5pdGlhbFZhbHVlLmxlbmd0aCAtIDEpIDogaW5pdGlhbFZhbHVlLnRvU3RyaW5nKCksIFxuICAgICAgICAgICAgICAgICAgICBcIlwiICE9PSBvcHRzLnJhZGl4UG9pbnQgJiYgaXNGaW5pdGUoaW5pdGlhbFZhbHVlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZzID0gaW5pdGlhbFZhbHVlLnNwbGl0KFwiLlwiKSwgZ3JvdXBTaXplID0gXCJcIiAhPT0gb3B0cy5ncm91cFNlcGFyYXRvciA/IHBhcnNlSW50KG9wdHMuZ3JvdXBTaXplKSA6IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAyID09PSB2cy5sZW5ndGggJiYgKHZzWzBdLmxlbmd0aCA+IGdyb3VwU2l6ZSB8fCB2c1sxXS5sZW5ndGggPiBncm91cFNpemUgfHwgdnNbMF0ubGVuZ3RoIDw9IGdyb3VwU2l6ZSAmJiB2c1sxXS5sZW5ndGggPCBncm91cFNpemUpICYmIChpbml0aWFsVmFsdWUgPSBpbml0aWFsVmFsdWUucmVwbGFjZShcIi5cIiwgb3B0cy5yYWRpeFBvaW50KSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdmFyIGtvbW1hTWF0Y2hlcyA9IGluaXRpYWxWYWx1ZS5tYXRjaCgvLC9nKSwgZG90TWF0Y2hlcyA9IGluaXRpYWxWYWx1ZS5tYXRjaCgvXFwuL2cpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaW5pdGlhbFZhbHVlID0gZG90TWF0Y2hlcyAmJiBrb21tYU1hdGNoZXMgPyBkb3RNYXRjaGVzLmxlbmd0aCA+IGtvbW1hTWF0Y2hlcy5sZW5ndGggPyAoaW5pdGlhbFZhbHVlID0gaW5pdGlhbFZhbHVlLnJlcGxhY2UoL1xcLi9nLCBcIlwiKSkucmVwbGFjZShcIixcIiwgb3B0cy5yYWRpeFBvaW50KSA6IGtvbW1hTWF0Y2hlcy5sZW5ndGggPiBkb3RNYXRjaGVzLmxlbmd0aCA/IChpbml0aWFsVmFsdWUgPSBpbml0aWFsVmFsdWUucmVwbGFjZSgvLC9nLCBcIlwiKSkucmVwbGFjZShcIi5cIiwgb3B0cy5yYWRpeFBvaW50KSA6IGluaXRpYWxWYWx1ZS5pbmRleE9mKFwiLlwiKSA8IGluaXRpYWxWYWx1ZS5pbmRleE9mKFwiLFwiKSA/IGluaXRpYWxWYWx1ZS5yZXBsYWNlKC9cXC4vZywgXCJcIikgOiBpbml0aWFsVmFsdWUucmVwbGFjZSgvLC9nLCBcIlwiKSA6IGluaXRpYWxWYWx1ZS5yZXBsYWNlKG5ldyBSZWdFeHAoSW5wdXRtYXNrLmVzY2FwZVJlZ2V4KG9wdHMuZ3JvdXBTZXBhcmF0b3IpLCBcImdcIiksIFwiXCIpLCBcbiAgICAgICAgICAgICAgICAgICAgMCA9PT0gb3B0cy5kaWdpdHMgJiYgKC0xICE9PSBpbml0aWFsVmFsdWUuaW5kZXhPZihcIi5cIikgPyBpbml0aWFsVmFsdWUgPSBpbml0aWFsVmFsdWUuc3Vic3RyaW5nKDAsIGluaXRpYWxWYWx1ZS5pbmRleE9mKFwiLlwiKSkgOiAtMSAhPT0gaW5pdGlhbFZhbHVlLmluZGV4T2YoXCIsXCIpICYmIChpbml0aWFsVmFsdWUgPSBpbml0aWFsVmFsdWUuc3Vic3RyaW5nKDAsIGluaXRpYWxWYWx1ZS5pbmRleE9mKFwiLFwiKSkpKSwgXG4gICAgICAgICAgICAgICAgICAgIFwiXCIgIT09IG9wdHMucmFkaXhQb2ludCAmJiBpc0Zpbml0ZShvcHRzLmRpZ2l0cykgJiYgLTEgIT09IGluaXRpYWxWYWx1ZS5pbmRleE9mKG9wdHMucmFkaXhQb2ludCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkZWNQYXJ0ID0gaW5pdGlhbFZhbHVlLnNwbGl0KG9wdHMucmFkaXhQb2ludClbMV0ubWF0Y2gobmV3IFJlZ0V4cChcIlxcXFxkKlwiKSlbMF07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocGFyc2VJbnQob3B0cy5kaWdpdHMpIDwgZGVjUGFydC50b1N0cmluZygpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkaWdpdHNGYWN0b3IgPSBNYXRoLnBvdygxMCwgcGFyc2VJbnQob3B0cy5kaWdpdHMpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0aWFsVmFsdWUgPSBpbml0aWFsVmFsdWUucmVwbGFjZShJbnB1dG1hc2suZXNjYXBlUmVnZXgob3B0cy5yYWRpeFBvaW50KSwgXCIuXCIpLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0aWFsVmFsdWUgPSAoaW5pdGlhbFZhbHVlID0gTWF0aC5yb3VuZChwYXJzZUZsb2F0KGluaXRpYWxWYWx1ZSkgKiBkaWdpdHNGYWN0b3IpIC8gZGlnaXRzRmFjdG9yKS50b1N0cmluZygpLnJlcGxhY2UoXCIuXCIsIG9wdHMucmFkaXhQb2ludCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGluaXRpYWxWYWx1ZTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhbkNsZWFyUG9zaXRpb246IGZ1bmN0aW9uKG1hc2tzZXQsIHBvc2l0aW9uLCBsdnAsIHN0cmljdCwgb3B0cykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdnAgPSBtYXNrc2V0LnZhbGlkUG9zaXRpb25zW3Bvc2l0aW9uXSwgY2FuQ2xlYXIgPSB2cC5pbnB1dCAhPT0gb3B0cy5yYWRpeFBvaW50IHx8IG51bGwgIT09IG1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zaXRpb25dLm1hdGNoLmZuICYmICExID09PSBvcHRzLmRlY2ltYWxQcm90ZWN0IHx8IHZwLmlucHV0ID09PSBvcHRzLnJhZGl4UG9pbnQgJiYgbWFza3NldC52YWxpZFBvc2l0aW9uc1twb3NpdGlvbiArIDFdICYmIG51bGwgPT09IG1hc2tzZXQudmFsaWRQb3NpdGlvbnNbcG9zaXRpb24gKyAxXS5tYXRjaC5mbiB8fCBpc0Zpbml0ZSh2cC5pbnB1dCkgfHwgcG9zaXRpb24gPT09IGx2cCB8fCB2cC5pbnB1dCA9PT0gb3B0cy5ncm91cFNlcGFyYXRvciB8fCB2cC5pbnB1dCA9PT0gb3B0cy5uZWdhdGlvblN5bWJvbC5mcm9udCB8fCB2cC5pbnB1dCA9PT0gb3B0cy5uZWdhdGlvblN5bWJvbC5iYWNrO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gIWNhbkNsZWFyIHx8IFwiK1wiICE9PSB2cC5tYXRjaC5uYXRpdmVEZWYgJiYgXCItXCIgIT09IHZwLm1hdGNoLm5hdGl2ZURlZiB8fCAob3B0cy5pc05lZ2F0aXZlID0gITEpLCBcbiAgICAgICAgICAgICAgICAgICAgY2FuQ2xlYXI7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBvbktleURvd246IGZ1bmN0aW9uKGUsIGJ1ZmZlciwgY2FyZXRQb3MsIG9wdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyICRpbnB1dCA9ICQodGhpcyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlLmN0cmxLZXkpIHN3aXRjaCAoZS5rZXlDb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBJbnB1dG1hc2sua2V5Q29kZS5VUDpcbiAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC52YWwocGFyc2VGbG9hdCh0aGlzLmlucHV0bWFzay51bm1hc2tlZHZhbHVlKCkpICsgcGFyc2VJbnQob3B0cy5zdGVwKSksICRpbnB1dC50cmlnZ2VyKFwic2V0dmFsdWVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgICAgIGNhc2UgSW5wdXRtYXNrLmtleUNvZGUuRE9XTjpcbiAgICAgICAgICAgICAgICAgICAgICAgICRpbnB1dC52YWwocGFyc2VGbG9hdCh0aGlzLmlucHV0bWFzay51bm1hc2tlZHZhbHVlKCkpIC0gcGFyc2VJbnQob3B0cy5zdGVwKSksICRpbnB1dC50cmlnZ2VyKFwic2V0dmFsdWVcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY3VycmVuY3k6IHtcbiAgICAgICAgICAgICAgICBwcmVmaXg6IFwiJCBcIixcbiAgICAgICAgICAgICAgICBncm91cFNlcGFyYXRvcjogXCIsXCIsXG4gICAgICAgICAgICAgICAgYWxpYXM6IFwibnVtZXJpY1wiLFxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIjBcIixcbiAgICAgICAgICAgICAgICBhdXRvR3JvdXA6ICEwLFxuICAgICAgICAgICAgICAgIGRpZ2l0czogMixcbiAgICAgICAgICAgICAgICBkaWdpdHNPcHRpb25hbDogITEsXG4gICAgICAgICAgICAgICAgY2xlYXJNYXNrT25Mb3N0Rm9jdXM6ICExXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGVjaW1hbDoge1xuICAgICAgICAgICAgICAgIGFsaWFzOiBcIm51bWVyaWNcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGludGVnZXI6IHtcbiAgICAgICAgICAgICAgICBhbGlhczogXCJudW1lcmljXCIsXG4gICAgICAgICAgICAgICAgZGlnaXRzOiAwLFxuICAgICAgICAgICAgICAgIHJhZGl4UG9pbnQ6IFwiXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwZXJjZW50YWdlOiB7XG4gICAgICAgICAgICAgICAgYWxpYXM6IFwibnVtZXJpY1wiLFxuICAgICAgICAgICAgICAgIGRpZ2l0czogMixcbiAgICAgICAgICAgICAgICBkaWdpdHNPcHRpb25hbDogITAsXG4gICAgICAgICAgICAgICAgcmFkaXhQb2ludDogXCIuXCIsXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiMFwiLFxuICAgICAgICAgICAgICAgIGF1dG9Hcm91cDogITEsXG4gICAgICAgICAgICAgICAgbWluOiAwLFxuICAgICAgICAgICAgICAgIG1heDogMTAwLFxuICAgICAgICAgICAgICAgIHN1ZmZpeDogXCIgJVwiLFxuICAgICAgICAgICAgICAgIGFsbG93TWludXM6ICExXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pLCBJbnB1dG1hc2s7XG4gICAgfSk7XG59LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICB2YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXztcbiAgICBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBTeW1ib2wuaXRlcmF0b3I7XG4gICAgIWZ1bmN0aW9uKGZhY3RvcnkpIHtcbiAgICAgICAgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyA9IFsgX193ZWJwYWNrX3JlcXVpcmVfXygwKSwgX193ZWJwYWNrX3JlcXVpcmVfXygxKSBdLCBcbiAgICAgICAgdm9pZCAwICE9PSAoX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIChfX1dFQlBBQ0tfQU1EX0RFRklORV9GQUNUT1JZX18gPSBmYWN0b3J5KSA/IF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXy5hcHBseShleHBvcnRzLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fKSA6IF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXykgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pO1xuICAgIH0oZnVuY3Rpb24oJCwgSW5wdXRtYXNrKSB7XG4gICAgICAgIGZ1bmN0aW9uIG1hc2tTb3J0KGEsIGIpIHtcbiAgICAgICAgICAgIHZhciBtYXNrYSA9IChhLm1hc2sgfHwgYSkucmVwbGFjZSgvIy9nLCBcIjlcIikucmVwbGFjZSgvXFwpLywgXCI5XCIpLnJlcGxhY2UoL1srKCkjLV0vZywgXCJcIiksIG1hc2tiID0gKGIubWFzayB8fCBiKS5yZXBsYWNlKC8jL2csIFwiOVwiKS5yZXBsYWNlKC9cXCkvLCBcIjlcIikucmVwbGFjZSgvWysoKSMtXS9nLCBcIlwiKSwgbWFza2FzID0gKGEubWFzayB8fCBhKS5zcGxpdChcIiNcIilbMF0sIG1hc2ticyA9IChiLm1hc2sgfHwgYikuc3BsaXQoXCIjXCIpWzBdO1xuICAgICAgICAgICAgcmV0dXJuIDAgPT09IG1hc2ticy5pbmRleE9mKG1hc2thcykgPyAtMSA6IDAgPT09IG1hc2thcy5pbmRleE9mKG1hc2ticykgPyAxIDogbWFza2EubG9jYWxlQ29tcGFyZShtYXNrYik7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGFuYWx5c2VNYXNrQmFzZSA9IElucHV0bWFzay5wcm90b3R5cGUuYW5hbHlzZU1hc2s7XG4gICAgICAgIHJldHVybiBJbnB1dG1hc2sucHJvdG90eXBlLmFuYWx5c2VNYXNrID0gZnVuY3Rpb24obWFzaywgcmVnZXhNYXNrLCBvcHRzKSB7XG4gICAgICAgICAgICBmdW5jdGlvbiByZWR1Y2VWYXJpYXRpb25zKG1hc2tzLCBwcmV2aW91c1ZhcmlhdGlvbiwgcHJldmlvdXNtYXNrR3JvdXApIHtcbiAgICAgICAgICAgICAgICBwcmV2aW91c1ZhcmlhdGlvbiA9IHByZXZpb3VzVmFyaWF0aW9uIHx8IFwiXCIsIHByZXZpb3VzbWFza0dyb3VwID0gcHJldmlvdXNtYXNrR3JvdXAgfHwgbWFza0dyb3VwcywgXG4gICAgICAgICAgICAgICAgXCJcIiAhPT0gcHJldmlvdXNWYXJpYXRpb24gJiYgKHByZXZpb3VzbWFza0dyb3VwW3ByZXZpb3VzVmFyaWF0aW9uXSA9IHt9KTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciB2YXJpYXRpb24gPSBcIlwiLCBtYXNrR3JvdXAgPSBwcmV2aW91c21hc2tHcm91cFtwcmV2aW91c1ZhcmlhdGlvbl0gfHwgcHJldmlvdXNtYXNrR3JvdXAsIGkgPSBtYXNrcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgbWFza0dyb3VwW3ZhcmlhdGlvbiA9IChtYXNrID0gbWFza3NbaV0ubWFzayB8fCBtYXNrc1tpXSkuc3Vic3RyKDAsIDEpXSA9IG1hc2tHcm91cFt2YXJpYXRpb25dIHx8IFtdLCBcbiAgICAgICAgICAgICAgICBtYXNrR3JvdXBbdmFyaWF0aW9uXS51bnNoaWZ0KG1hc2suc3Vic3RyKDEpKSwgbWFza3Muc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIG5keCBpbiBtYXNrR3JvdXApIG1hc2tHcm91cFtuZHhdLmxlbmd0aCA+IDUwMCAmJiByZWR1Y2VWYXJpYXRpb25zKG1hc2tHcm91cFtuZHhdLnNsaWNlKCksIG5keCwgbWFza0dyb3VwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIHJlYnVpbGQobWFza0dyb3VwKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1hc2sgPSBcIlwiLCBzdWJtYXNrcyA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIG5keCBpbiBtYXNrR3JvdXApICQuaXNBcnJheShtYXNrR3JvdXBbbmR4XSkgPyAxID09PSBtYXNrR3JvdXBbbmR4XS5sZW5ndGggPyBzdWJtYXNrcy5wdXNoKG5keCArIG1hc2tHcm91cFtuZHhdKSA6IHN1Ym1hc2tzLnB1c2gobmR4ICsgb3B0cy5ncm91cG1hcmtlclswXSArIG1hc2tHcm91cFtuZHhdLmpvaW4ob3B0cy5ncm91cG1hcmtlclsxXSArIG9wdHMuYWx0ZXJuYXRvcm1hcmtlciArIG9wdHMuZ3JvdXBtYXJrZXJbMF0pICsgb3B0cy5ncm91cG1hcmtlclsxXSkgOiBzdWJtYXNrcy5wdXNoKG5keCArIHJlYnVpbGQobWFza0dyb3VwW25keF0pKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gMSA9PT0gc3VibWFza3MubGVuZ3RoID8gbWFzayArPSBzdWJtYXNrc1swXSA6IG1hc2sgKz0gb3B0cy5ncm91cG1hcmtlclswXSArIHN1Ym1hc2tzLmpvaW4ob3B0cy5ncm91cG1hcmtlclsxXSArIG9wdHMuYWx0ZXJuYXRvcm1hcmtlciArIG9wdHMuZ3JvdXBtYXJrZXJbMF0pICsgb3B0cy5ncm91cG1hcmtlclsxXSwgXG4gICAgICAgICAgICAgICAgbWFzaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBtYXNrR3JvdXBzID0ge307XG4gICAgICAgICAgICByZXR1cm4gb3B0cy5waG9uZUNvZGVzICYmIChvcHRzLnBob25lQ29kZXMgJiYgb3B0cy5waG9uZUNvZGVzLmxlbmd0aCA+IDFlMyAmJiAocmVkdWNlVmFyaWF0aW9ucygobWFzayA9IG1hc2suc3Vic3RyKDEsIG1hc2subGVuZ3RoIC0gMikpLnNwbGl0KG9wdHMuZ3JvdXBtYXJrZXJbMV0gKyBvcHRzLmFsdGVybmF0b3JtYXJrZXIgKyBvcHRzLmdyb3VwbWFya2VyWzBdKSksIFxuICAgICAgICAgICAgbWFzayA9IHJlYnVpbGQobWFza0dyb3VwcykpLCBtYXNrID0gbWFzay5yZXBsYWNlKC85L2csIFwiXFxcXDlcIikpLCBhbmFseXNlTWFza0Jhc2UuY2FsbCh0aGlzLCBtYXNrLCByZWdleE1hc2ssIG9wdHMpO1xuICAgICAgICB9LCBJbnB1dG1hc2suZXh0ZW5kQWxpYXNlcyh7XG4gICAgICAgICAgICBhYnN0cmFjdHBob25lOiB7XG4gICAgICAgICAgICAgICAgZ3JvdXBtYXJrZXI6IFsgXCI8XCIsIFwiPlwiIF0sXG4gICAgICAgICAgICAgICAgY291bnRyeWNvZGU6IFwiXCIsXG4gICAgICAgICAgICAgICAgcGhvbmVDb2RlczogW10sXG4gICAgICAgICAgICAgICAgbWFzazogZnVuY3Rpb24ob3B0cykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3B0cy5kZWZpbml0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiI1wiOiBJbnB1dG1hc2sucHJvdG90eXBlLmRlZmluaXRpb25zWzldXG4gICAgICAgICAgICAgICAgICAgIH0sIG9wdHMucGhvbmVDb2Rlcy5zb3J0KG1hc2tTb3J0KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGtlZXBTdGF0aWM6ICEwLFxuICAgICAgICAgICAgICAgIG9uQmVmb3JlTWFzazogZnVuY3Rpb24odmFsdWUsIG9wdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHByb2Nlc3NlZFZhbHVlID0gdmFsdWUucmVwbGFjZSgvXjB7MSwyfS8sIFwiXCIpLnJlcGxhY2UoL1tcXHNdL2csIFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKHByb2Nlc3NlZFZhbHVlLmluZGV4T2Yob3B0cy5jb3VudHJ5Y29kZSkgPiAxIHx8IC0xID09PSBwcm9jZXNzZWRWYWx1ZS5pbmRleE9mKG9wdHMuY291bnRyeWNvZGUpKSAmJiAocHJvY2Vzc2VkVmFsdWUgPSBcIitcIiArIG9wdHMuY291bnRyeWNvZGUgKyBwcm9jZXNzZWRWYWx1ZSksIFxuICAgICAgICAgICAgICAgICAgICBwcm9jZXNzZWRWYWx1ZTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uVW5NYXNrOiBmdW5jdGlvbihtYXNrZWRWYWx1ZSwgdW5tYXNrZWRWYWx1ZSwgb3B0cykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWFza2VkVmFsdWUucmVwbGFjZSgvWygpIy1dL2csIFwiXCIpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgaW5wdXRtb2RlOiBcInRlbFwiXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pLCBJbnB1dG1hc2s7XG4gICAgfSk7XG59LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICB2YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fLCBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXywgX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uKG9iaikge1xuICAgICAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgICB9IDogZnVuY3Rpb24ob2JqKSB7XG4gICAgICAgIHJldHVybiBvYmogJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG4gICAgfTtcbiAgICAhZnVuY3Rpb24oZmFjdG9yeSkge1xuICAgICAgICBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fID0gWyBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpIF0sIFxuICAgICAgICB2b2lkIDAgIT09IChfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgKF9fV0VCUEFDS19BTURfREVGSU5FX0ZBQ1RPUllfXyA9IGZhY3RvcnkpID8gX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fLmFwcGx5KGV4cG9ydHMsIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18pIDogX19XRUJQQUNLX0FNRF9ERUZJTkVfRkFDVE9SWV9fKSAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyk7XG4gICAgfShmdW5jdGlvbigkLCBJbnB1dG1hc2spIHtcbiAgICAgICAgcmV0dXJuIHZvaWQgMCA9PT0gJC5mbi5pbnB1dG1hc2sgJiYgKCQuZm4uaW5wdXRtYXNrID0gZnVuY3Rpb24oZm4sIG9wdGlvbnMpIHtcbiAgICAgICAgICAgIHZhciBucHRtYXNrLCBpbnB1dCA9IHRoaXNbMF07XG4gICAgICAgICAgICBpZiAodm9pZCAwID09PSBvcHRpb25zICYmIChvcHRpb25zID0ge30pLCBcInN0cmluZ1wiID09IHR5cGVvZiBmbikgc3dpdGNoIChmbikge1xuICAgICAgICAgICAgICBjYXNlIFwidW5tYXNrZWR2YWx1ZVwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBpbnB1dCAmJiBpbnB1dC5pbnB1dG1hc2sgPyBpbnB1dC5pbnB1dG1hc2sudW5tYXNrZWR2YWx1ZSgpIDogJChpbnB1dCkudmFsKCk7XG5cbiAgICAgICAgICAgICAgY2FzZSBcInJlbW92ZVwiOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaW5wdXRtYXNrICYmIHRoaXMuaW5wdXRtYXNrLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgIGNhc2UgXCJnZXRlbXB0eW1hc2tcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gaW5wdXQgJiYgaW5wdXQuaW5wdXRtYXNrID8gaW5wdXQuaW5wdXRtYXNrLmdldGVtcHR5bWFzaygpIDogXCJcIjtcblxuICAgICAgICAgICAgICBjYXNlIFwiaGFzTWFza2VkVmFsdWVcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gISghaW5wdXQgfHwgIWlucHV0LmlucHV0bWFzaykgJiYgaW5wdXQuaW5wdXRtYXNrLmhhc01hc2tlZFZhbHVlKCk7XG5cbiAgICAgICAgICAgICAgY2FzZSBcImlzQ29tcGxldGVcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gIWlucHV0IHx8ICFpbnB1dC5pbnB1dG1hc2sgfHwgaW5wdXQuaW5wdXRtYXNrLmlzQ29tcGxldGUoKTtcblxuICAgICAgICAgICAgICBjYXNlIFwiZ2V0bWV0YWRhdGFcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gaW5wdXQgJiYgaW5wdXQuaW5wdXRtYXNrID8gaW5wdXQuaW5wdXRtYXNrLmdldG1ldGFkYXRhKCkgOiB2b2lkIDA7XG5cbiAgICAgICAgICAgICAgY2FzZSBcInNldHZhbHVlXCI6XG4gICAgICAgICAgICAgICAgJChpbnB1dCkudmFsKG9wdGlvbnMpLCBpbnB1dCAmJiB2b2lkIDAgPT09IGlucHV0LmlucHV0bWFzayAmJiAkKGlucHV0KS50cmlnZ2VySGFuZGxlcihcInNldHZhbHVlXCIpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgIGNhc2UgXCJvcHRpb25cIjpcbiAgICAgICAgICAgICAgICBpZiAoXCJzdHJpbmdcIiAhPSB0eXBlb2Ygb3B0aW9ucykgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZvaWQgMCAhPT0gdGhpcy5pbnB1dG1hc2spIHJldHVybiB0aGlzLmlucHV0bWFzay5vcHRpb24ob3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgaWYgKGlucHV0ICYmIHZvaWQgMCAhPT0gaW5wdXQuaW5wdXRtYXNrKSByZXR1cm4gaW5wdXQuaW5wdXRtYXNrLm9wdGlvbihvcHRpb25zKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBvcHRpb25zLmFsaWFzID0gZm4sIG5wdG1hc2sgPSBuZXcgSW5wdXRtYXNrKG9wdGlvbnMpLCB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIG5wdG1hc2subWFzayh0aGlzKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKFwib2JqZWN0XCIgPT0gKHZvaWQgMCA9PT0gZm4gPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZihmbikpKSByZXR1cm4gbnB0bWFzayA9IG5ldyBJbnB1dG1hc2soZm4pLCBcbiAgICAgICAgICAgICAgICB2b2lkIDAgPT09IGZuLm1hc2sgJiYgdm9pZCAwID09PSBmbi5hbGlhcyA/IHRoaXMuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZvaWQgMCAhPT0gdGhpcy5pbnB1dG1hc2spIHJldHVybiB0aGlzLmlucHV0bWFzay5vcHRpb24oZm4pO1xuICAgICAgICAgICAgICAgICAgICBucHRtYXNrLm1hc2sodGhpcyk7XG4gICAgICAgICAgICAgICAgfSkgOiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIG5wdG1hc2subWFzayh0aGlzKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBpZiAodm9pZCAwID09PSBmbikgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgKG5wdG1hc2sgPSBuZXcgSW5wdXRtYXNrKG9wdGlvbnMpKS5tYXNrKHRoaXMpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KSwgJC5mbi5pbnB1dG1hc2s7XG4gICAgfSk7XG59IF0pO1xuXG5cblxuLypcbiAqIEN1c3RvbVxuICovXG5cbnZhciBFbXB0eUJsb2NrID0gZnVuY3Rpb24oY29udGFpbmVyKSB7XG4gIHRoaXMuY29udGFpbmVyID0gJChjb250YWluZXIpO1xuICB0aGlzLmluaXQoKTtcbn07XG5cbkVtcHR5QmxvY2sucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMudXBkYXRlSGVpZ2h0KCk7XG4gICQod2luZG93KS5vbigncmVzaXplJywgdGhpcy51cGRhdGVIZWlnaHQuYmluZCh0aGlzKSk7XG59O1xuXG5FbXB0eUJsb2NrLnByb3RvdHlwZS51cGRhdGVIZWlnaHQgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciB3aW5kb3dIZWlnaHQgPSAkKHdpbmRvdykuaGVpZ2h0KCksXG4gICAgICBvZmZzZXRUb3AgPSB0aGlzLmNvbnRhaW5lci5vZmZzZXQoKS50b3AsXG4gICAgICBoZWlnaHQgPSB3aW5kb3dIZWlnaHQgLSBvZmZzZXRUb3A7XG5cbiAgdGhpcy5jb250YWluZXIuaGVpZ2h0KGhlaWdodCk7XG59O1xudmFyIEZvcm1GaWVsZHMgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuaW5pdCgpO1xufTtcblxuRm9ybUZpZWxkcy5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5pbml0TWFza3MoKTtcblxuICAkKCcuZmllbGQtaW1hZ2UnKS5vbignY2hhbmdlJywgdGhpcy51cGxvYWRJbWFnZSk7XG4gICQoJy5maWVsZC1hdmF0YXInKS5vbignY2hhbmdlJywgdGhpcy51cGxvYWRBdmF0YXIpO1xuICAkKCcuZmllbGQtdGV4dGFyZWEnKS5vbignaW5wdXQgcHJvcGVydHljaGFuZ2UnLCB0aGlzLmNoZWNrTGVuZ3RoKTtcbn07XG5cbkZvcm1GaWVsZHMucHJvdG90eXBlLmluaXRNYXNrcyA9IGZ1bmN0aW9uICgpIHtcbiAgSW5wdXRtYXNrLmV4dGVuZERlZmluaXRpb25zKHtcbiAgICBwb3NpdGlvbkNhcmV0T25UYWI6IDBcbiAgfSk7XG5cbiAgJCgnLmlzLW1vYmlsZScpLmlucHV0bWFzayh7XCJtYXNrXCI6IFwiKzcgKDk5OSkgOTk5LTk5OTlcIiwgY2xlYXJJbmNvbXBsZXRlOiB0cnVlIH0pO1xufTtcblxuRm9ybUZpZWxkcy5wcm90b3R5cGUudXBsb2FkSW1hZ2UgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciAkbGFiZWwgPSAkKHRoaXMpLmNsb3Nlc3QoJy5mb3JtTGFiZWwnKSxcbiAgICAgIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCksXG4gICAgICBmaWxlID0gJCh0aGlzKS5wcm9wKCdmaWxlcycpWzBdO1xuXG4gIHJlYWRlci5vbmxvYWRlbmQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHJlc3VsdCA9IHJlYWRlci5yZXN1bHQ7XG5cbiAgICAkbGFiZWwuYWRkQ2xhc3MoJ3dpdGgtaW1hZ2UnKTtcbiAgICAkbGFiZWwuY3NzKCdiYWNrZ3JvdW5kLWltYWdlJywgJ3VybChcIicgKyByZXN1bHQgKyAnXCIpJyk7XG4gIH1cblxuICBpZiAoZmlsZSkge1xuICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpOyAvL3JlYWRzIHRoZSBkYXRhIGFzIGEgVVJMXG4gIH0gZWxzZSB7XG4gICAgJGxhYmVsLnJlbW92ZUNsYXNzKCd3aXRoLWltYWdlJyk7XG4gICAgJGxhYmVsLmNzcygnYmFja2dyb3VuZC1pbWFnZScsICcnKTtcbiAgfVxufTtcblxuRm9ybUZpZWxkcy5wcm90b3R5cGUudXBsb2FkQXZhdGFyID0gZnVuY3Rpb24gKCkge1xuICB2YXIgJGxhYmVsID0gJCh0aGlzKS5jbG9zZXN0KCcuZm9ybUxhYmVsJyksXG4gICAgICAkaW5mbyA9ICRsYWJlbC5maW5kKCcuZm9ybUxhYmVsX19hdmF0YXJJbmZvJyksXG4gICAgICAkaW1nID0gJGxhYmVsLmZpbmQoJy5mb3JtTGFiZWxfX2F2YXRhckltZycpLFxuICAgICAgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKSxcbiAgICAgIGZpbGUgPSAkKHRoaXMpLnByb3AoJ2ZpbGVzJylbMF07XG5cbiAgcmVhZGVyLm9ubG9hZGVuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcmVzdWx0ID0gcmVhZGVyLnJlc3VsdDtcblxuICAgICRsYWJlbC5hZGRDbGFzcygnd2l0aC1pbWFnZScpO1xuICAgICRpbWcuYXR0cignc3JjJywgcmVzdWx0KTtcbiAgICAkaW5mby50ZXh0KCfQuNC30LzQtdC90LjRgtGMINGE0L7RgtC+Jyk7XG4gIH1cblxuICBpZiAoZmlsZSkge1xuICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpOyAvL3JlYWRzIHRoZSBkYXRhIGFzIGEgVVJMXG4gIH0gZWxzZSB7XG4gICAgJGxhYmVsLnJlbW92ZUNsYXNzKCd3aXRoLWltYWdlJyk7XG4gICAgJGltZy5hdHRyKCdzcmMnLCAnJyk7XG4gICAgJGluZm8udGV4dCgn0LfQsNCz0YDRg9C30LjRgtGMINGE0L7RgtC+Jyk7XG4gIH1cbn07XG5cbkZvcm1GaWVsZHMucHJvdG90eXBlLmNoZWNrTGVuZ3RoID0gZnVuY3Rpb24gKCkge1xuICB2YXIgJGluZm8gPSAkKHRoaXMpLmNsb3Nlc3QoJy5mb3JtTGFiZWwnKS5maW5kKCcuZmllbGQtbGVuZ3RoJyksXG4gICAgICAkaW5mb0xlbmd0aCA9ICRpbmZvLmZpbmQoJy5maWVsZC1sZW5ndGgtY3VycmVudCcpLFxuICAgICAgbWF4TGVuZ3RoID0gKyQodGhpcykuYXR0cignbWF4bGVuZ3RoJyksXG4gICAgICBmaWVsZExlbmd0aCA9ICQodGhpcykudmFsKCkubGVuZ3RoLFxuICAgICAgbGVuZ3RoUmVtYWluZWQgPSBtYXhMZW5ndGggLSBmaWVsZExlbmd0aDtcblxuICAkaW5mby50b2dnbGVDbGFzcygnaXMtZnVsbCcsIGxlbmd0aFJlbWFpbmVkID09IDApO1xuICAkaW5mb0xlbmd0aC50ZXh0KGxlbmd0aFJlbWFpbmVkKTtcbn07XG52YXIgUGx1ZyA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5pbml0KCk7XG59O1xuXG5QbHVnLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLnNob3dQbHVnUG9wdXAoKTtcbn07XG5cblBsdWcucHJvdG90eXBlLnNob3dQbHVnUG9wdXAgPSBmdW5jdGlvbiAoKSB7XG4gICQoJy5wb3B1cC1wbHVnJykuYlBvcHVwKHtcbiAgICBvcGFjaXR5OiAwLjUsXG4gICAgZm9sbG93OiBbdHJ1ZSwgZmFsc2VdLFxuICAgIGNsb3NlQ2xhc3M6ICdwb3B1cC1jbG9zZSdcbiAgfSk7XG59O1xudmFyIFBvcHVwcyA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLmJvZHkgPSAkKCdib2R5Jyk7XG4gIHRoaXMuYlBvcHVwT3BlbmVkID0gZmFsc2U7XG4gIHRoaXMuaW5pdCgpO1xufTtcblxuUG9wdXBzLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLmJvZHkub24oJ2NsaWNrJywgJy5wb3B1cC1vcGVuJywgdGhpcy5vcGVuUG9wdXAuYmluZCh0aGlzKSk7XG59O1xuXG5Qb3B1cHMucHJvdG90eXBlLm9wZW5Qb3B1cCA9IGZ1bmN0aW9uKGUpIHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICB0YXJnZXQgPSAkKGUudGFyZ2V0KS5jbG9zZXN0KCcucG9wdXAtb3BlbicpLmRhdGEoJ3BvcHVwJyksXG4gICAgICAkdGFyZ2V0ID0gJCgnLicgKyB0YXJnZXQpLFxuICAgICAgY2xvc2VFbCA9ICdwb3B1cC1jbG9zZSc7XG5cbiAgaWYgKHRoaXMuYlBvcHVwT3BlbmVkKSB7XG4gICAgdGhpcy5iUG9wdXBPcGVuZWQuYlBvcHVwKCkuY2xvc2UoKTtcbiAgfVxuXG4gIHRoaXMuYlBvcHVwT3BlbmVkID0gJHRhcmdldC5iUG9wdXAoe1xuICAgIG9wYWNpdHk6IDAuNSxcbiAgICBmb2xsb3c6IFt0cnVlLCBmYWxzZV0sXG4gICAgY2xvc2VDbGFzczogY2xvc2VFbCxcbiAgICBvbk9wZW46IGZ1bmN0aW9uKCkge1xuICAgICAgc2VsZi5ib2R5LmFkZENsYXNzKCdwb3B1cC1vcGVuZWQnKTtcbiAgICB9LFxuICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkge1xuICAgICAgc2VsZi5iUG9wdXBPcGVuZWQgPSAnJztcbiAgICAgIHNlbGYuYm9keS5yZW1vdmVDbGFzcygncG9wdXAtb3BlbmVkJyk7XG4gICAgfVxuICB9KTtcbn07XG52YXIgVGFicyA9IGZ1bmN0aW9uKGNvbnRhaW5lcikge1xuICB0aGlzLmNvbnRhaW5lciA9ICQoY29udGFpbmVyKTtcbiAgdGhpcy5jb250ZW50ID0gdGhpcy5jb250YWluZXIuZmluZCgnLnRhYi1jb250ZW50Jyk7XG4gIHRoaXMubGlua3MgPSB0aGlzLmNvbnRhaW5lci5maW5kKCcudGFiLWxpbmsnKTtcbiAgdGhpcy5pbml0KCk7XG59O1xuXG5UYWJzLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLmNoZWNrQWN0aXZlQ29udGVudCgpO1xuICB0aGlzLmxpbmtzLm9uKCdjbGljaycsIHRoaXMuc3dpdGNoQ29udGVudC5iaW5kKHRoaXMpKTtcbn07XG5cblRhYnMucHJvdG90eXBlLmNoZWNrQWN0aXZlQ29udGVudCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyICRhY3RpdmUgPSB0aGlzLmxpbmtzLmZpbHRlcignLmlzLWFjdGl2ZScpLFxuICAgICAgaW5kZXggPSB0aGlzLmxpbmtzLmluZGV4KCRhY3RpdmUpO1xuXG4gIHRoaXMuY29udGVudC5lcShpbmRleCkuYWRkQ2xhc3MoJ2lzLWFjdGl2ZScpO1xuXG4gICQod2luZG93KS50cmlnZ2VyKCdyZXNpemUnKTsgLy8gdG8gcmVjYWxjdWxhdGUgZW1wdHkgYmxvY2sgcG9zaXRpb25cbn07XG5cblRhYnMucHJvdG90eXBlLnN3aXRjaENvbnRlbnQgPSBmdW5jdGlvbiAoZSkge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIHZhciAkdGFyZ2V0ID0gJChlLnRhcmdldCk7XG5cbiAgaWYgKCR0YXJnZXQuaGFzQ2xhc3MoJ2lzLWFjdGl2ZScpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdGhpcy5saW5rcy5yZW1vdmVDbGFzcygnaXMtYWN0aXZlJyk7XG4gIHRoaXMuY29udGVudC5yZW1vdmVDbGFzcygnaXMtYWN0aXZlJyk7XG4gICR0YXJnZXQuYWRkQ2xhc3MoJ2lzLWFjdGl2ZScpO1xuICB0aGlzLmNoZWNrQWN0aXZlQ29udGVudCgpO1xufTtcbnZhciBUb29sdGlwID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuY29udGVudCA9ICQoJy50b29sdGlwLWNvbnRlbnQnKTtcbiAgdGhpcy5saW5rcyA9ICQoJy50b29sdGlwLWxpbmsnKTtcbiAgdGhpcy5pbml0KCk7XG59O1xuXG5Ub29sdGlwLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgdGhpcy5saW5rcy5vbignY2xpY2snLCB0aGlzLnN3aXRjaFRvb2x0aXAuYmluZCh0aGlzKSk7XG4gICQoJ2JvZHknKS5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgIGlmICghJChlLnRhcmdldCkuY2xvc2VzdCgnLnRvb2x0aXAtbGluaycpLmxlbmd0aCkge1xuICAgICAgc2VsZi5jbG9zZVRvb2x0aXBzKCk7XG4gICAgfVxuICB9KTtcbn07XG5cblRvb2x0aXAucHJvdG90eXBlLnN3aXRjaFRvb2x0aXAgPSBmdW5jdGlvbiAoZSkge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgdmFyICR0YXJnZXQgPSAkKGUudGFyZ2V0KS5jbG9zZXN0KCcudG9vbHRpcC1saW5rJyksXG4gICAgICAkdGFyZ2V0Q29udGVudCA9ICR0YXJnZXQuY2xvc2VzdCgnLnRvb2x0aXAtY29udGFpbmVyJykuZmluZCgnLnRvb2x0aXAtY29udGVudCcpO1xuXG4gIGlmICghJHRhcmdldC5oYXNDbGFzcygnaXMtYWN0aXZlJykpIHtcbiAgICB0aGlzLmNsb3NlVG9vbHRpcHMoKTtcblxuICAgICR0YXJnZXQuYWRkQ2xhc3MoJ2lzLWFjdGl2ZScpO1xuICAgICR0YXJnZXRDb250ZW50LnN0b3AoKS5mYWRlSW4oKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmNsb3NlVG9vbHRpcHMoKTtcbiAgfVxufTtcblxuVG9vbHRpcC5wcm90b3R5cGUuY2xvc2VUb29sdGlwcyA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5saW5rcy5yZW1vdmVDbGFzcygnaXMtYWN0aXZlJyk7XG4gIHRoaXMuY29udGVudC5zdG9wKCkuZmFkZU91dCgpO1xufTtcblxudmFyIFZhY2FuY2llcyA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5zaG93TGluayA9ICQoJy52YWNhbmN5LXNob3cnKTtcbiAgdGhpcy5oaWRlTGluayA9ICQoJy52YWNhbmN5LWNsb3NlJyk7XG4gIHRoaXMuYWRkVmFjYW5jeUxpbmsgPSAkKCcudmFjYW5jeS1hZGQnKTtcblxuICB0aGlzLmFkZFZhY2FuY3lDb250YWluZXIgPSAkKCcudmFjYW5jeUFkZCcpO1xuICB0aGlzLnZhY2FuY2llc0luZm8gPSAkKCcudmFjYW5jeS1pbmZvJyk7XG4gIHRoaXMudmFjYW5jeU1hcCA9ICQoJy52YWNhbmN5LW1hcCcpO1xuICB0aGlzLmJvZHlPdmVybGF5ID0gJCgnLmNvbnRlbnRXcmFwcGVyX19vdmVybGF5Jyk7XG5cbiAgdGhpcy5pbml0KCk7XG59O1xuXG5WYWNhbmNpZXMucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuc2hvd0xpbmsub24oJ2NsaWNrJywgdGhpcy5zaG93VmFjYW5jeS5iaW5kKHRoaXMpKTtcbiAgdGhpcy5oaWRlTGluay5vbignY2xpY2snLCB0aGlzLmhpZGVWYWNhbmN5LmJpbmQodGhpcykpO1xuICB0aGlzLnZhY2FuY2llc0luZm8ub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gIH0pO1xuICB0aGlzLmFkZFZhY2FuY3lMaW5rLm9uKCdjbGljaycsIHRoaXMuYWRkVmFjYW5jeS5iaW5kKHRoaXMpKTtcbn07XG5cblZhY2FuY2llcy5wcm90b3R5cGUuc2hvd1ZhY2FuY3kgPSBmdW5jdGlvbiAoZSkge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIHZhciAkdGFyZ2V0VmFjYW5jeSA9ICQoZS50YXJnZXQpLmNsb3Nlc3QoJy52YWNhbmN5LXNob3cnKS5maW5kKCcudmFjYW5jeS1pbmZvJyk7XG5cbiAgJHRhcmdldFZhY2FuY3kuYWRkQ2xhc3MoJ2lzLWFjdGl2ZScpO1xuICB0aGlzLmJvZHlPdmVybGF5LmFkZENsYXNzKCdpcy1hY3RpdmUnKTtcbiAgdGhpcy5pbml0TWFwKCR0YXJnZXRWYWNhbmN5KTtcbn07XG5cblZhY2FuY2llcy5wcm90b3R5cGUuaGlkZVZhY2FuY3kgPSBmdW5jdGlvbiAoZSkge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIHRoaXMuYm9keU92ZXJsYXkucmVtb3ZlQ2xhc3MoJ2lzLWFjdGl2ZScpO1xuICB0aGlzLnZhY2FuY2llc0luZm8ucmVtb3ZlQ2xhc3MoJ2lzLWFjdGl2ZScpO1xuICB0aGlzLnZhY2FuY3lNYXAuYXR0cignaWQnLCAnJyk7XG59O1xuXG5WYWNhbmNpZXMucHJvdG90eXBlLmluaXRNYXAgPSBmdW5jdGlvbiAoJHRhcmdldFZhY2FuY3kpIHtcbiAgdmFyICRtYXBDb250YWluZXIgPSAkdGFyZ2V0VmFjYW5jeS5maW5kKCcudmFjYW5jeS1tYXAnKSxcbiAgICAgIGhhc01hcCA9ICRtYXBDb250YWluZXIuZGF0YSgnbWFwJyk7XG5cbiAgaWYgKGhhc01hcCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBhZGRyZXNzID0gJG1hcENvbnRhaW5lci5kYXRhKCdhZGRyZXNzJyksXG4gICAgICBtYXBJZCA9ICd2YWNhbmN5LW1hcCc7XG5cbiAgJG1hcENvbnRhaW5lci5hdHRyKCdpZCcsIG1hcElkKTtcbiAgeW1hcHMucmVhZHkoaW5pdCk7XG5cbiAgZnVuY3Rpb24gaW5pdCgpIHtcbiAgICB2YXIgZ2VvY29kZXIgPSBuZXcgeW1hcHMuZ2VvY29kZShcbiAgICAgIGFkZHJlc3MsXG4gICAgICB7IHJlc3VsdHM6IDEgfVxuICAgICk7XG5cbiAgICAvLyDQn9C+0YHQu9C1INGC0L7Qs9C+LCDQutCw0Log0L/QvtC40YHQuiDQstC10YDQvdGD0Lsg0YDQtdC30YPQu9GM0YLQsNGCLCDQstGL0LfRi9Cy0LDQtdGC0YHRjyBjYWxsYmFjay3RhNGD0L3QutGG0LjRj1xuICAgIGdlb2NvZGVyLnRoZW4oXG4gICAgICBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgIHZhciBjb29yZCA9IHJlcy5nZW9PYmplY3RzLmdldCgwKS5nZW9tZXRyeS5nZXRDb29yZGluYXRlcygpLFxuICAgICAgICAgICAgbWFwID0gbmV3IHltYXBzLk1hcChtYXBJZCwge1xuICAgICAgICAgICAgICBjZW50ZXI6IGNvb3JkLFxuICAgICAgICAgICAgICB6b29tOiAxNVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgbWFwLmdlb09iamVjdHMuYWRkKHJlcy5nZW9PYmplY3RzLmdldCgwKSk7XG5cbiAgICAgICAgJG1hcENvbnRhaW5lci5kYXRhKCdtYXAnLCB0cnVlKTtcbiAgICAgIH1cbiAgICApO1xuICB9XG59O1xuXG5WYWNhbmNpZXMucHJvdG90eXBlLmFkZFZhY2FuY3kgPSBmdW5jdGlvbiAoZSkge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgdGhpcy5ib2R5T3ZlcmxheS5hZGRDbGFzcygnaXMtYWN0aXZlJyk7XG4gIHRoaXMuYWRkVmFjYW5jeUNvbnRhaW5lci5hZGRDbGFzcygnaXMtYWN0aXZlJyk7XG59O1xudmFyIFByb2ZpbGUgPSBmdW5jdGlvbiAoY29udGFpbmVyKSB7XG4gIHRoaXMuY29udGFpbmVyID0gJChjb250YWluZXIpO1xuICB0aGlzLm1hcElkID0gJ3ZhY2FuY3ktbWFwJztcbiAgdGhpcy5tYXBDb250YWluZXIgPSB0aGlzLmNvbnRhaW5lci5maW5kKCcjJyArIHRoaXMubWFwSWQpO1xuICB0aGlzLmluaXQoKTtcbn07XG5cblByb2ZpbGUucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuaW5pdE1hcCgpO1xufTtcblxuUHJvZmlsZS5wcm90b3R5cGUuaW5pdE1hcCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHNlbGYgPSB0aGlzLFxuICAgICAgYWRkcmVzcyA9IHRoaXMubWFwQ29udGFpbmVyLmRhdGEoJ2FkZHJlc3MnKTtcblxuICB5bWFwcy5yZWFkeShpbml0KTtcblxuICBmdW5jdGlvbiBpbml0KCkge1xuICAgIHZhciBnZW9jb2RlciA9IG5ldyB5bWFwcy5nZW9jb2RlKFxuICAgICAgYWRkcmVzcyxcbiAgICAgIHsgcmVzdWx0czogMSB9XG4gICAgKTtcblxuICAgIC8vINCf0L7RgdC70LUg0YLQvtCz0L4sINC60LDQuiDQv9C+0LjRgdC6INCy0LXRgNC90YPQuyDRgNC10LfRg9C70YzRgtCw0YIsINCy0YvQt9GL0LLQsNC10YLRgdGPIGNhbGxiYWNrLdGE0YPQvdC60YbQuNGPXG4gICAgZ2VvY29kZXIudGhlbihcbiAgICAgIGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgdmFyIGNvb3JkID0gcmVzLmdlb09iamVjdHMuZ2V0KDApLmdlb21ldHJ5LmdldENvb3JkaW5hdGVzKCksXG4gICAgICAgICAgICBtYXAgPSBuZXcgeW1hcHMuTWFwKHNlbGYubWFwSWQsIHtcbiAgICAgICAgICAgICAgY2VudGVyOiBjb29yZCxcbiAgICAgICAgICAgICAgem9vbTogMTVcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIG1hcC5nZW9PYmplY3RzLmFkZChyZXMuZ2VvT2JqZWN0cy5nZXQoMCkpO1xuICAgICAgfVxuICAgICk7XG4gIH1cbn07XG5cbnZhciBWaWV3ZXIgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy53aW5kb3cgPSAkKHdpbmRvdyk7XG4gIHRoaXMuYm9keSA9ICQoJ2JvZHknKTtcbiAgdGhpcy5pbml0KCk7XG59O1xuXG5WaWV3ZXIucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuaW5pdENsYXNzZXMoKTtcbiAgdGhpcy5pbml0RnVuY3Rpb25zKCk7XG5cbiAgdGhpcy53aW5kb3cub24oJ3Jlc2l6ZScsIHRoaXMudXBkYXRlUmVzaXplci5iaW5kKHRoaXMpKTtcbn07XG5cblZpZXdlci5wcm90b3R5cGUuaW5pdENsYXNzZXMgPSBmdW5jdGlvbiAoKSB7XG4gIGlmICgkKCcucG9wdXAtcGx1ZycpLmxlbmd0aCkge1xuICAgIG5ldyBQbHVnKCk7XG4gIH1cbiAgaWYgKCQoJy50b29sdGlwLWNvbnRhaW5lcicpLmxlbmd0aCkge1xuICAgIG5ldyBUb29sdGlwKCk7XG4gIH1cbiAgJCgnLnRhYnMtY29udGFpbmVyJykuZWFjaChmdW5jdGlvbigpIHtcbiAgICBuZXcgVGFicyh0aGlzKTtcbiAgfSk7XG4gICQoJy5lbXB0eS1ibG9jaycpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgbmV3IEVtcHR5QmxvY2sodGhpcyk7XG4gIH0pO1xuICAkKCcucGVyc29uJykuZWFjaChmdW5jdGlvbigpIHtcbiAgICBuZXcgUHJvZmlsZSh0aGlzKTtcbiAgfSk7XG4gIG5ldyBGb3JtRmllbGRzKCk7XG4gIG5ldyBQb3B1cHMoKTtcbiAgbmV3IFZhY2FuY2llcygpO1xufTtcblxuVmlld2VyLnByb3RvdHlwZS5pbml0RnVuY3Rpb25zID0gZnVuY3Rpb24gKCkge1xuXG59O1xuXG5WaWV3ZXIucHJvdG90eXBlLnVwZGF0ZVJlc2l6ZXIgPSBmdW5jdGlvbiAoKSB7XG5cbn07XG5cblxuXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcbiAgd2luZG93LnZpZXdlciA9IG5ldyBWaWV3ZXIoKTtcbn0pOyJdfQ==
